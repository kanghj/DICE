[INFO ] 2019-09-24 15:53:07,793: Using timeout: 30000
[-Dadabu.resultfilename=/tautoko/examples/tmp/trace.ser, -Dadabu.debug=true, -Dadabu.exclusionpattern=.*ClassLoader.*|java/lang/.*|java/io/.*|sun/misc.*|sun/reflect/.*|sun/net/.*|sun/instrument/.*, -Xbootclasspath/a:/tautoko/lib/adabu-tracer-0.5.jar:/tautoko/lib/adabu-core-0.5.jar:/tautoko/lib/commons-collections-3.2.1.jar:/tautoko/lib/asm-tree-3.1.jar:/tautoko/lib/asm-3.1.jar:/tautoko/lib/asm-commons-3.1.jar:/tautoko/lib/asm-util-3.1.jar, -javaagent:/tautoko/lib/adabu-tracer-0.5.jar]
[DEBUG] 2019-09-24 15:53:12,685: 25% done.
[DEBUG] 2019-09-24 15:53:12,921: 49% done.
[DEBUG] 2019-09-24 15:53:13,483: 73% done.
[INFO ] 2019-09-24 15:53:13,612: Mined 216 initial models.
[DEBUG] 2019-09-24 15:53:13,673: Models:[digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3284, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3284}"];
	2 -> 2 [label="nextIsSep()Z{0=3284},countTokens()I{0=3284},hasMoreTokens()Z{0=3284},nextIsSep()Z{0=3284},nextIsSep()Z{0=3284},nextIsSep()Z{0=3284},countTokens()I{0=3284},countTokens()I{0=3284}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3830, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3830}"];
	2 -> 2 [label="countTokens()I{0=3830},countTokens()I{0=3830},reset()V{0=3830},nextIsSep()Z{0=3830},nextIsSep()Z{0=3830},nextIsSep()Z{0=3830}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3830}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=3830}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5488, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5488}"];
	2 -> 2 [label="nextIsSep()Z{0=5488},nextIsSep()Z{0=5488},isLetterOrDigitAhead()Z{0=5488},isLetterOrDigitAhead()Z{0=5488}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5488}"];
	3 -> 3 [label="hasMoreTokens()Z{0=5488}"];
	3 -> 2 [label="reset()V{0=5488}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4889, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4889}"];
	2 -> 2 [label="nextIsSep()Z{0=4889},nextIsSep()Z{0=4889},countTokens()I{0=4889},isLetterOrDigitAhead()Z{0=4889},reset()V{0=4889}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4889}"];
	3 -> 2 [label="reset()V{0=4889}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3809, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3809}"];
	2 -> 2 [label="countTokens()I{0=3809},countTokens()I{0=3809},countTokens()I{0=3809},countTokens()I{0=3809},reset()V{0=3809},nextIsSep()Z{0=3809},nextIsSep()Z{0=3809},nextIsSep()Z{0=3809}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5960, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5960}"];
	2 -> 2 [label="reset()V{0=5960},isLetterOrDigitAhead()Z{0=5960},nextIsSep()Z{0=5960},nextIsSep()Z{0=5960},hasMoreTokens()Z{0=5960}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2186, 1=109}"];
	1 -> 2 [label="reset()V{0=2186}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2186}"];
	0 [label=""];
	1 [label="maxPosition: 0,str: 109"];
	2 [label="currentPosition: 0,maxPosition: 0,str: 109"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2731, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2731}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2731},countTokens()I{0=2731},countTokens()I{0=2731},isLetterOrDigitAhead()Z{0=2731}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2731}"];
	3 -> 3 [label="countTokens()I{0=2731},countTokens()I{0=2731},countTokens()I{0=2731},hasMoreTokens()Z{0=2731}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4879, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4879}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4879},nextIsSep()Z{0=4879},countTokens()I{0=4879}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4396, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4396}"];
	2 -> 2 [label="nextIsSep()Z{0=4396},nextIsSep()Z{0=4396},countTokens()I{0=4396}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4396},nextToken()Ljava/lang/String;{0=4396}"];
	3 -> 3 [label="hasMoreTokens()Z{0=4396}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=4396},nextToken()Ljava/lang/String;{0=4396}"];
	4 -> 2 [label="reset()V{0=4396}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5468, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5468}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5468},countTokens()I{0=5468},nextIsSep()Z{0=5468},nextIsSep()Z{0=5468}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5468}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=5468},countTokens()I{0=5468},isLetterOrDigitAhead()Z{0=5468}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3796, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3796}"];
	2 -> 2 [label="countTokens()I{0=3796},nextIsSep()Z{0=3796},nextIsSep()Z{0=3796},countTokens()I{0=3796},nextIsSep()Z{0=3796}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3324, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3324}"];
	2 -> 2 [label="nextIsSep()Z{0=3324},nextIsSep()Z{0=3324},nextIsSep()Z{0=3324},countTokens()I{0=3324},hasMoreTokens()Z{0=3324},reset()V{0=3324},reset()V{0=3324},reset()V{0=3324}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4376, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4376}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4376},nextIsSep()Z{0=4376},nextIsSep()Z{0=4376}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4376}"];
	3 -> 3 [label="countTokens()I{0=4376},nextIsSep()Z{0=4376},hasMoreTokens()Z{0=4376},hasMoreTokens()Z{0=4376}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3303, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3303}"];
	2 -> 2 [label="nextIsSep()Z{0=3303},nextIsSep()Z{0=3303},countTokens()I{0=3303},isLetterOrDigitAhead()Z{0=3303}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3303}"];
	3 -> 3 [label="nextIsSep()Z{0=3303},countTokens()I{0=3303},isLetterOrDigitAhead()Z{0=3303}"];
	3 -> 2 [label="reset()V{0=3303}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2702, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2702}"];
	2 -> 2 [label="countTokens()I{0=2702},nextIsSep()Z{0=2702},nextIsSep()Z{0=2702},isLetterOrDigitAhead()Z{0=2702}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2702}"];
	3 -> 3 [label="hasMoreTokens()Z{0=2702}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5452, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5452}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5452},countTokens()I{0=5452},nextIsSep()Z{0=5452},isLetterOrDigitAhead()Z{0=5452},countTokens()I{0=5452}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5452}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4358, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4358}"];
	2 -> 2 [label="nextIsSep()Z{0=4358},nextIsSep()Z{0=4358},countTokens()I{0=4358},countTokens()I{0=4358},isLetterOrDigitAhead()Z{0=4358}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4358}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=4358}"];
	3 -> 2 [label="reset()V{0=4358}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3782, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3782}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3782},nextIsSep()Z{0=3782},countTokens()I{0=3782},isLetterOrDigitAhead()Z{0=3782},nextIsSep()Z{0=3782}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2695, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2695}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2695},nextIsSep()Z{0=2695}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4904, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4904}"];
	2 -> 2 [label="nextIsSep()Z{0=4904},nextIsSep()Z{0=4904},countTokens()I{0=4904},isLetterOrDigitAhead()Z{0=4904}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4904}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=4904},nextIsSep()Z{0=4904},isLetterOrDigitAhead()Z{0=4904}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=4904}"];
	4 -> 4 [label="hasMoreTokens()Z{0=4904}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5918, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5918}"];
	2 -> 2 [label="nextIsSep()Z{0=5918},nextIsSep()Z{0=5918},hasMoreTokens()Z{0=5918},countTokens()I{0=5918},countTokens()I{0=5918},hasMoreTokens()Z{0=5918}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5432, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5432}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5432},countTokens()I{0=5432},isLetterOrDigitAhead()Z{0=5432},countTokens()I{0=5432}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5432}"];
	3 -> 3 [label="hasMoreTokens()Z{0=5432},nextIsSep()Z{0=5432},hasMoreTokens()Z{0=5432}"];
	3 -> 2 [label="reset()V{0=5432}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3224, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3224}"];
	2 -> 2 [label="countTokens()I{0=3224},countTokens()I{0=3224},reset()V{0=3224},hasMoreTokens()Z{0=3224},nextIsSep()Z{0=3224},countTokens()I{0=3224},countTokens()I{0=3224},isLetterOrDigitAhead()Z{0=3224},nextIsSep()Z{0=3224}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2256, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2256}"];
	2 -> 2 [label="nextIsSep()Z{0=2256},nextIsSep()Z{0=2256},nextIsSep()Z{0=2256},countTokens()I{0=2256},countTokens()I{0=2256}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2256}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3771, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3771}"];
	2 -> 2 [label="nextIsSep()Z{0=3771}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3771}"];
	3 -> 3 [label="countTokens()I{0=3771}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4474, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4474}"];
	2 -> 2 [label="nextIsSep()Z{0=4474},reset()V{0=4474},countTokens()I{0=4474},countTokens()I{0=4474},nextIsSep()Z{0=4474},countTokens()I{0=4474}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2805, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2805}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2805},countTokens()I{0=2805},countTokens()I{0=2805},isLetterOrDigitAhead()Z{0=2805},countTokens()I{0=2805},countTokens()I{0=2805}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2805}"];
	3 -> 3 [label="countTokens()I{0=2805},nextIsSep()Z{0=2805},hasMoreTokens()Z{0=2805}"];
	3 -> 2 [label="reset()V{0=2805}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4930, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4930}"];
	2 -> 2 [label="countTokens()I{0=4930},nextIsSep()Z{0=4930},nextIsSep()Z{0=4930}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4930}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=4930}"];
	4 -> 4 [label="@nextIsSep()Z{0=4930}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3746, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3746}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3746},countTokens()I{0=3746},isLetterOrDigitAhead()Z{0=3746},countTokens()I{0=3746}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3746}"];
	3 -> 3 [label="nextIsSep()Z{0=3746},hasMoreTokens()Z{0=3746},countTokens()I{0=3746}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=3746}"];
	4 -> 4 [label="countTokens()I{0=3746}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4448, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4448}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4448},isLetterOrDigitAhead()Z{0=4448},hasMoreTokens()Z{0=4448},countTokens()I{0=4448},isLetterOrDigitAhead()Z{0=4448},nextIsSep()Z{0=4448},nextIsSep()Z{0=4448},nextIsSep()Z{0=4448}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4448}"];
	3 -> 3 [label="hasMoreTokens()Z{0=4448}"];
	3 -> 2 [label="reset()V{0=4448}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3209, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3209}"];
	2 -> 2 [label="reset()V{0=3209},countTokens()I{0=3209},countTokens()I{0=3209},countTokens()I{0=3209},reset()V{0=3209},nextIsSep()Z{0=3209},nextIsSep()Z{0=3209},nextIsSep()Z{0=3209}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5892, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5892}"];
	2 -> 2 [label="nextIsSep()Z{0=5892},nextIsSep()Z{0=5892},countTokens()I{0=5892}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5892}"];
	3 -> 3 [label="hasMoreTokens()Z{0=5892},nextIsSep()Z{0=5892},isLetterOrDigitAhead()Z{0=5892},isLetterOrDigitAhead()Z{0=5892},nextIsSep()Z{0=5892},hasMoreTokens()Z{0=5892},isLetterOrDigitAhead()Z{0=5892}"];
	3 -> 2 [label="reset()V{0=5892}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2784, 1=109}"];
	1 -> 2 [label="isLetterOrDigitAhead()Z{0=2784}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2784}"];
	0 [label=""];
	1 [label="maxPosition: 0,str: 109"];
	2 [label="currentPosition: 0,maxPosition: 0,str: 109"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5412, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5412}"];
	2 -> 2 [label="nextIsSep()Z{0=5412},nextIsSep()Z{0=5412},countTokens()I{0=5412},isLetterOrDigitAhead()Z{0=5412}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5412}"];
	3 -> 3 [label="hasMoreTokens()Z{0=5412},isLetterOrDigitAhead()Z{0=5412},isLetterOrDigitAhead()Z{0=5412}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2789, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2789}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2789},countTokens()I{0=2789},isLetterOrDigitAhead()Z{0=2789},countTokens()I{0=2789},reset()V{0=2789},nextIsSep()Z{0=2789},nextIsSep()Z{0=2789}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3250, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3250}"];
	2 -> 2 [label="nextIsSep()Z{0=3250},reset()V{0=3250},hasMoreTokens()Z{0=3250},isLetterOrDigitAhead()Z{0=3250},isLetterOrDigitAhead()Z{0=3250},reset()V{0=3250}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4981, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4981}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4981},nextIsSep()Z{0=4981},nextIsSep()Z{0=4981},countTokens()I{0=4981}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2297, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2297}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2297},countTokens()I{0=2297},countTokens()I{0=2297},isLetterOrDigitAhead()Z{0=2297}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2297}"];
	3 -> 3 [label="nextIsSep()Z{0=2297},isLetterOrDigitAhead()Z{0=2297},nextIsSep()Z{0=2297}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5393, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5393}"];
	2 -> 2 [label="nextIsSep()Z{0=5393},nextIsSep()Z{0=5393},countTokens()I{0=5393},hasMoreTokens()Z{0=5393},isLetterOrDigitAhead()Z{0=5393},reset()V{0=5393}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5393}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=5393}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3261, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3261}"];
	2 -> 2 [label="nextIsSep()Z{0=3261},countTokens()I{0=3261},reset()V{0=3261},countTokens()I{0=3261},countTokens()I{0=3261},nextIsSep()Z{0=3261},nextIsSep()Z{0=3261},nextIsSep()Z{0=3261}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5933, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5933}"];
	2 -> 2 [label="nextIsSep()Z{0=5933},countTokens()I{0=5933},nextIsSep()Z{0=5933},countTokens()I{0=5933}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5933}"];
	3 -> 3 [label="nextIsSep()Z{0=5933},nextIsSep()Z{0=5933}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2767, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2767}"];
	2 -> 2 [label="nextIsSep()Z{0=2767},nextIsSep()Z{0=2767},hasMoreTokens()Z{0=2767},countTokens()I{0=2767}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2767},nextToken()Ljava/lang/String;{0=2767}"];
	3 -> 2 [label="reset()V{0=2767}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4966, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4966}"];
	2 -> 2 [label="nextIsSep()Z{0=4966},nextIsSep()Z{0=4966},nextIsSep()Z{0=4966},reset()V{0=4966},countTokens()I{0=4966},isLetterOrDigitAhead()Z{0=4966},isLetterOrDigitAhead()Z{0=4966}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2753, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2753}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2753},countTokens()I{0=2753},isLetterOrDigitAhead()Z{0=2753},isLetterOrDigitAhead()Z{0=2753},countTokens()I{0=2753}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2277, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2277}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2277},countTokens()I{0=2277},countTokens()I{0=2277},isLetterOrDigitAhead()Z{0=2277}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2277}"];
	3 -> 3 [label="hasMoreTokens()Z{0=2277},nextIsSep()Z{0=2277},hasMoreTokens()Z{0=2277}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3726, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3726}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3726},countTokens()I{0=3726},isLetterOrDigitAhead()Z{0=3726},countTokens()I{0=3726}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3726}"];
	3 -> 3 [label="countTokens()I{0=3726},nextIsSep()Z{0=3726},hasMoreTokens()Z{0=3726}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2272, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2272}"];
	2 -> 2 [label="reset()V{0=2272},reset()V{0=2272}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3165, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3165}"];
	2 -> 2 [label="reset()V{0=3165},nextIsSep()Z{0=3165}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3165}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=3165}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2612, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2612}"];
	2 -> 2 [label="reset()V{0=2612}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2612}"];
	3 -> 3 [label="countTokens()I{0=2612},countTokens()I{0=2612}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3710, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3710}"];
	2 -> 2 [label="reset()V{0=3710},nextIsSep()Z{0=3710}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3710}"];
	3 -> 3 [label="hasMoreTokens()Z{0=3710},isLetterOrDigitAhead()Z{0=3710},countTokens()I{0=3710}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5014, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5014}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5014},countTokens()I{0=5014},countTokens()I{0=5014},isLetterOrDigitAhead()Z{0=5014}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5014}"];
	3 -> 3 [label="countTokens()I{0=5014}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=5014}"];
	4 -> 4 [label="hasMoreTokens()Z{0=5014}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3696, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3696}"];
	2 -> 2 [label="reset()V{0=3696}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3696}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=3696}"];
	3 -> 2 [label="reset()V{0=3696}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2079, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2079}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2079},nextIsSep()Z{0=2079},nextIsSep()Z{0=2079},nextIsSep()Z{0=2079},countTokens()I{0=2079}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2079}"];
	3 -> 3 [label="hasMoreTokens()Z{0=2079}"];
	3 -> 2 [label="reset()V{0=2079}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5626, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5626}"];
	2 -> 2 [label="reset()V{0=5626}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5626}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=5626}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=5626}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3149, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3149}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3149},countTokens()I{0=3149},nextIsSep()Z{0=3149},nextIsSep()Z{0=3149},reset()V{0=3149}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3149}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=3149}"];
	3 -> 2 [label="reset()V{0=3149}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4522, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4522}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4522},hasMoreTokens()Z{0=4522},reset()V{0=4522},isLetterOrDigitAhead()Z{0=4522},nextIsSep()Z{0=4522},nextIsSep()Z{0=4522},countTokens()I{0=4522},isLetterOrDigitAhead()Z{0=4522}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4522}"];
	3 -> 3 [label="hasMoreTokens()Z{0=4522}"];
	3 -> 2 [label="reset()V{0=4522}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4512, 1=2437}"];
	1 -> 2 [label="nextIsSep()Z{0=4512}"];
	2 -> 2 [label="reset()V{0=4512},countTokens()I{0=4512},reset()V{0=4512}"];
	0 [label=""];
	1 [label="maxPosition: 1,str: 2437"];
	2 [label="currentPosition: 0,maxPosition: 1,str: 2437"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4997, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4997}"];
	2 -> 2 [label="nextIsSep()Z{0=4997},countTokens()I{0=4997},countTokens()I{0=4997},countTokens()I{0=4997}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4997}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5611, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5611}"];
	2 -> 2 [label="countTokens()I{0=5611},countTokens()I{0=5611},isLetterOrDigitAhead()Z{0=5611},nextIsSep()Z{0=5611},isLetterOrDigitAhead()Z{0=5611},countTokens()I{0=5611}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5591, 1=109}"];
	1 -> 2 [label="reset()V{0=5591}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5591},hasMoreTokens()Z{0=5591}"];
	0 [label=""];
	1 [label="maxPosition: 0,str: 109"];
	2 [label="currentPosition: 0,maxPosition: 0,str: 109"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2097, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2097}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2097},countTokens()I{0=2097},countTokens()I{0=2097},isLetterOrDigitAhead()Z{0=2097}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2097}"];
	3 -> 3 [label="hasMoreTokens()Z{0=2097},nextIsSep()Z{0=2097},hasMoreTokens()Z{0=2097}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=2097}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2582, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2582}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2582},countTokens()I{0=2582},nextIsSep()Z{0=2582},nextIsSep()Z{0=2582}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2582}"];
	3 -> 3 [label="countTokens()I{0=2582},isLetterOrDigitAhead()Z{0=2582}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=2582}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3194, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3194}"];
	2 -> 2 [label="countTokens()I{0=3194},nextIsSep()Z{0=3194},countTokens()I{0=3194}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3194},nextToken()Ljava/lang/String;{0=3194}"];
	3 -> 2 [label="reset()V{0=3194}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3679, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3679}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3679},countTokens()I{0=3679},countTokens()I{0=3679},isLetterOrDigitAhead()Z{0=3679}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3679}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=3679}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5596, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5596}"];
	2 -> 2 [label="countTokens()I{0=5596},countTokens()I{0=5596},reset()V{0=5596},isLetterOrDigitAhead()Z{0=5596},nextIsSep()Z{0=5596},nextIsSep()Z{0=5596},nextIsSep()Z{0=5596}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3666, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3666}"];
	2 -> 2 [label="reset()V{0=3666},countTokens()I{0=3666},countTokens()I{0=3666},nextIsSep()Z{0=3666},reset()V{0=3666},countTokens()I{0=3666},nextIsSep()Z{0=3666}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4501, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4501}"];
	2 -> 2 [label="reset()V{0=4501},countTokens()I{0=4501},isLetterOrDigitAhead()Z{0=4501},nextIsSep()Z{0=4501},nextIsSep()Z{0=4501}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4488, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4488}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4488},countTokens()I{0=4488},countTokens()I{0=4488},reset()V{0=4488},reset()V{0=4488}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2560, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2560}"];
	2 -> 2 [label="reset()V{0=2560},hasMoreTokens()Z{0=2560},countTokens()I{0=2560},isLetterOrDigitAhead()Z{0=2560},nextIsSep()Z{0=2560},nextIsSep()Z{0=2560}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3176, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3176}"];
	2 -> 2 [label="countTokens()I{0=3176},isLetterOrDigitAhead()Z{0=3176},isLetterOrDigitAhead()Z{0=3176},countTokens()I{0=3176}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3176}"];
	3 -> 3 [label="nextIsSep()Z{0=3176},nextIsSep()Z{0=3176}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5035, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5035}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5035},isLetterOrDigitAhead()Z{0=5035},countTokens()I{0=5035},reset()V{0=5035},countTokens()I{0=5035},reset()V{0=5035},isLetterOrDigitAhead()Z{0=5035}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5576, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5576}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5576},countTokens()I{0=5576},isLetterOrDigitAhead()Z{0=5576},hasMoreTokens()Z{0=5576},nextIsSep()Z{0=5576},nextIsSep()Z{0=5576}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3654, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3654}"];
	2 -> 2 [label="reset()V{0=3654},countTokens()I{0=3654},countTokens()I{0=3654},nextIsSep()Z{0=3654},nextIsSep()Z{0=3654},reset()V{0=3654}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5555, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5555}"];
	2 -> 2 [label="nextIsSep()Z{0=5555},hasMoreTokens()Z{0=5555},countTokens()I{0=5555},nextIsSep()Z{0=5555},countTokens()I{0=5555},countTokens()I{0=5555}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5555}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=5555}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5085, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5085}"];
	2 -> 2 [label="countTokens()I{0=5085},hasMoreTokens()Z{0=5085},nextIsSep()Z{0=5085},nextIsSep()Z{0=5085},countTokens()I{0=5085}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5085}"];
	3 -> 2 [label="reset()V{0=5085}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2682, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2682}"];
	2 -> 2 [label="countTokens()I{0=2682},nextIsSep()Z{0=2682}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2682}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=2682}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3634, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3634}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3634},nextIsSep()Z{0=3634},countTokens()I{0=3634},nextIsSep()Z{0=3634},hasMoreTokens()Z{0=3634},countTokens()I{0=3634},isLetterOrDigitAhead()Z{0=3634},countTokens()I{0=3634}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3095, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3095}"];
	2 -> 2 [label="countTokens()I{0=3095},isLetterOrDigitAhead()Z{0=3095},isLetterOrDigitAhead()Z{0=3095},countTokens()I{0=3095},isLetterOrDigitAhead()Z{0=3095},countTokens()I{0=3095}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3095}"];
	3 -> 2 [label="reset()V{0=3095}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4594, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4594}"];
	2 -> 2 [label="nextIsSep()Z{0=4594},countTokens()I{0=4594},nextIsSep()Z{0=4594},nextIsSep()Z{0=4594},countTokens()I{0=4594},countTokens()I{0=4594},isLetterOrDigitAhead()Z{0=4594}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4594}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=4594}"];
	4 -> 4 [label="@nextIsSep()Z{0=4594}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2659, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2659}"];
	2 -> 2 [label="nextIsSep()Z{0=2659},nextIsSep()Z{0=2659}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3082, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3082}"];
	2 -> 2 [label="countTokens()I{0=3082},countTokens()I{0=3082},isLetterOrDigitAhead()Z{0=3082},nextIsSep()Z{0=3082},countTokens()I{0=3082}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2666, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2666}"];
	2 -> 2 [label="countTokens()I{0=2666},nextIsSep()Z{0=2666},nextIsSep()Z{0=2666},isLetterOrDigitAhead()Z{0=2666},countTokens()I{0=2666},isLetterOrDigitAhead()Z{0=2666}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3075, 1=109}"];
	1 -> 2 [label="countTokens()I{0=3075}"];
	0 [label=""];
	1 [label="maxPosition: 0,str: 109"];
	2 [label="currentPosition: 0,maxPosition: 0,str: 109"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4577, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4577}"];
	2 -> 2 [label="countTokens()I{0=4577},isLetterOrDigitAhead()Z{0=4577},countTokens()I{0=4577},nextIsSep()Z{0=4577},countTokens()I{0=4577},countTokens()I{0=4577},nextIsSep()Z{0=4577}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3616, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3616}"];
	2 -> 2 [label="countTokens()I{0=3616},countTokens()I{0=3616},nextIsSep()Z{0=3616},nextIsSep()Z{0=3616},nextIsSep()Z{0=3616}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3616}"];
	3 -> 3 [label="hasMoreTokens()Z{0=3616}"];
	3 -> 2 [label="reset()V{0=3616}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3129, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3129}"];
	2 -> 2 [label="countTokens()I{0=3129},isLetterOrDigitAhead()Z{0=3129},isLetterOrDigitAhead()Z{0=3129},countTokens()I{0=3129}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3129}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=3129},hasMoreTokens()Z{0=3129},nextIsSep()Z{0=3129}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2164, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2164}"];
	2 -> 2 [label="nextIsSep()Z{0=2164},nextIsSep()Z{0=2164},nextIsSep()Z{0=2164},countTokens()I{0=2164},reset()V{0=2164}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2164}"];
	3 -> 3 [label="hasMoreTokens()Z{0=2164}"];
	3 -> 2 [label="reset()V{0=2164}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5531, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5531}"];
	2 -> 2 [label="nextIsSep()Z{0=5531},nextIsSep()Z{0=5531},nextIsSep()Z{0=5531},countTokens()I{0=5531},reset()V{0=5531},countTokens()I{0=5531},countTokens()I{0=5531}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5531}"];
	3 -> 3 [label="countTokens()I{0=5531},isLetterOrDigitAhead()Z{0=5531},countTokens()I{0=5531}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3127, 1=1961}"];
	1 -> 2 [label="reset()V{0=3127}"];
	0 [label=""];
	1 [label="maxPosition: 2,str: 1961"];
	2 [label="currentPosition: 0,maxPosition: 2,str: 1961"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4560, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4560}"];
	2 -> 2 [label="countTokens()I{0=4560},countTokens()I{0=4560},nextIsSep()Z{0=4560},hasMoreTokens()Z{0=4560},nextIsSep()Z{0=4560},countTokens()I{0=4560},nextIsSep()Z{0=4560}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3115, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3115}"];
	2 -> 2 [label="countTokens()I{0=3115},reset()V{0=3115},nextIsSep()Z{0=3115},countTokens()I{0=3115},nextIsSep()Z{0=3115}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2151, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2151}"];
	2 -> 2 [label="countTokens()I{0=2151},nextIsSep()Z{0=2151},nextIsSep()Z{0=2151}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2151}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2626, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2626}"];
	2 -> 2 [label="nextIsSep()Z{0=2626},countTokens()I{0=2626}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2626}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3599, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3599}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3599},countTokens()I{0=3599},isLetterOrDigitAhead()Z{0=3599},reset()V{0=3599},isLetterOrDigitAhead()Z{0=3599},countTokens()I{0=3599}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3599}"];
	3 -> 2 [label="reset()V{0=3599}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5510, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5510}"];
	2 -> 2 [label="countTokens()I{0=5510},countTokens()I{0=5510},isLetterOrDigitAhead()Z{0=5510},countTokens()I{0=5510},isLetterOrDigitAhead()Z{0=5510},countTokens()I{0=5510}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5510},nextToken()Ljava/lang/String;{0=5510}"];
	3 -> 2 [label="reset()V{0=5510},reset()V{0=5510}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5101, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5101}"];
	2 -> 2 [label="nextIsSep()Z{0=5101},hasMoreTokens()Z{0=5101},isLetterOrDigitAhead()Z{0=5101},nextIsSep()Z{0=5101},nextIsSep()Z{0=5101},isLetterOrDigitAhead()Z{0=5101},countTokens()I{0=5101},countTokens()I{0=5101}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2637, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2637}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2637},isLetterOrDigitAhead()Z{0=2637},countTokens()I{0=2637},isLetterOrDigitAhead()Z{0=2637},countTokens()I{0=2637}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2637}"];
	3 -> 3 [label="countTokens()I{0=2637},countTokens()I{0=2637}"];
	3 -> 2 [label="reset()V{0=2637}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4544, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4544}"];
	2 -> 2 [label="countTokens()I{0=4544},reset()V{0=4544},isLetterOrDigitAhead()Z{0=4544},isLetterOrDigitAhead()Z{0=4544},countTokens()I{0=4544},isLetterOrDigitAhead()Z{0=4544}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4544}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4064, 1=2437}"];
	1 -> 2 [label="isLetterOrDigitAhead()Z{0=4064}"];
	0 [label=""];
	1 [label="maxPosition: 1,str: 2437"];
	2 [label="currentPosition: 0,maxPosition: 1,str: 2437"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2986, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2986}"];
	2 -> 2 [label="countTokens()I{0=2986},nextIsSep()Z{0=2986},nextIsSep()Z{0=2986},reset()V{0=2986}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2986}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=2986},nextIsSep()Z{0=2986}"];
	3 -> 2 [label="reset()V{0=2986}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4073, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4073}"];
	2 -> 2 [label="nextIsSep()Z{0=4073},nextIsSep()Z{0=4073},countTokens()I{0=4073}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4073}"];
	3 -> 3 [label="hasMoreTokens()Z{0=4073}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2439, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2439}"];
	2 -> 2 [label="countTokens()I{0=2439},isLetterOrDigitAhead()Z{0=2439},isLetterOrDigitAhead()Z{0=2439},countTokens()I{0=2439}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2439}"];
	3 -> 3 [label="hasMoreTokens()Z{0=2439},nextIsSep()Z{0=2439},countTokens()I{0=2439}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=2439}"];
	4 -> 2 [label="reset()V{0=2439}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4617, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4617}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4617},countTokens()I{0=4617},nextIsSep()Z{0=4617},nextIsSep()Z{0=4617}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4617}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=4617},isLetterOrDigitAhead()Z{0=4617},nextIsSep()Z{0=4617}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=4617}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4142, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4142}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4142},countTokens()I{0=4142},isLetterOrDigitAhead()Z{0=4142},countTokens()I{0=4142}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4142}"];
	3 -> 3 [label="countTokens()I{0=4142},countTokens()I{0=4142},countTokens()I{0=4142},isLetterOrDigitAhead()Z{0=4142}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1910, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=1910}"];
	2 -> 2 [label="reset()V{0=1910},reset()V{0=1910}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3536, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3536}"];
	2 -> 2 [label="countTokens()I{0=3536},reset()V{0=3536},nextIsSep()Z{0=3536},countTokens()I{0=3536}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3536}"];
	3 -> 2 [label="reset()V{0=3536}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3002, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3002}"];
	2 -> 2 [label="nextIsSep()Z{0=3002},nextIsSep()Z{0=3002},countTokens()I{0=3002}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3002}"];
	3 -> 3 [label="hasMoreTokens()Z{0=3002}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=3002}"];
	4 -> 4 [label="@nextIsSep()Z{0=3002}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4087, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4087}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4087},nextIsSep()Z{0=4087},hasMoreTokens()Z{0=4087},nextIsSep()Z{0=4087}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5713, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5713}"];
	2 -> 2 [label="countTokens()I{0=5713},nextIsSep()Z{0=5713},nextIsSep()Z{0=5713},nextIsSep()Z{0=5713},reset()V{0=5713},isLetterOrDigitAhead()Z{0=5713},hasMoreTokens()Z{0=5713},hasMoreTokens()Z{0=5713}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5713}"];
	3 -> 3 [label="hasMoreTokens()Z{0=5713}"];
	3 -> 2 [label="reset()V{0=5713}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5232, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5232}"];
	2 -> 2 [label="nextIsSep()Z{0=5232},hasMoreTokens()Z{0=5232},isLetterOrDigitAhead()Z{0=5232},isLetterOrDigitAhead()Z{0=5232},reset()V{0=5232}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5232}"];
	3 -> 3 [label="countTokens()I{0=5232}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3558, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3558}"];
	2 -> 2 [label="countTokens()I{0=3558},nextIsSep()Z{0=3558},nextIsSep()Z{0=3558},isLetterOrDigitAhead()Z{0=3558}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3558}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=3558}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4098, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4098}"];
	2 -> 2 [label="countTokens()I{0=4098},nextIsSep()Z{0=4098},nextIsSep()Z{0=4098}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4098}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=4098},isLetterOrDigitAhead()Z{0=4098}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4036, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4036}"];
	2 -> 2 [label="reset()V{0=4036},isLetterOrDigitAhead()Z{0=4036},hasMoreTokens()Z{0=4036},countTokens()I{0=4036},reset()V{0=4036},isLetterOrDigitAhead()Z{0=4036},nextIsSep()Z{0=4036},nextIsSep()Z{0=4036}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4036}"];
	3 -> 3 [label="hasMoreTokens()Z{0=4036}"];
	3 -> 2 [label="reset()V{0=4036}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4640, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4640}"];
	2 -> 2 [label="countTokens()I{0=4640},reset()V{0=4640},countTokens()I{0=4640},nextIsSep()Z{0=4640}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4640}"];
	3 -> 2 [label="reset()V{0=4640}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4654, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4654}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4654},hasMoreTokens()Z{0=4654},isLetterOrDigitAhead()Z{0=4654},reset()V{0=4654},nextIsSep()Z{0=4654},nextIsSep()Z{0=4654},countTokens()I{0=4654}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5735, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5735}"];
	2 -> 2 [label="nextIsSep()Z{0=5735},reset()V{0=5735}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5735}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=5735},countTokens()I{0=5735},hasMoreTokens()Z{0=5735},hasMoreTokens()Z{0=5735}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2944, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2944}"];
	2 -> 2 [label="countTokens()I{0=2944},nextIsSep()Z{0=2944},nextIsSep()Z{0=2944}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2944}"];
	3 -> 3 [label="hasMoreTokens()Z{0=2944}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=2944}"];
	4 -> 2 [label="reset()V{0=2944}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5752, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5752}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5752},countTokens()I{0=5752},nextIsSep()Z{0=5752},nextIsSep()Z{0=5752}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5752}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=5752},nextIsSep()Z{0=5752},isLetterOrDigitAhead()Z{0=5752},nextIsSep()Z{0=5752}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=5752}"];
	4 -> 4 [label="hasMoreTokens()Z{0=5752},countTokens()I{0=5752}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4114, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4114}"];
	2 -> 2 [label="reset()V{0=4114}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4114}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=4114}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3575, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3575}"];
	2 -> 2 [label="nextIsSep()Z{0=3575},reset()V{0=3575}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3575}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2495, 1=109}"];
	1 -> 2 [label="isLetterOrDigitAhead()Z{0=2495}"];
	2 -> 2 [label="reset()V{0=2495}"];
	0 [label=""];
	1 [label="maxPosition: 0,str: 109"];
	2 [label="currentPosition: 0,maxPosition: 0,str: 109"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2964, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2964}"];
	2 -> 2 [label="nextIsSep()Z{0=2964},nextIsSep()Z{0=2964},countTokens()I{0=2964},isLetterOrDigitAhead()Z{0=2964}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2964}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=2964},nextIsSep()Z{0=2964},isLetterOrDigitAhead()Z{0=2964},countTokens()I{0=2964}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4056, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4056}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4056},nextIsSep()Z{0=4056}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5206, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5206}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5206},countTokens()I{0=5206},isLetterOrDigitAhead()Z{0=5206},countTokens()I{0=5206},isLetterOrDigitAhead()Z{0=5206},isLetterOrDigitAhead()Z{0=5206},countTokens()I{0=5206}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5206}"];
	3 -> 3 [label="hasMoreTokens()Z{0=5206},nextIsSep()Z{0=5206},countTokens()I{0=5206}"];
	3 -> 2 [label="reset()V{0=5206}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3583, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3583}"];
	2 -> 2 [label="nextIsSep()Z{0=3583},nextIsSep()Z{0=3583},countTokens()I{0=3583}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3583}"];
	3 -> 3 [label="countTokens()I{0=3583},hasMoreTokens()Z{0=3583}"];
	3 -> 2 [label="reset()V{0=3583}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4123, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4123}"];
	2 -> 2 [label="nextIsSep()Z{0=4123},nextIsSep()Z{0=4123},countTokens()I{0=4123}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4123}"];
	3 -> 3 [label="hasMoreTokens()Z{0=4123}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=4123}"];
	4 -> 4 [label="isLetterOrDigitAhead()Z{0=4123}"];
	4 -> 2 [label="reset()V{0=4123}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4669, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4669}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4669},hasMoreTokens()Z{0=4669},nextIsSep()Z{0=4669},reset()V{0=4669},isLetterOrDigitAhead()Z{0=4669}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4199, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4199}"];
	2 -> 2 [label="countTokens()I{0=4199},isLetterOrDigitAhead()Z{0=4199},isLetterOrDigitAhead()Z{0=4199},countTokens()I{0=4199}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4199}"];
	3 -> 3 [label="hasMoreTokens()Z{0=4199},nextIsSep()Z{0=4199},countTokens()I{0=4199}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=4199}"];
	4 -> 4 [label="hasMoreTokens()Z{0=4199},isLetterOrDigitAhead()Z{0=4199}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3458, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3458}"];
	2 -> 2 [label="countTokens()I{0=3458},reset()V{0=3458},countTokens()I{0=3458},hasMoreTokens()Z{0=3458},nextIsSep()Z{0=3458},nextIsSep()Z{0=3458},countTokens()I{0=3458},countTokens()I{0=3458},nextIsSep()Z{0=3458},nextIsSep()Z{0=3458}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4004, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4004}"];
	2 -> 2 [label="nextIsSep()Z{0=4004}"];
	2 -> 3 [label="reset()V{0=4004}"];
	3 -> 2 [label="nextToken()Ljava/lang/String;{0=4004}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1848, 1=109}"];
	1 -> 2 [label="isLetterOrDigitAhead()Z{0=1848}"];
	2 -> 2 [label="@nextIsSep()Z{0=1848}"];
	0 [label=""];
	1 [label="maxPosition: 0,str: 109"];
	2 [label="currentPosition: 0,maxPosition: 0,str: 109"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5637, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5637}"];
	2 -> 2 [label="nextIsSep()Z{0=5637},isLetterOrDigitAhead()Z{0=5637},nextIsSep()Z{0=5637},isLetterOrDigitAhead()Z{0=5637}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5637}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4013, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4013}"];
	2 -> 2 [label="countTokens()I{0=4013},nextIsSep()Z{0=4013},nextIsSep()Z{0=4013},countTokens()I{0=4013}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4013}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=4013}"];
	3 -> 2 [label="reset()V{0=4013}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4680, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4680}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4680},countTokens()I{0=4680},nextIsSep()Z{0=4680},nextIsSep()Z{0=4680}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4680}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=4680},nextIsSep()Z{0=4680},isLetterOrDigitAhead()Z{0=4680}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=4680}"];
	4 -> 4 [label="countTokens()I{0=4680},hasMoreTokens()Z{0=4680}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3045, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3045}"];
	2 -> 2 [label="nextIsSep()Z{0=3045},nextIsSep()Z{0=3045},countTokens()I{0=3045},countTokens()I{0=3045},isLetterOrDigitAhead()Z{0=3045}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3045}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=3045},isLetterOrDigitAhead()Z{0=3045}"];
	3 -> 2 [label="reset()V{0=3045}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2498, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2498}"];
	2 -> 2 [label="countTokens()I{0=2498},nextIsSep()Z{0=2498},nextIsSep()Z{0=2498},nextIsSep()Z{0=2498},isLetterOrDigitAhead()Z{0=2498},hasMoreTokens()Z{0=2498}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2498}"];
	3 -> 3 [label="hasMoreTokens()Z{0=2498}"];
	3 -> 2 [label="reset()V{0=2498}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5177, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5177}"];
	2 -> 2 [label="nextIsSep()Z{0=5177},reset()V{0=5177}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5177}"];
	3 -> 3 [label="nextIsSep()Z{0=5177},isLetterOrDigitAhead()Z{0=5177},countTokens()I{0=5177},hasMoreTokens()Z{0=5177}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2522, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2522}"];
	2 -> 2 [label="countTokens()I{0=2522},nextIsSep()Z{0=2522},nextIsSep()Z{0=2522},isLetterOrDigitAhead()Z{0=2522}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2522}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=2522},countTokens()I{0=2522},isLetterOrDigitAhead()Z{0=2522}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1834, 1=109}"];
	1 -> 2 [label="@nextToken()Ljava/lang/String;{0=1834}"];
	0 [label=""];
	1 [label="maxPosition: 0,str: 109"];
	2 [label="currentPosition: 0,maxPosition: 0,str: 109"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3480, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3480}"];
	2 -> 2 [label="reset()V{0=3480},countTokens()I{0=3480},isLetterOrDigitAhead()Z{0=3480},countTokens()I{0=3480},countTokens()I{0=3480},reset()V{0=3480},isLetterOrDigitAhead()Z{0=3480}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5651, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5651}"];
	2 -> 2 [label="nextIsSep()Z{0=5651},nextIsSep()Z{0=5651},countTokens()I{0=5651}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5651}"];
	3 -> 3 [label="hasMoreTokens()Z{0=5651},nextIsSep()Z{0=5651},isLetterOrDigitAhead()Z{0=5651}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4707, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4707}"];
	2 -> 2 [label="countTokens()I{0=4707},nextIsSep()Z{0=4707},nextIsSep()Z{0=4707}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4707}"];
	3 -> 3 [label="hasMoreTokens()Z{0=4707}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=4707}"];
	4 -> 4 [label="isLetterOrDigitAhead()Z{0=4707},hasMoreTokens()Z{0=4707}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2542, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2542}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2542},countTokens()I{0=2542},isLetterOrDigitAhead()Z{0=2542},countTokens()I{0=2542}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2542}"];
	3 -> 3 [label="countTokens()I{0=2542},countTokens()I{0=2542}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3493, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3493}"];
	2 -> 2 [label="nextIsSep()Z{0=3493},nextIsSep()Z{0=3493},countTokens()I{0=3493},isLetterOrDigitAhead()Z{0=3493}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3493}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=3493}"];
	4 -> 4 [label="@nextToken()Ljava/lang/String;{0=3493}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3022, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3022}"];
	2 -> 2 [label="nextIsSep()Z{0=3022},isLetterOrDigitAhead()Z{0=3022},countTokens()I{0=3022},countTokens()I{0=3022},nextIsSep()Z{0=3022},countTokens()I{0=3022}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5135, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5135}"];
	2 -> 2 [label="nextIsSep()Z{0=5135},countTokens()I{0=5135},nextIsSep()Z{0=5135},countTokens()I{0=5135},isLetterOrDigitAhead()Z{0=5135}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5135}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5120, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5120}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5120},nextIsSep()Z{0=5120},nextIsSep()Z{0=5120}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5120}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=5120}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5669, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5669}"];
	2 -> 2 [label="nextIsSep()Z{0=5669},countTokens()I{0=5669}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5669},nextToken()Ljava/lang/String;{0=5669}"];
	3 -> 2 [label="reset()V{0=5669}"];
	3 -> 3 [label="countTokens()I{0=5669}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3980, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3980}"];
	2 -> 2 [label="countTokens()I{0=3980},nextIsSep()Z{0=3980},nextIsSep()Z{0=3980},countTokens()I{0=3980},countTokens()I{0=3980},isLetterOrDigitAhead()Z{0=3980},nextIsSep()Z{0=3980},nextIsSep()Z{0=3980}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3980}"];
	3 -> 3 [label="countTokens()I{0=3980}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5693, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5693}"];
	2 -> 2 [label="countTokens()I{0=5693},nextIsSep()Z{0=5693},nextIsSep()Z{0=5693}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5693}"];
	3 -> 3 [label="countTokens()I{0=5693},hasMoreTokens()Z{0=5693}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=5693}"];
	4 -> 4 [label="@nextIsSep()Z{0=5693}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3511, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3511}"];
	2 -> 2 [label="countTokens()I{0=3511},nextIsSep()Z{0=3511},nextIsSep()Z{0=3511},isLetterOrDigitAhead()Z{0=3511}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3511}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=3511},nextIsSep()Z{0=3511},isLetterOrDigitAhead()Z{0=3511},nextIsSep()Z{0=3511}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=3511}"];
	4 -> 4 [label="@nextIsSep()Z{0=3511}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5151, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5151}"];
	2 -> 2 [label="nextIsSep()Z{0=5151},nextIsSep()Z{0=5151},nextIsSep()Z{0=5151},nextIsSep()Z{0=5151},countTokens()I{0=5151},countTokens()I{0=5151},hasMoreTokens()Z{0=5151},isLetterOrDigitAhead()Z{0=5151}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5151}"];
	3 -> 3 [label="hasMoreTokens()Z{0=5151}"];
	3 -> 2 [label="reset()V{0=5151}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4729, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4729}"];
	2 -> 2 [label="nextIsSep()Z{0=4729},nextIsSep()Z{0=4729},countTokens()I{0=4729},isLetterOrDigitAhead()Z{0=4729},isLetterOrDigitAhead()Z{0=4729}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4729}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=4729}"];
	3 -> 2 [label="reset()V{0=4729}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3944, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3944}"];
	2 -> 2 [label="nextIsSep()Z{0=3944},nextIsSep()Z{0=3944},countTokens()I{0=3944}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3944}"];
	3 -> 3 [label="hasMoreTokens()Z{0=3944},isLetterOrDigitAhead()Z{0=3944}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=3944}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5826, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5826}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5826},countTokens()I{0=5826},reset()V{0=5826},countTokens()I{0=5826},isLetterOrDigitAhead()Z{0=5826}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5826}"];
	3 -> 3 [label="hasMoreTokens()Z{0=5826},nextIsSep()Z{0=5826}"];
	3 -> 2 [label="reset()V{0=5826}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3404, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3404}"];
	2 -> 2 [label="nextIsSep()Z{0=3404},nextIsSep()Z{0=3404},countTokens()I{0=3404}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3404}"];
	3 -> 3 [label="hasMoreTokens()Z{0=3404},countTokens()I{0=3404}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=3404}"];
	4 -> 4 [label="countTokens()I{0=3404},hasMoreTokens()Z{0=3404}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4268, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4268}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4268},countTokens()I{0=4268},isLetterOrDigitAhead()Z{0=4268},countTokens()I{0=4268},isLetterOrDigitAhead()Z{0=4268},isLetterOrDigitAhead()Z{0=4268},nextIsSep()Z{0=4268}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2043, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2043}"];
	2 -> 2 [label="reset()V{0=2043},countTokens()I{0=2043},nextIsSep()Z{0=2043},nextIsSep()Z{0=2043},nextIsSep()Z{0=2043}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2317, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2317}"];
	2 -> 2 [label="nextIsSep()Z{0=2317},reset()V{0=2317}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2317}"];
	3 -> 3 [label="countTokens()I{0=2317},hasMoreTokens()Z{0=2317},hasMoreTokens()Z{0=2317}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5844, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5844}"];
	2 -> 2 [label="countTokens()I{0=5844},isLetterOrDigitAhead()Z{0=5844},nextIsSep()Z{0=5844},isLetterOrDigitAhead()Z{0=5844},countTokens()I{0=5844}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5844}"];
	3 -> 3 [label="hasMoreTokens()Z{0=5844},nextIsSep()Z{0=5844},countTokens()I{0=5844}"];
	3 -> 2 [label="reset()V{0=5844}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3964, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3964}"];
	2 -> 2 [label="reset()V{0=3964},isLetterOrDigitAhead()Z{0=3964},countTokens()I{0=3964},nextIsSep()Z{0=3964},nextIsSep()Z{0=3964},countTokens()I{0=3964}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3964}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4286, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4286}"];
	2 -> 2 [label="nextIsSep()Z{0=4286},nextIsSep()Z{0=4286},nextIsSep()Z{0=4286},nextIsSep()Z{0=4286},countTokens()I{0=4286},countTokens()I{0=4286},isLetterOrDigitAhead()Z{0=4286}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2866, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2866}"];
	2 -> 2 [label="nextIsSep()Z{0=2866},nextIsSep()Z{0=2866},countTokens()I{0=2866},reset()V{0=2866}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2866},nextToken()Ljava/lang/String;{0=2866}"];
	3 -> 2 [label="reset()V{0=2866},reset()V{0=2866}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4757, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4757}"];
	2 -> 2 [label="reset()V{0=4757},nextIsSep()Z{0=4757}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4757}"];
	3 -> 3 [label="hasMoreTokens()Z{0=4757}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=4757}"];
	4 -> 4 [label="isLetterOrDigitAhead()Z{0=4757}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5375, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5375}"];
	2 -> 2 [label="reset()V{0=5375},isLetterOrDigitAhead()Z{0=5375},nextIsSep()Z{0=5375}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5375},nextToken()Ljava/lang/String;{0=5375}"];
	3 -> 2 [label="reset()V{0=5375}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3915, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3915}"];
	2 -> 2 [label="countTokens()I{0=3915},countTokens()I{0=3915},hasMoreTokens()Z{0=3915}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2339, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2339}"];
	2 -> 2 [label="countTokens()I{0=2339},nextIsSep()Z{0=2339},nextIsSep()Z{0=2339},reset()V{0=2339},hasMoreTokens()Z{0=2339}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5319, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5319}"];
	2 -> 2 [label="nextIsSep()Z{0=5319},nextIsSep()Z{0=5319},countTokens()I{0=5319},isLetterOrDigitAhead()Z{0=5319}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5319}"];
	3 -> 3 [label="nextIsSep()Z{0=5319},countTokens()I{0=5319},countTokens()I{0=5319},hasMoreTokens()Z{0=5319},isLetterOrDigitAhead()Z{0=5319}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5866, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5866}"];
	2 -> 2 [label="countTokens()I{0=5866},nextIsSep()Z{0=5866},nextIsSep()Z{0=5866},reset()V{0=5866},hasMoreTokens()Z{0=5866}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5866},nextToken()Ljava/lang/String;{0=5866}"];
	3 -> 3 [label="hasMoreTokens()Z{0=5866}"];
	3 -> 2 [label="reset()V{0=5866}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3429, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3429}"];
	2 -> 2 [label="nextIsSep()Z{0=3429},nextIsSep()Z{0=3429},hasMoreTokens()Z{0=3429},isLetterOrDigitAhead()Z{0=3429},isLetterOrDigitAhead()Z{0=3429},reset()V{0=3429}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4226, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4226}"];
	2 -> 2 [label="nextIsSep()Z{0=4226},nextIsSep()Z{0=4226},nextIsSep()Z{0=4226},countTokens()I{0=4226},countTokens()I{0=4226},countTokens()I{0=4226},isLetterOrDigitAhead()Z{0=4226}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4772, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4772}"];
	2 -> 2 [label="nextIsSep()Z{0=4772},nextIsSep()Z{0=4772},countTokens()I{0=4772},hasMoreTokens()Z{0=4772},countTokens()I{0=4772},reset()V{0=4772}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4772}"];
	3 -> 3 [label="hasMoreTokens()Z{0=4772}"];
	3 -> 2 [label="reset()V{0=4772}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2829, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2829}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2829},countTokens()I{0=2829},hasMoreTokens()Z{0=2829},isLetterOrDigitAhead()Z{0=2829}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2829}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2350, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2350}"];
	2 -> 2 [label="countTokens()I{0=2350},nextIsSep()Z{0=2350},nextIsSep()Z{0=2350}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2350}"];
	3 -> 3 [label="nextIsSep()Z{0=2350},hasMoreTokens()Z{0=2350},isLetterOrDigitAhead()Z{0=2350},hasMoreTokens()Z{0=2350}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3427, 1=109}"];
	1 -> 2 [label="reset()V{0=3427}"];
	2 -> 2 [label="@nextToken()Ljava/lang/String;{0=3427}"];
	0 [label=""];
	1 [label="maxPosition: 0,str: 109"];
	2 [label="currentPosition: 0,maxPosition: 0,str: 109"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4795, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4795}"];
	2 -> 2 [label="countTokens()I{0=4795},isLetterOrDigitAhead()Z{0=4795},nextIsSep()Z{0=4795},reset()V{0=4795}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4795},nextToken()Ljava/lang/String;{0=4795}"];
	3 -> 2 [label="reset()V{0=4795},reset()V{0=4795}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5343, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5343}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5343},countTokens()I{0=5343},isLetterOrDigitAhead()Z{0=5343},countTokens()I{0=5343},isLetterOrDigitAhead()Z{0=5343},countTokens()I{0=5343}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5343},nextToken()Ljava/lang/String;{0=5343}"];
	3 -> 3 [label="countTokens()I{0=5343},nextIsSep()Z{0=5343},hasMoreTokens()Z{0=5343}"];
	3 -> 2 [label="reset()V{0=5343}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2843, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2843}"];
	2 -> 2 [label="countTokens()I{0=2843},isLetterOrDigitAhead()Z{0=2843},isLetterOrDigitAhead()Z{0=2843},countTokens()I{0=2843}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2843}"];
	3 -> 3 [label="countTokens()I{0=2843}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=2843}"];
	4 -> 4 [label="@nextToken()Ljava/lang/String;{0=2843}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4244, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4244}"];
	2 -> 2 [label="nextIsSep()Z{0=4244},countTokens()I{0=4244},countTokens()I{0=4244},isLetterOrDigitAhead()Z{0=4244},isLetterOrDigitAhead()Z{0=4244},countTokens()I{0=4244}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4244}"];
	3 -> 3 [label="hasMoreTokens()Z{0=4244},nextIsSep()Z{0=4244},countTokens()I{0=4244}"];
	3 -> 2 [label="reset()V{0=4244}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5885, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5885}"];
	2 -> 2 [label="nextIsSep()Z{0=5885},nextIsSep()Z{0=5885},reset()V{0=5885}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3442, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3442}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3442},countTokens()I{0=3442},countTokens()I{0=3442},reset()V{0=3442},isLetterOrDigitAhead()Z{0=3442},countTokens()I{0=3442}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3442}"];
	3 -> 2 [label="reset()V{0=3442}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3924, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3924}"];
	2 -> 2 [label="countTokens()I{0=3924},nextIsSep()Z{0=3924},nextIsSep()Z{0=3924},hasMoreTokens()Z{0=3924}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3924}"];
	3 -> 3 [label="hasMoreTokens()Z{0=3924}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=3924}"];
	4 -> 2 [label="reset()V{0=3924}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3885, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3885}"];
	2 -> 2 [label="nextIsSep()Z{0=3885}"];
	2 -> 3 [label="reset()V{0=3885}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=3885}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4810, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4810}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4810},reset()V{0=4810},isLetterOrDigitAhead()Z{0=4810},nextIsSep()Z{0=4810},nextIsSep()Z{0=4810},countTokens()I{0=4810},reset()V{0=4810}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3337, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3337}"];
	2 -> 2 [label="nextIsSep()Z{0=3337},nextIsSep()Z{0=3337},countTokens()I{0=3337}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3337}"];
	3 -> 3 [label="hasMoreTokens()Z{0=3337},isLetterOrDigitAhead()Z{0=3337},isLetterOrDigitAhead()Z{0=3337},nextIsSep()Z{0=3337}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2370, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2370}"];
	2 -> 2 [label="nextIsSep()Z{0=2370},reset()V{0=2370},isLetterOrDigitAhead()Z{0=2370}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1968, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=1968}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=1968},countTokens()I{0=1968},isLetterOrDigitAhead()Z{0=1968},countTokens()I{0=1968}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=1968}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5285, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5285}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5285},hasMoreTokens()Z{0=5285},nextIsSep()Z{0=5285},countTokens()I{0=5285},nextIsSep()Z{0=5285},countTokens()I{0=5285},countTokens()I{0=5285}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4327, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4327}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4327},isLetterOrDigitAhead()Z{0=4327},reset()V{0=4327},hasMoreTokens()Z{0=4327},nextIsSep()Z{0=4327},nextIsSep()Z{0=4327}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2925, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2925}"];
	2 -> 2 [label="nextIsSep()Z{0=2925},countTokens()I{0=2925},countTokens()I{0=2925},countTokens()I{0=2925},nextIsSep()Z{0=2925},hasMoreTokens()Z{0=2925},countTokens()I{0=2925},countTokens()I{0=2925}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2377, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2377}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2377},isLetterOrDigitAhead()Z{0=2377},hasMoreTokens()Z{0=2377},countTokens()I{0=2377},nextIsSep()Z{0=2377},nextIsSep()Z{0=2377},nextIsSep()Z{0=2377}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2377}"];
	3 -> 3 [label="hasMoreTokens()Z{0=2377}"];
	3 -> 2 [label="reset()V{0=2377}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5781, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5781}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5781},nextIsSep()Z{0=5781},isLetterOrDigitAhead()Z{0=5781},nextIsSep()Z{0=5781},nextIsSep()Z{0=5781}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4825, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4825}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4825},countTokens()I{0=4825},nextIsSep()Z{0=4825},nextIsSep()Z{0=4825}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4825}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=4825},nextIsSep()Z{0=4825}"];
	3 -> 2 [label="reset()V{0=4825}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1959, 1=109}"];
	1 -> 2 [label="@nextIsSep()Z{0=1959}"];
	0 [label=""];
	1 [label="maxPosition: 0,str: 109"];
	2 [label="currentPosition: 0,maxPosition: 0,str: 109"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1958, 1=109}"];
	1 -> 2 [label="reset()V{0=1958}"];
	2 -> 2 [label="@nextIsSep()Z{0=1958}"];
	0 [label=""];
	1 [label="maxPosition: 0,str: 109"];
	2 [label="currentPosition: 0,maxPosition: 0,str: 109"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4347, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4347}"];
	2 -> 2 [label="reset()V{0=4347},reset()V{0=4347},countTokens()I{0=4347},countTokens()I{0=4347},hasMoreTokens()Z{0=4347},nextIsSep()Z{0=4347}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3358, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3358}"];
	2 -> 2 [label="countTokens()I{0=3358},isLetterOrDigitAhead()Z{0=3358},countTokens()I{0=3358},isLetterOrDigitAhead()Z{0=3358},countTokens()I{0=3358}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3358}"];
	3 -> 3 [label="nextIsSep()Z{0=3358}"];
	3 -> 2 [label="reset()V{0=3358}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5302, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5302}"];
	2 -> 2 [label="countTokens()I{0=5302},hasMoreTokens()Z{0=5302},nextIsSep()Z{0=5302},nextIsSep()Z{0=5302},hasMoreTokens()Z{0=5302},countTokens()I{0=5302},nextIsSep()Z{0=5302}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2399, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2399}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2399},countTokens()I{0=2399},nextIsSep()Z{0=2399},nextIsSep()Z{0=2399},hasMoreTokens()Z{0=2399}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2399}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=2399}"];
	3 -> 2 [label="reset()V{0=2399}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3893, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3893}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3893},countTokens()I{0=3893},isLetterOrDigitAhead()Z{0=3893},reset()V{0=3893},nextIsSep()Z{0=3893},nextIsSep()Z{0=3893},countTokens()I{0=3893},isLetterOrDigitAhead()Z{0=3893}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3893}"];
	3 -> 3 [label="hasMoreTokens()Z{0=3893}"];
	3 -> 2 [label="reset()V{0=3893}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4340, 1=2437}"];
	1 -> 2 [label="nextIsSep()Z{0=4340}"];
	2 -> 2 [label="reset()V{0=4340}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4340}"];
	3 -> 3 [label="countTokens()I{0=4340}"];
	0 [label=""];
	1 [label="maxPosition: 1,str: 2437"];
	2 [label="currentPosition: 0,maxPosition: 1,str: 2437"];
	3 [label="currentPosition: 1,maxPosition: 1,str: 2437"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5248, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5248}"];
	2 -> 2 [label="reset()V{0=5248},countTokens()I{0=5248},nextIsSep()Z{0=5248}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5248}"];
	3 -> 2 [label="reset()V{0=5248}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1943, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=1943}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=1943},isLetterOrDigitAhead()Z{0=1943},isLetterOrDigitAhead()Z{0=1943},countTokens()I{0=1943}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4843, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4843}"];
	2 -> 2 [label="countTokens()I{0=4843},nextIsSep()Z{0=4843},nextIsSep()Z{0=4843}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4843}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=4843},hasMoreTokens()Z{0=4843},isLetterOrDigitAhead()Z{0=4843}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4303, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4303}"];
	2 -> 2 [label="countTokens()I{0=4303},nextIsSep()Z{0=4303},nextIsSep()Z{0=4303}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4303}"];
	3 -> 3 [label="countTokens()I{0=4303},hasMoreTokens()Z{0=4303}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=4303}"];
	4 -> 4 [label="hasMoreTokens()Z{0=4303}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2884, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2884}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2884},countTokens()I{0=2884},nextIsSep()Z{0=2884},nextIsSep()Z{0=2884}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2884}"];
	3 -> 3 [label="isLetterOrDigitAhead()Z{0=2884},countTokens()I{0=2884}"];
	3 -> 2 [label="reset()V{0=2884}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3848, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3848}"];
	2 -> 2 [label="nextIsSep()Z{0=3848},countTokens()I{0=3848},nextIsSep()Z{0=3848},nextIsSep()Z{0=3848}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5258, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5258}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5258},nextIsSep()Z{0=5258},reset()V{0=5258}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5258}"];
	3 -> 2 [label="reset()V{0=5258}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3389, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3389}"];
	2 -> 2 [label="countTokens()I{0=3389},countTokens()I{0=3389},nextIsSep()Z{0=3389},nextIsSep()Z{0=3389},countTokens()I{0=3389},reset()V{0=3389},hasMoreTokens()Z{0=3389}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2417, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2417}"];
	2 -> 2 [label="nextIsSep()Z{0=2417},nextIsSep()Z{0=2417},countTokens()I{0=2417}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2417}"];
	3 -> 3 [label="hasMoreTokens()Z{0=2417}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=2417}"];
	4 -> 4 [label="@nextToken()Ljava/lang/String;{0=2417}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2902, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=2902}"];
	2 -> 2 [label="nextIsSep()Z{0=2902},nextIsSep()Z{0=2902},countTokens()I{0=2902},isLetterOrDigitAhead()Z{0=2902}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=2902}"];
	3 -> 3 [label="nextIsSep()Z{0=2902},countTokens()I{0=2902},isLetterOrDigitAhead()Z{0=2902}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=2902}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5268, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5268}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5268},nextIsSep()Z{0=5268},isLetterOrDigitAhead()Z{0=5268},nextIsSep()Z{0=5268},nextIsSep()Z{0=5268},countTokens()I{0=5268},countTokens()I{0=5268},reset()V{0=5268}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4861, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=4861}"];
	2 -> 2 [label="countTokens()I{0=4861},nextIsSep()Z{0=4861},countTokens()I{0=4861},reset()V{0=4861}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=4861}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=4861}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5808, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=5808}"];
	2 -> 2 [label="nextIsSep()Z{0=5808},countTokens()I{0=5808},isLetterOrDigitAhead()Z{0=5808},countTokens()I{0=5808},reset()V{0=5808},countTokens()I{0=5808},isLetterOrDigitAhead()Z{0=5808}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=5808}"];
	3 -> 2 [label="reset()V{0=5808}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
}
, digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3859, 1=1738}"];
	1 -> 2 [label="hasMoreTokens()Z{0=3859}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3859},countTokens()I{0=3859},isLetterOrDigitAhead()Z{0=3859},countTokens()I{0=3859}"];
	2 -> 3 [label="nextToken()Ljava/lang/String;{0=3859}"];
	3 -> 3 [label="nextIsSep()Z{0=3859},hasMoreTokens()Z{0=3859},countTokens()I{0=3859}"];
	3 -> 4 [label="nextToken()Ljava/lang/String;{0=3859}"];
	4 -> 4 [label="hasMoreTokens()Z{0=3859},@nextToken()Ljava/lang/String;{0=3859}"];
	0 [label=""];
	1 [label="maxPosition: 3,str: 1738"];
	2 [label="currentPosition: 0,maxPosition: 3,str: 1738"];
	3 [label="currentPosition: 2,maxPosition: 3,str: 1738"];
	4 [label="currentPosition: 3,maxPosition: 3,str: 1738"];
}
]
[INFO ] 2019-09-24 15:53:15,137: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3284, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3284},hasMoreTokens()Z{0=3284},countTokens()I{0=3284},hasMoreTokens()Z{0=3284},nextIsSep()Z{0=3284},nextIsSep()Z{0=3284},nextIsSep()Z{0=3284},countTokens()I{0=3284},countTokens()I{0=3284}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,138: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,138: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,138: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,138: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,139: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,139: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,139: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3830, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3830},countTokens()I{0=3830},reset()V{0=3830},nextIsSep()Z{0=3830},hasMoreTokens()Z{0=3830},nextIsSep()Z{0=3830},nextIsSep()Z{0=3830}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3830}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3830}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,139: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,139: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,139: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,139: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,139: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,139: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,140: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5488, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5488},nextIsSep()Z{0=5488},hasMoreTokens()Z{0=5488},isLetterOrDigitAhead()Z{0=5488},isLetterOrDigitAhead()Z{0=5488}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5488}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5488}"];
	2 -> 1 [label="reset()V{0=5488}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,140: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,140: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,140: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,140: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,140: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,140: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,140: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4889, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4889},hasMoreTokens()Z{0=4889},nextIsSep()Z{0=4889},countTokens()I{0=4889},isLetterOrDigitAhead()Z{0=4889},reset()V{0=4889}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4889}"];
	2 -> 1 [label="reset()V{0=4889}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,141: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,141: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,141: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,141: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,141: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,141: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,141: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3809, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3809},countTokens()I{0=3809},countTokens()I{0=3809},countTokens()I{0=3809},reset()V{0=3809},nextIsSep()Z{0=3809},nextIsSep()Z{0=3809},nextIsSep()Z{0=3809},hasMoreTokens()Z{0=3809}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,142: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,142: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,142: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,142: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,142: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,142: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,142: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5960, 1=1738}"];
	1 -> 1 [label="reset()V{0=5960},isLetterOrDigitAhead()Z{0=5960},hasMoreTokens()Z{0=5960},nextIsSep()Z{0=5960},nextIsSep()Z{0=5960},hasMoreTokens()Z{0=5960}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,143: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,143: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,143: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,143: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,143: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,143: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,143: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2186, 1=109}"];
	1 -> 1 [label="reset()V{0=2186},isLetterOrDigitAhead()Z{0=2186}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,144: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,144: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,144: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,144: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,144: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,144: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,144: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2731, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2731},isLetterOrDigitAhead()Z{0=2731},countTokens()I{0=2731},isLetterOrDigitAhead()Z{0=2731},hasMoreTokens()Z{0=2731}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2731}"];
	2 -> 2 [label="countTokens()I{0=2731},countTokens()I{0=2731},countTokens()I{0=2731},hasMoreTokens()Z{0=2731}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,144: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,145: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,145: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,145: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,145: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,145: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,145: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4879, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4879}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4879},nextIsSep()Z{0=4879},countTokens()I{0=4879}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,145: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,145: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,146: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,146: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,146: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,146: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,146: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4396, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4396},nextIsSep()Z{0=4396},hasMoreTokens()Z{0=4396},countTokens()I{0=4396}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4396},nextToken()Ljava/lang/String;{0=4396}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4396},hasMoreTokens()Z{0=4396},nextToken()Ljava/lang/String;{0=4396}"];
	2 -> 1 [label="reset()V{0=4396}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,146: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,146: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,146: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,147: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,147: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,147: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,147: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5468, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5468},countTokens()I{0=5468},nextIsSep()Z{0=5468},nextIsSep()Z{0=5468},hasMoreTokens()Z{0=5468}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5468}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5468},countTokens()I{0=5468},isLetterOrDigitAhead()Z{0=5468}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,147: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,147: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,147: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,147: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,148: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,148: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,148: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3796, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3796},nextIsSep()Z{0=3796},hasMoreTokens()Z{0=3796},nextIsSep()Z{0=3796},countTokens()I{0=3796},nextIsSep()Z{0=3796}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,148: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,148: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,148: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,148: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,148: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,148: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,149: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3324, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3324},nextIsSep()Z{0=3324},nextIsSep()Z{0=3324},hasMoreTokens()Z{0=3324},countTokens()I{0=3324},hasMoreTokens()Z{0=3324},reset()V{0=3324},reset()V{0=3324},reset()V{0=3324}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,149: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,149: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,149: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,149: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,149: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,149: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,150: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4376, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4376},nextIsSep()Z{0=4376},nextIsSep()Z{0=4376},hasMoreTokens()Z{0=4376}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4376}"];
	2 -> 2 [label="countTokens()I{0=4376},nextIsSep()Z{0=4376},hasMoreTokens()Z{0=4376},hasMoreTokens()Z{0=4376}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,150: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,150: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,150: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,150: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,150: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,150: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,150: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3303, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3303},nextIsSep()Z{0=3303},hasMoreTokens()Z{0=3303},countTokens()I{0=3303},isLetterOrDigitAhead()Z{0=3303}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3303}"];
	2 -> 2 [label="nextIsSep()Z{0=3303},countTokens()I{0=3303},isLetterOrDigitAhead()Z{0=3303}"];
	2 -> 1 [label="reset()V{0=3303}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,151: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,151: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,151: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,151: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,151: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,151: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,151: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2702, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2702},nextIsSep()Z{0=2702},nextIsSep()Z{0=2702},hasMoreTokens()Z{0=2702},isLetterOrDigitAhead()Z{0=2702}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2702}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2702}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,152: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,152: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,152: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,152: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,152: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,152: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,152: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5452, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5452},countTokens()I{0=5452},nextIsSep()Z{0=5452},hasMoreTokens()Z{0=5452},countTokens()I{0=5452},isLetterOrDigitAhead()Z{0=5452}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5452}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,153: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,153: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,153: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,153: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,153: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,153: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,153: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4358, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4358},nextIsSep()Z{0=4358},hasMoreTokens()Z{0=4358},countTokens()I{0=4358},countTokens()I{0=4358},isLetterOrDigitAhead()Z{0=4358}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4358}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4358}"];
	2 -> 1 [label="reset()V{0=4358}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,154: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,154: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,154: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,154: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,154: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,154: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,154: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3782, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=3782},hasMoreTokens()Z{0=3782},nextIsSep()Z{0=3782},countTokens()I{0=3782},isLetterOrDigitAhead()Z{0=3782},nextIsSep()Z{0=3782}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,155: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,155: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,155: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,155: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,155: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,155: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,155: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2695, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2695},isLetterOrDigitAhead()Z{0=2695},nextIsSep()Z{0=2695}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,156: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,156: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,156: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,156: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,156: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,156: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,156: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4904, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4904},hasMoreTokens()Z{0=4904},nextIsSep()Z{0=4904},countTokens()I{0=4904},isLetterOrDigitAhead()Z{0=4904}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4904}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4904},nextToken()Ljava/lang/String;{0=4904},isLetterOrDigitAhead()Z{0=4904},nextIsSep()Z{0=4904},isLetterOrDigitAhead()Z{0=4904}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,157: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,157: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,157: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,157: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,157: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,157: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,157: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5918, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5918},nextIsSep()Z{0=5918},hasMoreTokens()Z{0=5918},hasMoreTokens()Z{0=5918},countTokens()I{0=5918},countTokens()I{0=5918},hasMoreTokens()Z{0=5918}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,157: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,157: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,158: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,158: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,158: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,158: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,158: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5432, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5432},isLetterOrDigitAhead()Z{0=5432},countTokens()I{0=5432},countTokens()I{0=5432},isLetterOrDigitAhead()Z{0=5432}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5432}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5432},nextIsSep()Z{0=5432},hasMoreTokens()Z{0=5432}"];
	2 -> 1 [label="reset()V{0=5432}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,158: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,158: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,158: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,159: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,159: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,159: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,159: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3224, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3224},countTokens()I{0=3224},reset()V{0=3224},hasMoreTokens()Z{0=3224},nextIsSep()Z{0=3224},countTokens()I{0=3224},countTokens()I{0=3224},isLetterOrDigitAhead()Z{0=3224},nextIsSep()Z{0=3224},hasMoreTokens()Z{0=3224}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,159: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,159: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,159: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,159: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,159: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,160: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,160: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2256, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2256},nextIsSep()Z{0=2256},nextIsSep()Z{0=2256},hasMoreTokens()Z{0=2256},countTokens()I{0=2256},countTokens()I{0=2256}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2256}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,160: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,160: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,160: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,160: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,160: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,160: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,161: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3771, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3771}"];
	2 -> 2 [label="countTokens()I{0=3771},nextToken()Ljava/lang/String;{0=3771},nextIsSep()Z{0=3771}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,161: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,161: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,161: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,161: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,161: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,161: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,162: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4474, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4474},hasMoreTokens()Z{0=4474},reset()V{0=4474},countTokens()I{0=4474},countTokens()I{0=4474},nextIsSep()Z{0=4474},countTokens()I{0=4474}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,162: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,162: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,162: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,162: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,162: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,162: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,162: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2805, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2805},isLetterOrDigitAhead()Z{0=2805},countTokens()I{0=2805},isLetterOrDigitAhead()Z{0=2805},countTokens()I{0=2805},countTokens()I{0=2805},hasMoreTokens()Z{0=2805}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2805}"];
	2 -> 2 [label="countTokens()I{0=2805},nextIsSep()Z{0=2805},hasMoreTokens()Z{0=2805}"];
	2 -> 1 [label="reset()V{0=2805}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,163: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,163: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,163: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,163: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,163: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,163: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,163: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4930, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4930},nextIsSep()Z{0=4930},nextIsSep()Z{0=4930},hasMoreTokens()Z{0=4930}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4930}"];
	2 -> 2 [label="@nextIsSep()Z{0=4930},nextToken()Ljava/lang/String;{0=4930}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,164: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,164: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,164: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,164: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,164: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,164: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,164: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3746, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3746},isLetterOrDigitAhead()Z{0=3746},countTokens()I{0=3746},countTokens()I{0=3746},isLetterOrDigitAhead()Z{0=3746}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3746}"];
	2 -> 2 [label="nextIsSep()Z{0=3746},hasMoreTokens()Z{0=3746},nextToken()Ljava/lang/String;{0=3746},countTokens()I{0=3746},countTokens()I{0=3746}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,165: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,165: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,165: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,165: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,165: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,165: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,165: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4448, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4448},isLetterOrDigitAhead()Z{0=4448},hasMoreTokens()Z{0=4448},countTokens()I{0=4448},isLetterOrDigitAhead()Z{0=4448},nextIsSep()Z{0=4448},nextIsSep()Z{0=4448},nextIsSep()Z{0=4448},hasMoreTokens()Z{0=4448}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4448}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4448}"];
	2 -> 1 [label="reset()V{0=4448}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,166: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,166: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,166: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,166: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,166: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,166: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,166: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3209, 1=1738}"];
	1 -> 1 [label="reset()V{0=3209},countTokens()I{0=3209},countTokens()I{0=3209},countTokens()I{0=3209},reset()V{0=3209},nextIsSep()Z{0=3209},nextIsSep()Z{0=3209},nextIsSep()Z{0=3209},hasMoreTokens()Z{0=3209}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,167: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,167: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,167: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,167: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,167: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,167: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,167: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5892, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5892},hasMoreTokens()Z{0=5892},nextIsSep()Z{0=5892},countTokens()I{0=5892}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5892}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5892},nextIsSep()Z{0=5892},isLetterOrDigitAhead()Z{0=5892},isLetterOrDigitAhead()Z{0=5892},nextIsSep()Z{0=5892},hasMoreTokens()Z{0=5892},isLetterOrDigitAhead()Z{0=5892}"];
	2 -> 1 [label="reset()V{0=5892}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,168: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,168: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,168: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,168: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,168: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,168: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,168: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2784, 1=109}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2784},isLetterOrDigitAhead()Z{0=2784}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,169: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,169: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,169: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,169: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,169: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,169: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,169: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5412, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5412},hasMoreTokens()Z{0=5412},nextIsSep()Z{0=5412},countTokens()I{0=5412},isLetterOrDigitAhead()Z{0=5412}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5412}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5412},isLetterOrDigitAhead()Z{0=5412},isLetterOrDigitAhead()Z{0=5412}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,169: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,170: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,170: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,170: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,170: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,170: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,170: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2789, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=2789},countTokens()I{0=2789},isLetterOrDigitAhead()Z{0=2789},countTokens()I{0=2789},reset()V{0=2789},nextIsSep()Z{0=2789},nextIsSep()Z{0=2789},hasMoreTokens()Z{0=2789}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,170: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,170: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,170: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,171: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,171: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,171: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,171: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3250, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3250},reset()V{0=3250},hasMoreTokens()Z{0=3250},hasMoreTokens()Z{0=3250},isLetterOrDigitAhead()Z{0=3250},isLetterOrDigitAhead()Z{0=3250},reset()V{0=3250}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,171: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,171: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,171: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,171: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,171: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,171: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,172: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4981, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=4981},nextIsSep()Z{0=4981},nextIsSep()Z{0=4981},hasMoreTokens()Z{0=4981},countTokens()I{0=4981}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,172: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,172: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,172: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,172: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,172: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,172: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,173: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2297, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2297},isLetterOrDigitAhead()Z{0=2297},hasMoreTokens()Z{0=2297},countTokens()I{0=2297},isLetterOrDigitAhead()Z{0=2297}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2297}"];
	2 -> 2 [label="nextIsSep()Z{0=2297},isLetterOrDigitAhead()Z{0=2297},nextIsSep()Z{0=2297}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,173: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,173: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,173: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,173: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,173: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,173: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,173: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5393, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5393},hasMoreTokens()Z{0=5393},nextIsSep()Z{0=5393},countTokens()I{0=5393},hasMoreTokens()Z{0=5393},isLetterOrDigitAhead()Z{0=5393},reset()V{0=5393}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5393}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=5393}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,174: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,174: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,174: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,174: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,174: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,174: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,174: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3261, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3261},countTokens()I{0=3261},reset()V{0=3261},countTokens()I{0=3261},countTokens()I{0=3261},nextIsSep()Z{0=3261},nextIsSep()Z{0=3261},nextIsSep()Z{0=3261},hasMoreTokens()Z{0=3261}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,175: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,175: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,175: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,175: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,175: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,175: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,175: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5933, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5933},countTokens()I{0=5933},hasMoreTokens()Z{0=5933},nextIsSep()Z{0=5933},countTokens()I{0=5933}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5933}"];
	2 -> 2 [label="nextIsSep()Z{0=5933},nextIsSep()Z{0=5933}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,176: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,176: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,176: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,176: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,176: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,176: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,176: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2767, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2767},hasMoreTokens()Z{0=2767},nextIsSep()Z{0=2767},hasMoreTokens()Z{0=2767},countTokens()I{0=2767}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2767},nextToken()Ljava/lang/String;{0=2767}"];
	2 -> 1 [label="reset()V{0=2767}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,177: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,177: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,177: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,177: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,177: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,177: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,177: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4966, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4966},nextIsSep()Z{0=4966},nextIsSep()Z{0=4966},hasMoreTokens()Z{0=4966},reset()V{0=4966},countTokens()I{0=4966},isLetterOrDigitAhead()Z{0=4966},isLetterOrDigitAhead()Z{0=4966}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,178: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,178: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,178: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,178: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,178: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,178: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,178: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2753, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2753},hasMoreTokens()Z{0=2753},countTokens()I{0=2753},isLetterOrDigitAhead()Z{0=2753},countTokens()I{0=2753},isLetterOrDigitAhead()Z{0=2753}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,179: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,179: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,179: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,179: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,179: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,179: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,179: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2277, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2277},isLetterOrDigitAhead()Z{0=2277},countTokens()I{0=2277},isLetterOrDigitAhead()Z{0=2277},hasMoreTokens()Z{0=2277}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2277}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2277},nextIsSep()Z{0=2277},hasMoreTokens()Z{0=2277}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,179: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,180: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,180: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,180: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,180: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,180: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,180: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3726, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3726},isLetterOrDigitAhead()Z{0=3726},countTokens()I{0=3726},countTokens()I{0=3726},isLetterOrDigitAhead()Z{0=3726}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3726}"];
	2 -> 2 [label="countTokens()I{0=3726},nextIsSep()Z{0=3726},hasMoreTokens()Z{0=3726}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,180: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,181: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,181: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,181: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,181: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,181: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,181: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2272, 1=1738}"];
	1 -> 1 [label="reset()V{0=2272},reset()V{0=2272},hasMoreTokens()Z{0=2272}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,181: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,181: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,181: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,181: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,182: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,182: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,182: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3165, 1=1738}"];
	1 -> 1 [label="reset()V{0=3165},hasMoreTokens()Z{0=3165},nextIsSep()Z{0=3165}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3165}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=3165}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,182: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,182: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,182: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,182: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,182: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,182: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,183: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2612, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2612},reset()V{0=2612}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2612}"];
	2 -> 2 [label="countTokens()I{0=2612},countTokens()I{0=2612}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,183: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,183: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,183: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,183: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,183: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,183: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,184: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3710, 1=1738}"];
	1 -> 1 [label="reset()V{0=3710},hasMoreTokens()Z{0=3710},nextIsSep()Z{0=3710}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3710}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3710},isLetterOrDigitAhead()Z{0=3710},countTokens()I{0=3710}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,184: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,184: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,184: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,184: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,184: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,184: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,185: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5014, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5014},isLetterOrDigitAhead()Z{0=5014},countTokens()I{0=5014},isLetterOrDigitAhead()Z{0=5014},hasMoreTokens()Z{0=5014}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5014}"];
	2 -> 2 [label="countTokens()I{0=5014},hasMoreTokens()Z{0=5014},nextToken()Ljava/lang/String;{0=5014}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,185: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,185: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,185: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,185: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,185: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,185: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,185: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3696, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3696},reset()V{0=3696}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3696}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3696}"];
	2 -> 1 [label="reset()V{0=3696}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,186: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,186: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,186: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,186: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,186: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,186: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,186: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2079, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=2079},nextIsSep()Z{0=2079},nextIsSep()Z{0=2079},hasMoreTokens()Z{0=2079},nextIsSep()Z{0=2079},countTokens()I{0=2079}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2079}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2079}"];
	2 -> 1 [label="reset()V{0=2079}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,187: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,187: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,187: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,187: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,187: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,187: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,187: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5626, 1=1738}"];
	1 -> 1 [label="reset()V{0=5626},hasMoreTokens()Z{0=5626}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5626}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=5626},isLetterOrDigitAhead()Z{0=5626}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,188: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,188: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,188: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,188: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,188: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,188: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,188: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3149, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=3149},countTokens()I{0=3149},nextIsSep()Z{0=3149},hasMoreTokens()Z{0=3149},nextIsSep()Z{0=3149},reset()V{0=3149}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3149}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3149}"];
	2 -> 1 [label="reset()V{0=3149}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,189: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,189: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,189: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,189: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,189: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,189: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,189: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4522, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=4522},hasMoreTokens()Z{0=4522},reset()V{0=4522},isLetterOrDigitAhead()Z{0=4522},nextIsSep()Z{0=4522},nextIsSep()Z{0=4522},hasMoreTokens()Z{0=4522},countTokens()I{0=4522},isLetterOrDigitAhead()Z{0=4522}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4522}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4522}"];
	2 -> 1 [label="reset()V{0=4522}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,190: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,190: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,190: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,190: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,190: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,190: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,190: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4512, 1=2437}"];
	1 -> 1 [label="reset()V{0=4512},reset()V{0=4512},countTokens()I{0=4512},nextIsSep()Z{0=4512}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,191: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,191: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,191: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,191: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,191: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,191: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,191: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4997, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=4997},nextIsSep()Z{0=4997},countTokens()I{0=4997},countTokens()I{0=4997},countTokens()I{0=4997}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4997}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,192: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,192: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,192: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,192: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,192: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,192: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,192: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5611, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5611},countTokens()I{0=5611},isLetterOrDigitAhead()Z{0=5611},nextIsSep()Z{0=5611},hasMoreTokens()Z{0=5611},countTokens()I{0=5611},isLetterOrDigitAhead()Z{0=5611}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,192: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,193: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,193: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,193: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,193: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,193: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,193: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5591, 1=109}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5591},reset()V{0=5591},hasMoreTokens()Z{0=5591}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,193: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,193: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,194: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,194: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,194: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,194: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,194: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2097, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2097},isLetterOrDigitAhead()Z{0=2097},hasMoreTokens()Z{0=2097},countTokens()I{0=2097},isLetterOrDigitAhead()Z{0=2097}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2097}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2097},nextIsSep()Z{0=2097},nextToken()Ljava/lang/String;{0=2097},hasMoreTokens()Z{0=2097}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,194: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,194: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,194: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,194: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,195: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,195: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,195: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2582, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=2582},countTokens()I{0=2582},nextIsSep()Z{0=2582},nextIsSep()Z{0=2582},hasMoreTokens()Z{0=2582}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2582}"];
	2 -> 2 [label="countTokens()I{0=2582},isLetterOrDigitAhead()Z{0=2582},nextToken()Ljava/lang/String;{0=2582}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,195: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,195: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,195: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,195: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,195: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,196: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,196: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3194, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3194},hasMoreTokens()Z{0=3194},nextIsSep()Z{0=3194},countTokens()I{0=3194}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3194},nextToken()Ljava/lang/String;{0=3194}"];
	2 -> 1 [label="reset()V{0=3194}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,196: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,196: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,196: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,196: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,196: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,196: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,197: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3679, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3679},isLetterOrDigitAhead()Z{0=3679},countTokens()I{0=3679},isLetterOrDigitAhead()Z{0=3679},hasMoreTokens()Z{0=3679}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3679}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3679}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,197: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,197: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,197: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,197: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,197: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,197: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,198: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5596, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5596},countTokens()I{0=5596},reset()V{0=5596},isLetterOrDigitAhead()Z{0=5596},nextIsSep()Z{0=5596},hasMoreTokens()Z{0=5596},nextIsSep()Z{0=5596},nextIsSep()Z{0=5596}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,198: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,198: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,198: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,198: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,198: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,198: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,198: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3666, 1=1738}"];
	1 -> 1 [label="reset()V{0=3666},countTokens()I{0=3666},countTokens()I{0=3666},nextIsSep()Z{0=3666},reset()V{0=3666},countTokens()I{0=3666},nextIsSep()Z{0=3666},hasMoreTokens()Z{0=3666}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,199: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,199: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,199: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,199: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,199: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,199: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,199: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4501, 1=1738}"];
	1 -> 1 [label="reset()V{0=4501},countTokens()I{0=4501},isLetterOrDigitAhead()Z{0=4501},nextIsSep()Z{0=4501},hasMoreTokens()Z{0=4501},nextIsSep()Z{0=4501}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,200: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,200: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,200: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,200: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,200: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,200: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,200: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4488, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4488},isLetterOrDigitAhead()Z{0=4488},countTokens()I{0=4488},reset()V{0=4488},reset()V{0=4488},hasMoreTokens()Z{0=4488}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,201: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,201: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,201: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,201: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,201: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,201: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,201: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2560, 1=1738}"];
	1 -> 1 [label="reset()V{0=2560},hasMoreTokens()Z{0=2560},countTokens()I{0=2560},isLetterOrDigitAhead()Z{0=2560},nextIsSep()Z{0=2560},nextIsSep()Z{0=2560},hasMoreTokens()Z{0=2560}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,201: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,202: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,202: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,202: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,202: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,202: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,202: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3176, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3176},isLetterOrDigitAhead()Z{0=3176},hasMoreTokens()Z{0=3176},countTokens()I{0=3176},isLetterOrDigitAhead()Z{0=3176}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3176}"];
	2 -> 2 [label="nextIsSep()Z{0=3176},nextIsSep()Z{0=3176}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,202: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,202: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,202: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,203: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,203: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,203: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,203: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5035, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5035},countTokens()I{0=5035},isLetterOrDigitAhead()Z{0=5035},reset()V{0=5035},hasMoreTokens()Z{0=5035},countTokens()I{0=5035},isLetterOrDigitAhead()Z{0=5035},reset()V{0=5035}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,203: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,203: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,203: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,203: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,203: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,204: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,204: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5576, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5576},countTokens()I{0=5576},isLetterOrDigitAhead()Z{0=5576},hasMoreTokens()Z{0=5576},nextIsSep()Z{0=5576},hasMoreTokens()Z{0=5576},nextIsSep()Z{0=5576}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,204: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,204: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,204: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,204: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,204: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,204: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,204: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3654, 1=1738}"];
	1 -> 1 [label="reset()V{0=3654},countTokens()I{0=3654},countTokens()I{0=3654},nextIsSep()Z{0=3654},nextIsSep()Z{0=3654},hasMoreTokens()Z{0=3654},reset()V{0=3654}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,205: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,205: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,205: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,205: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,205: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,205: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,205: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5555, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5555},hasMoreTokens()Z{0=5555},countTokens()I{0=5555},hasMoreTokens()Z{0=5555},nextIsSep()Z{0=5555},countTokens()I{0=5555},countTokens()I{0=5555}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5555}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5555}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,206: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,206: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,206: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,206: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,206: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,206: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,206: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5085, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5085},hasMoreTokens()Z{0=5085},nextIsSep()Z{0=5085},hasMoreTokens()Z{0=5085},nextIsSep()Z{0=5085},countTokens()I{0=5085}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5085}"];
	2 -> 1 [label="reset()V{0=5085}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,207: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,207: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,207: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,207: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,207: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,207: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,207: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2682, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2682},hasMoreTokens()Z{0=2682},nextIsSep()Z{0=2682}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2682}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=2682}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,208: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,208: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,208: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,208: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,208: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,208: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,208: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3634, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3634},nextIsSep()Z{0=3634},countTokens()I{0=3634},nextIsSep()Z{0=3634},hasMoreTokens()Z{0=3634},hasMoreTokens()Z{0=3634},countTokens()I{0=3634},isLetterOrDigitAhead()Z{0=3634},countTokens()I{0=3634}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,209: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,209: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,209: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,209: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,209: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,209: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,209: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3095, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3095},countTokens()I{0=3095},isLetterOrDigitAhead()Z{0=3095},countTokens()I{0=3095},isLetterOrDigitAhead()Z{0=3095},isLetterOrDigitAhead()Z{0=3095},countTokens()I{0=3095}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3095}"];
	2 -> 1 [label="reset()V{0=3095}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,210: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,210: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,210: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,210: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,210: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,210: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,210: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4594, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4594},countTokens()I{0=4594},hasMoreTokens()Z{0=4594},nextIsSep()Z{0=4594},nextIsSep()Z{0=4594},countTokens()I{0=4594},countTokens()I{0=4594},isLetterOrDigitAhead()Z{0=4594}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4594}"];
	2 -> 2 [label="@nextIsSep()Z{0=4594},nextToken()Ljava/lang/String;{0=4594}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,211: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,211: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,211: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,211: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,211: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,211: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,211: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2659, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2659},nextIsSep()Z{0=2659},nextIsSep()Z{0=2659}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,212: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,212: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,212: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,212: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,212: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,212: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,212: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3082, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3082},countTokens()I{0=3082},isLetterOrDigitAhead()Z{0=3082},hasMoreTokens()Z{0=3082},nextIsSep()Z{0=3082},countTokens()I{0=3082}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,212: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,212: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,213: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,213: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,213: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,213: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,213: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2666, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2666},nextIsSep()Z{0=2666},nextIsSep()Z{0=2666},hasMoreTokens()Z{0=2666},isLetterOrDigitAhead()Z{0=2666},countTokens()I{0=2666},isLetterOrDigitAhead()Z{0=2666}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,213: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,213: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,213: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,213: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,213: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,214: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,214: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3075, 1=109}"];
	1 -> 1 [label="countTokens()I{0=3075}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,214: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,214: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,214: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,214: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,214: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,214: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,214: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4577, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4577},isLetterOrDigitAhead()Z{0=4577},countTokens()I{0=4577},hasMoreTokens()Z{0=4577},nextIsSep()Z{0=4577},countTokens()I{0=4577},countTokens()I{0=4577},nextIsSep()Z{0=4577}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,215: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,215: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,215: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,215: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,215: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,215: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,215: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3616, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3616},countTokens()I{0=3616},nextIsSep()Z{0=3616},nextIsSep()Z{0=3616},hasMoreTokens()Z{0=3616},nextIsSep()Z{0=3616}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3616}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3616}"];
	2 -> 1 [label="reset()V{0=3616}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,216: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,216: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,216: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,216: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,216: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,216: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,216: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3129, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3129},isLetterOrDigitAhead()Z{0=3129},hasMoreTokens()Z{0=3129},countTokens()I{0=3129},isLetterOrDigitAhead()Z{0=3129}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3129}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3129},hasMoreTokens()Z{0=3129},nextIsSep()Z{0=3129}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,217: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,217: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,217: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,217: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,217: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,217: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,217: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2164, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2164},hasMoreTokens()Z{0=2164},nextIsSep()Z{0=2164},nextIsSep()Z{0=2164},countTokens()I{0=2164},reset()V{0=2164}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2164}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2164}"];
	2 -> 1 [label="reset()V{0=2164}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,218: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,218: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,218: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,218: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,218: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,218: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,218: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5531, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5531},nextIsSep()Z{0=5531},nextIsSep()Z{0=5531},hasMoreTokens()Z{0=5531},countTokens()I{0=5531},reset()V{0=5531},countTokens()I{0=5531},countTokens()I{0=5531}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5531}"];
	2 -> 2 [label="countTokens()I{0=5531},isLetterOrDigitAhead()Z{0=5531},countTokens()I{0=5531}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,219: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,219: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,219: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,219: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,219: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,219: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,219: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3127, 1=1961}"];
	1 -> 1 [label="reset()V{0=3127}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,220: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,220: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,220: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,220: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,220: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,220: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,220: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4560, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4560},countTokens()I{0=4560},nextIsSep()Z{0=4560},hasMoreTokens()Z{0=4560},nextIsSep()Z{0=4560},countTokens()I{0=4560},hasMoreTokens()Z{0=4560},nextIsSep()Z{0=4560}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,220: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,221: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,221: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,221: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,221: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,221: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,221: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3115, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3115},reset()V{0=3115},hasMoreTokens()Z{0=3115},nextIsSep()Z{0=3115},countTokens()I{0=3115},nextIsSep()Z{0=3115}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,221: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,221: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,221: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,221: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,222: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,222: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,222: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2151, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2151},nextIsSep()Z{0=2151},nextIsSep()Z{0=2151},hasMoreTokens()Z{0=2151}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2151}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,222: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,222: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,222: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,222: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,222: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,222: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,223: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2626, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2626},hasMoreTokens()Z{0=2626},countTokens()I{0=2626}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2626}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,223: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,223: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,223: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,223: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,223: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,223: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,224: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3599, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3599},isLetterOrDigitAhead()Z{0=3599},countTokens()I{0=3599},isLetterOrDigitAhead()Z{0=3599},reset()V{0=3599},countTokens()I{0=3599},isLetterOrDigitAhead()Z{0=3599}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3599}"];
	2 -> 1 [label="reset()V{0=3599}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,224: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,224: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,224: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,224: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,224: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,224: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,225: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5510, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5510},countTokens()I{0=5510},isLetterOrDigitAhead()Z{0=5510},hasMoreTokens()Z{0=5510},countTokens()I{0=5510},countTokens()I{0=5510},isLetterOrDigitAhead()Z{0=5510}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5510},nextToken()Ljava/lang/String;{0=5510}"];
	2 -> 1 [label="reset()V{0=5510},reset()V{0=5510}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,225: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,225: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,225: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,225: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,225: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,225: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,225: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5101, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5101},hasMoreTokens()Z{0=5101},isLetterOrDigitAhead()Z{0=5101},nextIsSep()Z{0=5101},nextIsSep()Z{0=5101},hasMoreTokens()Z{0=5101},isLetterOrDigitAhead()Z{0=5101},countTokens()I{0=5101},countTokens()I{0=5101}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,226: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,226: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,226: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,226: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,226: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,226: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,226: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2637, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2637},countTokens()I{0=2637},isLetterOrDigitAhead()Z{0=2637},hasMoreTokens()Z{0=2637},isLetterOrDigitAhead()Z{0=2637},countTokens()I{0=2637}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2637}"];
	2 -> 2 [label="countTokens()I{0=2637},countTokens()I{0=2637}"];
	2 -> 1 [label="reset()V{0=2637}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,227: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,227: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,227: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,227: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,227: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,227: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,227: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4544, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4544},isLetterOrDigitAhead()Z{0=4544},reset()V{0=4544},hasMoreTokens()Z{0=4544},countTokens()I{0=4544},isLetterOrDigitAhead()Z{0=4544},isLetterOrDigitAhead()Z{0=4544}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4544}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,228: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,228: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,228: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,228: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,228: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,228: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,228: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4064, 1=2437}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4064}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,229: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,229: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,229: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,229: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,229: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,229: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,229: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2986, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2986},nextIsSep()Z{0=2986},nextIsSep()Z{0=2986},hasMoreTokens()Z{0=2986},reset()V{0=2986}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2986}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2986},nextIsSep()Z{0=2986}"];
	2 -> 1 [label="reset()V{0=2986}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,230: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,230: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,230: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,230: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,230: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,230: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,230: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4073, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4073},hasMoreTokens()Z{0=4073},nextIsSep()Z{0=4073},countTokens()I{0=4073}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4073}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4073}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,231: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,231: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,231: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,231: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,231: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,231: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,231: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2439, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2439},countTokens()I{0=2439},isLetterOrDigitAhead()Z{0=2439},countTokens()I{0=2439},isLetterOrDigitAhead()Z{0=2439}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2439}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=2439},hasMoreTokens()Z{0=2439},nextIsSep()Z{0=2439},countTokens()I{0=2439}"];
	2 -> 1 [label="reset()V{0=2439}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,231: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,232: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,232: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,232: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,232: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,232: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,232: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4617, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4617},countTokens()I{0=4617},nextIsSep()Z{0=4617},nextIsSep()Z{0=4617},hasMoreTokens()Z{0=4617}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4617}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4617},isLetterOrDigitAhead()Z{0=4617},nextToken()Ljava/lang/String;{0=4617},nextIsSep()Z{0=4617}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,232: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,232: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,233: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,233: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,233: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,233: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,233: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4142, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4142},isLetterOrDigitAhead()Z{0=4142},isLetterOrDigitAhead()Z{0=4142},countTokens()I{0=4142},hasMoreTokens()Z{0=4142}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4142}"];
	2 -> 2 [label="countTokens()I{0=4142},countTokens()I{0=4142},countTokens()I{0=4142},isLetterOrDigitAhead()Z{0=4142}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,233: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,233: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,233: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,234: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,234: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,234: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,234: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1910, 1=1738}"];
	1 -> 1 [label="reset()V{0=1910},reset()V{0=1910},hasMoreTokens()Z{0=1910}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,234: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,234: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,234: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,234: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,234: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,234: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,235: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3536, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3536},reset()V{0=3536},hasMoreTokens()Z{0=3536},nextIsSep()Z{0=3536},countTokens()I{0=3536}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3536}"];
	2 -> 1 [label="reset()V{0=3536}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,235: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,235: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,235: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,235: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,235: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,235: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,236: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3002, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3002},nextIsSep()Z{0=3002},hasMoreTokens()Z{0=3002},countTokens()I{0=3002}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3002}"];
	2 -> 2 [label="@nextIsSep()Z{0=3002},nextToken()Ljava/lang/String;{0=3002},hasMoreTokens()Z{0=3002}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,236: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,236: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,236: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,236: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,236: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,236: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,237: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4087, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4087},nextIsSep()Z{0=4087},hasMoreTokens()Z{0=4087},nextIsSep()Z{0=4087},hasMoreTokens()Z{0=4087}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,237: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,237: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,237: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,237: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,237: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,237: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,237: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5713, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5713},nextIsSep()Z{0=5713},nextIsSep()Z{0=5713},nextIsSep()Z{0=5713},hasMoreTokens()Z{0=5713},reset()V{0=5713},isLetterOrDigitAhead()Z{0=5713},hasMoreTokens()Z{0=5713},hasMoreTokens()Z{0=5713}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5713}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5713}"];
	2 -> 1 [label="reset()V{0=5713}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,238: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,238: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,238: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,238: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,238: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,238: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,238: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5232, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5232},hasMoreTokens()Z{0=5232},hasMoreTokens()Z{0=5232},isLetterOrDigitAhead()Z{0=5232},isLetterOrDigitAhead()Z{0=5232},reset()V{0=5232}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5232}"];
	2 -> 2 [label="countTokens()I{0=5232}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,239: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,239: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,239: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,239: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,239: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,239: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,239: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3558, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3558},nextIsSep()Z{0=3558},hasMoreTokens()Z{0=3558},nextIsSep()Z{0=3558},isLetterOrDigitAhead()Z{0=3558}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3558}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=3558}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,240: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,240: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,240: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,240: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,240: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,240: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,240: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4098, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4098},nextIsSep()Z{0=4098},hasMoreTokens()Z{0=4098},nextIsSep()Z{0=4098}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4098}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4098},isLetterOrDigitAhead()Z{0=4098}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,241: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,241: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,241: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,241: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,241: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,241: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,241: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4036, 1=1738}"];
	1 -> 1 [label="reset()V{0=4036},isLetterOrDigitAhead()Z{0=4036},hasMoreTokens()Z{0=4036},countTokens()I{0=4036},reset()V{0=4036},isLetterOrDigitAhead()Z{0=4036},nextIsSep()Z{0=4036},nextIsSep()Z{0=4036},hasMoreTokens()Z{0=4036}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4036}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4036}"];
	2 -> 1 [label="reset()V{0=4036}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,242: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,242: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,242: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,242: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,242: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,242: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,242: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4640, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4640},reset()V{0=4640},countTokens()I{0=4640},hasMoreTokens()Z{0=4640},nextIsSep()Z{0=4640}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4640}"];
	2 -> 1 [label="reset()V{0=4640}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,243: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,243: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,243: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,243: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,243: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,243: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,243: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4654, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=4654},hasMoreTokens()Z{0=4654},isLetterOrDigitAhead()Z{0=4654},reset()V{0=4654},nextIsSep()Z{0=4654},nextIsSep()Z{0=4654},hasMoreTokens()Z{0=4654},countTokens()I{0=4654}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,244: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,244: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,244: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,244: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,244: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,244: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,244: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5735, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5735},hasMoreTokens()Z{0=5735},reset()V{0=5735}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5735}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5735},countTokens()I{0=5735},hasMoreTokens()Z{0=5735},hasMoreTokens()Z{0=5735}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,245: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,245: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,245: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,245: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,245: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,245: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,245: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2944, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2944},nextIsSep()Z{0=2944},nextIsSep()Z{0=2944},hasMoreTokens()Z{0=2944}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2944}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=2944},hasMoreTokens()Z{0=2944}"];
	2 -> 1 [label="reset()V{0=2944}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,246: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,246: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,246: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,246: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,246: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,246: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,246: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5752, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5752},countTokens()I{0=5752},nextIsSep()Z{0=5752},hasMoreTokens()Z{0=5752},nextIsSep()Z{0=5752}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5752}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5752},nextToken()Ljava/lang/String;{0=5752},hasMoreTokens()Z{0=5752},nextIsSep()Z{0=5752},countTokens()I{0=5752},isLetterOrDigitAhead()Z{0=5752},nextIsSep()Z{0=5752}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,247: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,247: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,247: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,247: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,247: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,247: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,247: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4114, 1=1738}"];
	1 -> 1 [label="reset()V{0=4114},hasMoreTokens()Z{0=4114}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4114}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4114}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,248: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,248: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,248: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,248: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,248: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,248: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,248: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3575, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3575},nextIsSep()Z{0=3575},reset()V{0=3575}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3575}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,249: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,249: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,249: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,249: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,249: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,249: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,249: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2495, 1=109}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=2495},reset()V{0=2495}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,250: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,250: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,250: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,250: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,250: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,250: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,250: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2964, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2964},hasMoreTokens()Z{0=2964},nextIsSep()Z{0=2964},countTokens()I{0=2964},isLetterOrDigitAhead()Z{0=2964}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2964}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2964},nextIsSep()Z{0=2964},isLetterOrDigitAhead()Z{0=2964},countTokens()I{0=2964}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,251: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,251: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,251: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,251: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,251: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,251: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,251: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4056, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4056}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4056},nextIsSep()Z{0=4056}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,252: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,252: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,252: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,252: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,252: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,252: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,252: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5206, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5206},hasMoreTokens()Z{0=5206},countTokens()I{0=5206},isLetterOrDigitAhead()Z{0=5206},countTokens()I{0=5206},isLetterOrDigitAhead()Z{0=5206},countTokens()I{0=5206},isLetterOrDigitAhead()Z{0=5206}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5206}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5206},nextIsSep()Z{0=5206},countTokens()I{0=5206}"];
	2 -> 1 [label="reset()V{0=5206}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,253: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,253: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,253: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,253: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,253: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,253: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,253: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3583, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3583},nextIsSep()Z{0=3583},hasMoreTokens()Z{0=3583},countTokens()I{0=3583}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3583}"];
	2 -> 2 [label="countTokens()I{0=3583},hasMoreTokens()Z{0=3583}"];
	2 -> 1 [label="reset()V{0=3583}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,254: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,254: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,254: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,254: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,254: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,254: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,254: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4123, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4123},nextIsSep()Z{0=4123},hasMoreTokens()Z{0=4123},countTokens()I{0=4123}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4123}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4123},hasMoreTokens()Z{0=4123},isLetterOrDigitAhead()Z{0=4123}"];
	2 -> 1 [label="reset()V{0=4123}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,255: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,255: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,255: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,255: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,255: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,255: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,255: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4669, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4669},nextIsSep()Z{0=4669},hasMoreTokens()Z{0=4669},hasMoreTokens()Z{0=4669},isLetterOrDigitAhead()Z{0=4669},reset()V{0=4669}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,256: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,256: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,256: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,256: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,256: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,256: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,256: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4199, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=4199},countTokens()I{0=4199},isLetterOrDigitAhead()Z{0=4199},countTokens()I{0=4199},isLetterOrDigitAhead()Z{0=4199}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4199}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4199},hasMoreTokens()Z{0=4199},nextIsSep()Z{0=4199},nextToken()Ljava/lang/String;{0=4199},isLetterOrDigitAhead()Z{0=4199},countTokens()I{0=4199}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,257: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,257: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,257: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,257: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,257: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,257: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,257: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3458, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3458},reset()V{0=3458},countTokens()I{0=3458},hasMoreTokens()Z{0=3458},nextIsSep()Z{0=3458},nextIsSep()Z{0=3458},countTokens()I{0=3458},countTokens()I{0=3458},nextIsSep()Z{0=3458},hasMoreTokens()Z{0=3458},nextIsSep()Z{0=3458}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,258: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,258: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,258: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,258: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,258: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,258: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,258: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4004, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4004},nextToken()Ljava/lang/String;{0=4004}"];
	2 -> 2 [label="nextIsSep()Z{0=4004}"];
	2 -> 1 [label="reset()V{0=4004}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,259: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,259: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,259: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,259: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,259: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,259: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,259: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1848, 1=109}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=1848},@nextIsSep()Z{0=1848}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,259: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,259: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,260: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,260: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,260: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,260: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,260: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5637, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5637},hasMoreTokens()Z{0=5637},isLetterOrDigitAhead()Z{0=5637},nextIsSep()Z{0=5637},isLetterOrDigitAhead()Z{0=5637}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5637}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,260: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,260: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,260: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,261: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,261: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,261: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,261: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4013, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4013},nextIsSep()Z{0=4013},nextIsSep()Z{0=4013},hasMoreTokens()Z{0=4013},countTokens()I{0=4013}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4013}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4013}"];
	2 -> 1 [label="reset()V{0=4013}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,261: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,261: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,261: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,262: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,262: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,262: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,262: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4680, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4680},countTokens()I{0=4680},nextIsSep()Z{0=4680},nextIsSep()Z{0=4680},hasMoreTokens()Z{0=4680}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4680}"];
	2 -> 2 [label="countTokens()I{0=4680},isLetterOrDigitAhead()Z{0=4680},nextIsSep()Z{0=4680},isLetterOrDigitAhead()Z{0=4680},nextToken()Ljava/lang/String;{0=4680},hasMoreTokens()Z{0=4680}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,262: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,262: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,262: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,263: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,263: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,263: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,263: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3045, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3045},hasMoreTokens()Z{0=3045},nextIsSep()Z{0=3045},countTokens()I{0=3045},countTokens()I{0=3045},isLetterOrDigitAhead()Z{0=3045}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3045}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3045},isLetterOrDigitAhead()Z{0=3045}"];
	2 -> 1 [label="reset()V{0=3045}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,263: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,263: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,263: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,264: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,264: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,264: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,264: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2498, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2498},nextIsSep()Z{0=2498},nextIsSep()Z{0=2498},nextIsSep()Z{0=2498},hasMoreTokens()Z{0=2498},isLetterOrDigitAhead()Z{0=2498},hasMoreTokens()Z{0=2498}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2498}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2498}"];
	2 -> 1 [label="reset()V{0=2498}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,264: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,264: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,264: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,265: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,265: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,265: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,265: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5177, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5177},hasMoreTokens()Z{0=5177},reset()V{0=5177}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5177}"];
	2 -> 2 [label="nextIsSep()Z{0=5177},isLetterOrDigitAhead()Z{0=5177},countTokens()I{0=5177},hasMoreTokens()Z{0=5177}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,265: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,265: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,265: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,266: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,266: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,266: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,266: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2522, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2522},nextIsSep()Z{0=2522},hasMoreTokens()Z{0=2522},nextIsSep()Z{0=2522},isLetterOrDigitAhead()Z{0=2522}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2522}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2522},countTokens()I{0=2522},isLetterOrDigitAhead()Z{0=2522}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,266: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,266: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,266: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,266: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,267: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,267: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,267: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1834, 1=109}"];
	1 -> 1 [label="@nextToken()Ljava/lang/String;{0=1834}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,267: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,267: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,267: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,267: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,267: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,267: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,268: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3480, 1=1738}"];
	1 -> 1 [label="reset()V{0=3480},countTokens()I{0=3480},countTokens()I{0=3480},isLetterOrDigitAhead()Z{0=3480},countTokens()I{0=3480},isLetterOrDigitAhead()Z{0=3480},reset()V{0=3480},hasMoreTokens()Z{0=3480}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,268: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,268: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,268: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,268: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,268: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,268: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,269: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5651, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5651},hasMoreTokens()Z{0=5651},nextIsSep()Z{0=5651},countTokens()I{0=5651}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5651}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5651},nextIsSep()Z{0=5651},isLetterOrDigitAhead()Z{0=5651}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,269: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,269: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,269: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,269: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,269: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,269: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,270: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4707, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4707},nextIsSep()Z{0=4707},hasMoreTokens()Z{0=4707},nextIsSep()Z{0=4707}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4707}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4707},hasMoreTokens()Z{0=4707},isLetterOrDigitAhead()Z{0=4707},hasMoreTokens()Z{0=4707}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,270: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,270: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,270: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,270: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,270: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,270: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,271: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2542, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2542},isLetterOrDigitAhead()Z{0=2542},hasMoreTokens()Z{0=2542},isLetterOrDigitAhead()Z{0=2542},countTokens()I{0=2542}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2542}"];
	2 -> 2 [label="countTokens()I{0=2542},countTokens()I{0=2542}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,271: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,271: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,271: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,271: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,271: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,271: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,271: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3493, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3493},hasMoreTokens()Z{0=3493},nextIsSep()Z{0=3493},countTokens()I{0=3493},isLetterOrDigitAhead()Z{0=3493}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3493}"];
	2 -> 2 [label="@nextToken()Ljava/lang/String;{0=3493},nextToken()Ljava/lang/String;{0=3493}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,272: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,272: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,272: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,272: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,272: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,272: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,272: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3022, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3022},isLetterOrDigitAhead()Z{0=3022},countTokens()I{0=3022},countTokens()I{0=3022},nextIsSep()Z{0=3022},hasMoreTokens()Z{0=3022},countTokens()I{0=3022}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,273: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,273: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,273: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,273: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,273: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,273: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,273: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5135, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5135},countTokens()I{0=5135},hasMoreTokens()Z{0=5135},nextIsSep()Z{0=5135},countTokens()I{0=5135},isLetterOrDigitAhead()Z{0=5135}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5135}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,274: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,274: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,274: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,274: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,274: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,274: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,274: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5120, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5120},nextIsSep()Z{0=5120},hasMoreTokens()Z{0=5120},nextIsSep()Z{0=5120}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5120}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=5120}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,275: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,275: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,275: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,275: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,275: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,275: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,275: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5669, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5669},hasMoreTokens()Z{0=5669},countTokens()I{0=5669}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5669},nextToken()Ljava/lang/String;{0=5669}"];
	2 -> 1 [label="reset()V{0=5669}"];
	2 -> 2 [label="countTokens()I{0=5669}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,276: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,276: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,276: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,276: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,276: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,276: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,276: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3980, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3980},nextIsSep()Z{0=3980},nextIsSep()Z{0=3980},countTokens()I{0=3980},countTokens()I{0=3980},isLetterOrDigitAhead()Z{0=3980},hasMoreTokens()Z{0=3980},nextIsSep()Z{0=3980},nextIsSep()Z{0=3980}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3980}"];
	2 -> 2 [label="countTokens()I{0=3980}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,277: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,277: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,277: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,277: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,277: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,277: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,277: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5693, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5693},nextIsSep()Z{0=5693},hasMoreTokens()Z{0=5693},nextIsSep()Z{0=5693}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5693}"];
	2 -> 2 [label="countTokens()I{0=5693},nextToken()Ljava/lang/String;{0=5693},hasMoreTokens()Z{0=5693},@nextIsSep()Z{0=5693}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,278: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,278: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,278: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,278: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,278: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,278: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,278: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3511, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3511},nextIsSep()Z{0=3511},hasMoreTokens()Z{0=3511},nextIsSep()Z{0=3511},isLetterOrDigitAhead()Z{0=3511}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3511}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3511},@nextIsSep()Z{0=3511},nextIsSep()Z{0=3511},isLetterOrDigitAhead()Z{0=3511},nextToken()Ljava/lang/String;{0=3511},nextIsSep()Z{0=3511}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,279: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,279: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,279: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,279: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,279: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,279: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,279: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5151, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5151},nextIsSep()Z{0=5151},nextIsSep()Z{0=5151},nextIsSep()Z{0=5151},hasMoreTokens()Z{0=5151},countTokens()I{0=5151},countTokens()I{0=5151},hasMoreTokens()Z{0=5151},isLetterOrDigitAhead()Z{0=5151}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5151}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5151}"];
	2 -> 1 [label="reset()V{0=5151}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,280: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,280: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,280: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,280: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,280: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,280: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,280: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4729, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4729},hasMoreTokens()Z{0=4729},nextIsSep()Z{0=4729},countTokens()I{0=4729},isLetterOrDigitAhead()Z{0=4729},isLetterOrDigitAhead()Z{0=4729}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4729}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4729}"];
	2 -> 1 [label="reset()V{0=4729}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,281: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,281: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,281: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,281: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,281: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,281: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,281: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3944, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3944},hasMoreTokens()Z{0=3944},nextIsSep()Z{0=3944},countTokens()I{0=3944}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3944}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=3944},hasMoreTokens()Z{0=3944},isLetterOrDigitAhead()Z{0=3944}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,282: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,282: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,282: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,282: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,282: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,282: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,282: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5826, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5826},isLetterOrDigitAhead()Z{0=5826},hasMoreTokens()Z{0=5826},reset()V{0=5826},countTokens()I{0=5826},isLetterOrDigitAhead()Z{0=5826}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5826}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5826},nextIsSep()Z{0=5826}"];
	2 -> 1 [label="reset()V{0=5826}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,283: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,283: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,283: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,283: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,283: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,283: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,283: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3404, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3404},nextIsSep()Z{0=3404},hasMoreTokens()Z{0=3404},countTokens()I{0=3404}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3404}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3404},countTokens()I{0=3404},nextToken()Ljava/lang/String;{0=3404},hasMoreTokens()Z{0=3404},countTokens()I{0=3404}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,284: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,284: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,284: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,284: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,284: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,284: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,284: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4268, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4268},isLetterOrDigitAhead()Z{0=4268},isLetterOrDigitAhead()Z{0=4268},countTokens()I{0=4268},isLetterOrDigitAhead()Z{0=4268},isLetterOrDigitAhead()Z{0=4268},nextIsSep()Z{0=4268},hasMoreTokens()Z{0=4268}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,285: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,285: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,285: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,285: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,285: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,285: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,285: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2043, 1=1738}"];
	1 -> 1 [label="reset()V{0=2043},countTokens()I{0=2043},nextIsSep()Z{0=2043},nextIsSep()Z{0=2043},nextIsSep()Z{0=2043},hasMoreTokens()Z{0=2043}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,286: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,286: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,286: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,286: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,286: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,286: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,286: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2317, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2317},reset()V{0=2317},hasMoreTokens()Z{0=2317}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2317}"];
	2 -> 2 [label="countTokens()I{0=2317},hasMoreTokens()Z{0=2317},hasMoreTokens()Z{0=2317}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,287: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,287: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,287: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,287: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,287: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,287: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,287: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5844, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5844},countTokens()I{0=5844},isLetterOrDigitAhead()Z{0=5844},nextIsSep()Z{0=5844},countTokens()I{0=5844},isLetterOrDigitAhead()Z{0=5844}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5844}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5844},nextIsSep()Z{0=5844},countTokens()I{0=5844}"];
	2 -> 1 [label="reset()V{0=5844}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,288: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,288: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,288: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,288: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,288: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,288: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,288: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3964, 1=1738}"];
	1 -> 1 [label="reset()V{0=3964},isLetterOrDigitAhead()Z{0=3964},countTokens()I{0=3964},nextIsSep()Z{0=3964},nextIsSep()Z{0=3964},hasMoreTokens()Z{0=3964},countTokens()I{0=3964}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3964}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,289: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,289: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,289: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,289: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,289: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,289: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,289: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4286, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4286},nextIsSep()Z{0=4286},nextIsSep()Z{0=4286},hasMoreTokens()Z{0=4286},nextIsSep()Z{0=4286},countTokens()I{0=4286},countTokens()I{0=4286},isLetterOrDigitAhead()Z{0=4286}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,290: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,290: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,290: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,290: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,290: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,290: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,290: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2866, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2866},nextIsSep()Z{0=2866},hasMoreTokens()Z{0=2866},countTokens()I{0=2866},reset()V{0=2866}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2866},nextToken()Ljava/lang/String;{0=2866}"];
	2 -> 1 [label="reset()V{0=2866},reset()V{0=2866}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,291: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,291: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,291: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,291: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,291: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,291: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,291: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4757, 1=1738}"];
	1 -> 1 [label="reset()V{0=4757},hasMoreTokens()Z{0=4757},nextIsSep()Z{0=4757}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4757}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4757},nextToken()Ljava/lang/String;{0=4757},isLetterOrDigitAhead()Z{0=4757}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,292: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,292: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,292: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,292: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,292: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,292: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,292: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5375, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5375},reset()V{0=5375},isLetterOrDigitAhead()Z{0=5375},nextIsSep()Z{0=5375}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5375},nextToken()Ljava/lang/String;{0=5375}"];
	2 -> 1 [label="reset()V{0=5375}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,293: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,293: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,293: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,293: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,293: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,293: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,293: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3915, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3915},countTokens()I{0=3915},hasMoreTokens()Z{0=3915},hasMoreTokens()Z{0=3915}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,293: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,294: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,294: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,294: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,294: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,294: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,294: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2339, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2339},nextIsSep()Z{0=2339},nextIsSep()Z{0=2339},hasMoreTokens()Z{0=2339},reset()V{0=2339},hasMoreTokens()Z{0=2339}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,294: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,294: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,294: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,295: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,295: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,295: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,295: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5319, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5319},nextIsSep()Z{0=5319},hasMoreTokens()Z{0=5319},countTokens()I{0=5319},isLetterOrDigitAhead()Z{0=5319}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5319}"];
	2 -> 2 [label="nextIsSep()Z{0=5319},countTokens()I{0=5319},countTokens()I{0=5319},hasMoreTokens()Z{0=5319},isLetterOrDigitAhead()Z{0=5319}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,295: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,295: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,295: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,296: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,296: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,296: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,296: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5866, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5866},nextIsSep()Z{0=5866},hasMoreTokens()Z{0=5866},nextIsSep()Z{0=5866},reset()V{0=5866},hasMoreTokens()Z{0=5866}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5866},nextToken()Ljava/lang/String;{0=5866}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5866}"];
	2 -> 1 [label="reset()V{0=5866}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,296: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,296: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,296: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,297: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,297: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,297: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,297: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3429, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3429},nextIsSep()Z{0=3429},hasMoreTokens()Z{0=3429},hasMoreTokens()Z{0=3429},isLetterOrDigitAhead()Z{0=3429},isLetterOrDigitAhead()Z{0=3429},reset()V{0=3429}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,297: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,297: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,297: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,297: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,298: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,298: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,298: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4226, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4226},nextIsSep()Z{0=4226},hasMoreTokens()Z{0=4226},nextIsSep()Z{0=4226},countTokens()I{0=4226},countTokens()I{0=4226},countTokens()I{0=4226},isLetterOrDigitAhead()Z{0=4226}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,298: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,298: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,298: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,298: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,298: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,298: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,299: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4772, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4772},nextIsSep()Z{0=4772},hasMoreTokens()Z{0=4772},countTokens()I{0=4772},hasMoreTokens()Z{0=4772},countTokens()I{0=4772},reset()V{0=4772}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4772}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4772}"];
	2 -> 1 [label="reset()V{0=4772}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,299: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,299: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,299: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,299: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,299: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,299: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,300: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2829, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2829},isLetterOrDigitAhead()Z{0=2829},hasMoreTokens()Z{0=2829},hasMoreTokens()Z{0=2829},isLetterOrDigitAhead()Z{0=2829}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2829}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,300: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,300: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,300: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,300: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,300: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,300: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,301: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2350, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2350},nextIsSep()Z{0=2350},nextIsSep()Z{0=2350},hasMoreTokens()Z{0=2350}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2350}"];
	2 -> 2 [label="nextIsSep()Z{0=2350},hasMoreTokens()Z{0=2350},isLetterOrDigitAhead()Z{0=2350},hasMoreTokens()Z{0=2350}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,301: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,301: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,301: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,301: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,301: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,301: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,302: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3427, 1=109}"];
	1 -> 1 [label="reset()V{0=3427},@nextToken()Ljava/lang/String;{0=3427}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,302: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,302: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,302: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,302: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,302: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,302: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,303: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4795, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4795},isLetterOrDigitAhead()Z{0=4795},hasMoreTokens()Z{0=4795},nextIsSep()Z{0=4795},reset()V{0=4795}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4795},nextToken()Ljava/lang/String;{0=4795}"];
	2 -> 1 [label="reset()V{0=4795},reset()V{0=4795}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,303: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,303: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,303: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,303: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,303: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,303: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,304: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5343, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5343},countTokens()I{0=5343},isLetterOrDigitAhead()Z{0=5343},countTokens()I{0=5343},hasMoreTokens()Z{0=5343},countTokens()I{0=5343},isLetterOrDigitAhead()Z{0=5343}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5343},nextToken()Ljava/lang/String;{0=5343}"];
	2 -> 2 [label="countTokens()I{0=5343},nextIsSep()Z{0=5343},hasMoreTokens()Z{0=5343}"];
	2 -> 1 [label="reset()V{0=5343}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,304: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,304: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,304: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,304: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,304: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,304: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,305: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2843, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2843},isLetterOrDigitAhead()Z{0=2843},hasMoreTokens()Z{0=2843},countTokens()I{0=2843},isLetterOrDigitAhead()Z{0=2843}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2843}"];
	2 -> 2 [label="countTokens()I{0=2843},nextToken()Ljava/lang/String;{0=2843},@nextToken()Ljava/lang/String;{0=2843}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,305: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,305: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,305: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,305: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,305: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,305: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,306: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4244, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=4244},nextIsSep()Z{0=4244},countTokens()I{0=4244},countTokens()I{0=4244},isLetterOrDigitAhead()Z{0=4244},countTokens()I{0=4244},isLetterOrDigitAhead()Z{0=4244}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4244}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4244},nextIsSep()Z{0=4244},countTokens()I{0=4244}"];
	2 -> 1 [label="reset()V{0=4244}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,306: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,306: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,306: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,306: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,306: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,306: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,307: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5885, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5885},hasMoreTokens()Z{0=5885},nextIsSep()Z{0=5885},reset()V{0=5885}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,307: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,307: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,307: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,307: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,307: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,307: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,307: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3442, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3442},isLetterOrDigitAhead()Z{0=3442},countTokens()I{0=3442},reset()V{0=3442},isLetterOrDigitAhead()Z{0=3442},countTokens()I{0=3442},hasMoreTokens()Z{0=3442}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3442}"];
	2 -> 1 [label="reset()V{0=3442}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,308: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,308: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,308: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,308: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,308: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,308: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,309: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3924, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3924},nextIsSep()Z{0=3924},hasMoreTokens()Z{0=3924},nextIsSep()Z{0=3924},hasMoreTokens()Z{0=3924}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3924}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=3924},hasMoreTokens()Z{0=3924}"];
	2 -> 1 [label="reset()V{0=3924}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,309: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,309: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,309: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,309: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,309: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,309: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,310: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3885, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3885}"];
	2 -> 2 [label="nextIsSep()Z{0=3885}"];
	2 -> 1 [label="reset()V{0=3885}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=3885}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,310: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,310: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,310: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,310: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,310: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,310: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,310: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4810, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=4810},reset()V{0=4810},isLetterOrDigitAhead()Z{0=4810},nextIsSep()Z{0=4810},hasMoreTokens()Z{0=4810},nextIsSep()Z{0=4810},countTokens()I{0=4810},reset()V{0=4810}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,311: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,311: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,311: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,311: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,311: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,311: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,311: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3337, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3337},nextIsSep()Z{0=3337},hasMoreTokens()Z{0=3337},countTokens()I{0=3337}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3337}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3337},isLetterOrDigitAhead()Z{0=3337},isLetterOrDigitAhead()Z{0=3337},nextIsSep()Z{0=3337}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,312: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,312: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,312: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,312: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,312: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,312: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,312: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2370, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2370},nextIsSep()Z{0=2370},reset()V{0=2370},isLetterOrDigitAhead()Z{0=2370}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,313: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,313: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,313: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,313: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,313: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,313: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,313: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1968, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=1968},countTokens()I{0=1968},hasMoreTokens()Z{0=1968},countTokens()I{0=1968},isLetterOrDigitAhead()Z{0=1968}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=1968}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,314: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,314: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,314: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,314: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,314: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,314: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,314: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5285, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5285},hasMoreTokens()Z{0=5285},nextIsSep()Z{0=5285},countTokens()I{0=5285},nextIsSep()Z{0=5285},hasMoreTokens()Z{0=5285},countTokens()I{0=5285},countTokens()I{0=5285}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,315: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,315: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,315: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,315: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,315: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,315: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,315: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4327, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=4327},hasMoreTokens()Z{0=4327},isLetterOrDigitAhead()Z{0=4327},reset()V{0=4327},hasMoreTokens()Z{0=4327},nextIsSep()Z{0=4327},nextIsSep()Z{0=4327}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,315: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,316: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,316: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,316: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,316: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,316: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,316: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2925, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2925},nextIsSep()Z{0=2925},countTokens()I{0=2925},countTokens()I{0=2925},countTokens()I{0=2925},nextIsSep()Z{0=2925},hasMoreTokens()Z{0=2925},countTokens()I{0=2925},countTokens()I{0=2925}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,316: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,316: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,316: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,317: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,317: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,317: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,317: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2377, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=2377},isLetterOrDigitAhead()Z{0=2377},hasMoreTokens()Z{0=2377},countTokens()I{0=2377},nextIsSep()Z{0=2377},nextIsSep()Z{0=2377},nextIsSep()Z{0=2377},hasMoreTokens()Z{0=2377}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2377}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2377}"];
	2 -> 1 [label="reset()V{0=2377}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,317: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,317: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,317: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,318: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,318: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,318: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,318: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5781, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5781},nextIsSep()Z{0=5781},isLetterOrDigitAhead()Z{0=5781},nextIsSep()Z{0=5781},hasMoreTokens()Z{0=5781},nextIsSep()Z{0=5781}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,318: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,318: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,318: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,318: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,319: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,319: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,319: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4825, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4825},countTokens()I{0=4825},nextIsSep()Z{0=4825},hasMoreTokens()Z{0=4825},nextIsSep()Z{0=4825}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4825}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4825},nextIsSep()Z{0=4825}"];
	2 -> 1 [label="reset()V{0=4825}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,319: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,319: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,319: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,319: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,319: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,320: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,320: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1959, 1=109}"];
	1 -> 1 [label="@nextIsSep()Z{0=1959}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,320: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,320: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,320: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,320: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,320: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,320: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,320: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1958, 1=109}"];
	1 -> 1 [label="reset()V{0=1958},@nextIsSep()Z{0=1958}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,321: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,321: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,321: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,321: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,321: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,321: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,321: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4347, 1=1738}"];
	1 -> 1 [label="reset()V{0=4347},reset()V{0=4347},countTokens()I{0=4347},countTokens()I{0=4347},nextIsSep()Z{0=4347},hasMoreTokens()Z{0=4347},hasMoreTokens()Z{0=4347}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,322: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,322: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,322: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,322: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,322: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,322: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,322: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3358, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3358},isLetterOrDigitAhead()Z{0=3358},countTokens()I{0=3358},hasMoreTokens()Z{0=3358},countTokens()I{0=3358},isLetterOrDigitAhead()Z{0=3358}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3358}"];
	2 -> 2 [label="nextIsSep()Z{0=3358}"];
	2 -> 1 [label="reset()V{0=3358}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,323: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,323: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,323: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,323: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,323: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,323: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,323: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5302, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5302},hasMoreTokens()Z{0=5302},nextIsSep()Z{0=5302},nextIsSep()Z{0=5302},hasMoreTokens()Z{0=5302},countTokens()I{0=5302},nextIsSep()Z{0=5302},hasMoreTokens()Z{0=5302}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,324: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,324: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,324: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,324: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,324: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,324: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,324: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2399, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=2399},countTokens()I{0=2399},nextIsSep()Z{0=2399},hasMoreTokens()Z{0=2399},nextIsSep()Z{0=2399},hasMoreTokens()Z{0=2399}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2399}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2399}"];
	2 -> 1 [label="reset()V{0=2399}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,325: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,325: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,325: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,325: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,325: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,325: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,325: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3893, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3893},isLetterOrDigitAhead()Z{0=3893},countTokens()I{0=3893},reset()V{0=3893},nextIsSep()Z{0=3893},hasMoreTokens()Z{0=3893},nextIsSep()Z{0=3893},countTokens()I{0=3893},isLetterOrDigitAhead()Z{0=3893}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3893}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3893}"];
	2 -> 1 [label="reset()V{0=3893}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,326: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,326: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,326: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,326: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,326: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,326: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,326: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4340, 1=2437}"];
	1 -> 1 [label="reset()V{0=4340},nextIsSep()Z{0=4340}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4340}"];
	2 -> 2 [label="countTokens()I{0=4340}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,327: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,327: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,327: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,327: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,327: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,327: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,327: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5248, 1=1738}"];
	1 -> 1 [label="reset()V{0=5248},countTokens()I{0=5248},nextIsSep()Z{0=5248},hasMoreTokens()Z{0=5248}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5248}"];
	2 -> 1 [label="reset()V{0=5248}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,328: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,328: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,328: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,328: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,328: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,328: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,328: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1943, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=1943},isLetterOrDigitAhead()Z{0=1943},countTokens()I{0=1943},isLetterOrDigitAhead()Z{0=1943},isLetterOrDigitAhead()Z{0=1943}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,329: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,329: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,329: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,329: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,329: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,329: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,329: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4843, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4843},nextIsSep()Z{0=4843},nextIsSep()Z{0=4843},hasMoreTokens()Z{0=4843}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4843}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4843},hasMoreTokens()Z{0=4843},isLetterOrDigitAhead()Z{0=4843}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,329: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,330: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,330: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,330: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,330: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,330: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,330: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4303, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4303},nextIsSep()Z{0=4303},nextIsSep()Z{0=4303},hasMoreTokens()Z{0=4303}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4303}"];
	2 -> 2 [label="countTokens()I{0=4303},hasMoreTokens()Z{0=4303},nextToken()Ljava/lang/String;{0=4303},hasMoreTokens()Z{0=4303}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,330: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,330: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,331: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,331: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,331: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,331: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,331: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2884, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=2884},countTokens()I{0=2884},nextIsSep()Z{0=2884},hasMoreTokens()Z{0=2884},nextIsSep()Z{0=2884}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2884}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2884},countTokens()I{0=2884}"];
	2 -> 1 [label="reset()V{0=2884}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,331: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,331: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,332: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,332: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,332: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,332: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,332: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3848, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3848},countTokens()I{0=3848},nextIsSep()Z{0=3848},hasMoreTokens()Z{0=3848},nextIsSep()Z{0=3848}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,332: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,332: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,333: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,333: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,333: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,333: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,333: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5258, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5258},nextIsSep()Z{0=5258},reset()V{0=5258},hasMoreTokens()Z{0=5258}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5258}"];
	2 -> 1 [label="reset()V{0=5258}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,333: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,333: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,333: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,334: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,334: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,334: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,334: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3389, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3389},countTokens()I{0=3389},nextIsSep()Z{0=3389},nextIsSep()Z{0=3389},hasMoreTokens()Z{0=3389},countTokens()I{0=3389},reset()V{0=3389},hasMoreTokens()Z{0=3389}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,334: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,334: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,334: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,334: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,334: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,335: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,335: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2417, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2417},nextIsSep()Z{0=2417},hasMoreTokens()Z{0=2417},countTokens()I{0=2417}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2417}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=2417},hasMoreTokens()Z{0=2417},@nextToken()Ljava/lang/String;{0=2417}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,335: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,335: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,335: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,335: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,335: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,335: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,336: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2902, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2902},nextIsSep()Z{0=2902},hasMoreTokens()Z{0=2902},countTokens()I{0=2902},isLetterOrDigitAhead()Z{0=2902}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2902}"];
	2 -> 2 [label="nextIsSep()Z{0=2902},nextToken()Ljava/lang/String;{0=2902},countTokens()I{0=2902},isLetterOrDigitAhead()Z{0=2902}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,336: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,336: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,336: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,336: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,336: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,336: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,337: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5268, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5268},nextIsSep()Z{0=5268},isLetterOrDigitAhead()Z{0=5268},nextIsSep()Z{0=5268},hasMoreTokens()Z{0=5268},nextIsSep()Z{0=5268},countTokens()I{0=5268},countTokens()I{0=5268},reset()V{0=5268}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,337: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,337: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,337: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,337: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,337: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,337: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,338: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4861, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4861},hasMoreTokens()Z{0=4861},nextIsSep()Z{0=4861},countTokens()I{0=4861},reset()V{0=4861}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4861}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4861}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,338: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,338: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,338: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,338: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,338: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,338: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,338: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5808, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5808},countTokens()I{0=5808},countTokens()I{0=5808},isLetterOrDigitAhead()Z{0=5808},hasMoreTokens()Z{0=5808},reset()V{0=5808},countTokens()I{0=5808},isLetterOrDigitAhead()Z{0=5808}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5808}"];
	2 -> 1 [label="reset()V{0=5808}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,339: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,339: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,339: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,339: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,339: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,339: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,339: Investigating model digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3859, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3859},isLetterOrDigitAhead()Z{0=3859},countTokens()I{0=3859},countTokens()I{0=3859},isLetterOrDigitAhead()Z{0=3859}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3859}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3859},nextIsSep()Z{0=3859},hasMoreTokens()Z{0=3859},nextToken()Ljava/lang/String;{0=3859},@nextToken()Ljava/lang/String;{0=3859},countTokens()I{0=3859}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[DEBUG] 2019-09-24 15:53:15,340: All states exercised for method tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1
[DEBUG] 2019-09-24 15:53:15,340: All states exercised for method tutorial/NumberFormatStringTokenizer.reset()V#1
[DEBUG] 2019-09-24 15:53:15,340: All states exercised for method tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1
[DEBUG] 2019-09-24 15:53:15,340: All states exercised for method tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1
[DEBUG] 2019-09-24 15:53:15,340: All states exercised for method tutorial/NumberFormatStringTokenizer.countTokens()I#1
[DEBUG] 2019-09-24 15:53:15,340: All states exercised for method tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1
[INFO ] 2019-09-24 15:53:15,342: Checking 0 modifications.
[INFO ] 2019-09-24 15:53:15,349: Unmerged models for type tutorial/NumberFormatStringTokenizer
[INFO ] 2019-09-24 15:53:15,358: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2582, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=2582},countTokens()I{0=2582},nextIsSep()Z{0=2582},nextIsSep()Z{0=2582},hasMoreTokens()Z{0=2582}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2582}"];
	2 -> 2 [label="countTokens()I{0=2582},isLetterOrDigitAhead()Z{0=2582},nextToken()Ljava/lang/String;{0=2582}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,358: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5375, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5375},reset()V{0=5375},isLetterOrDigitAhead()Z{0=5375},nextIsSep()Z{0=5375}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5375},nextToken()Ljava/lang/String;{0=5375}"];
	2 -> 1 [label="reset()V{0=5375}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,358: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3915, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3915},countTokens()I{0=3915},hasMoreTokens()Z{0=3915},hasMoreTokens()Z{0=3915}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,358: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2659, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2659},nextIsSep()Z{0=2659},nextIsSep()Z{0=2659}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,358: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4861, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4861},hasMoreTokens()Z{0=4861},nextIsSep()Z{0=4861},countTokens()I{0=4861},reset()V{0=4861}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4861}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4861}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,358: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4594, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4594},countTokens()I{0=4594},hasMoreTokens()Z{0=4594},nextIsSep()Z{0=4594},nextIsSep()Z{0=4594},countTokens()I{0=4594},countTokens()I{0=4594},isLetterOrDigitAhead()Z{0=4594}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4594}"];
	2 -> 2 [label="@nextIsSep()Z{0=4594},nextToken()Ljava/lang/String;{0=4594}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,358: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1959, 1=109}"];
	1 -> 1 [label="@nextIsSep()Z{0=1959}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,359: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3303, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3303},nextIsSep()Z{0=3303},hasMoreTokens()Z{0=3303},countTokens()I{0=3303},isLetterOrDigitAhead()Z{0=3303}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3303}"];
	2 -> 2 [label="nextIsSep()Z{0=3303},countTokens()I{0=3303},isLetterOrDigitAhead()Z{0=3303}"];
	2 -> 1 [label="reset()V{0=3303}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,359: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2695, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2695},isLetterOrDigitAhead()Z{0=2695},nextIsSep()Z{0=2695}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,359: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5412, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5412},hasMoreTokens()Z{0=5412},nextIsSep()Z{0=5412},countTokens()I{0=5412},isLetterOrDigitAhead()Z{0=5412}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5412}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5412},isLetterOrDigitAhead()Z{0=5412},isLetterOrDigitAhead()Z{0=5412}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,359: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3129, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3129},isLetterOrDigitAhead()Z{0=3129},hasMoreTokens()Z{0=3129},countTokens()I{0=3129},isLetterOrDigitAhead()Z{0=3129}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3129}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3129},hasMoreTokens()Z{0=3129},nextIsSep()Z{0=3129}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,359: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3002, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3002},nextIsSep()Z{0=3002},hasMoreTokens()Z{0=3002},countTokens()I{0=3002}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3002}"];
	2 -> 2 [label="@nextIsSep()Z{0=3002},nextToken()Ljava/lang/String;{0=3002},hasMoreTokens()Z{0=3002}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,359: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5319, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5319},nextIsSep()Z{0=5319},hasMoreTokens()Z{0=5319},countTokens()I{0=5319},isLetterOrDigitAhead()Z{0=5319}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5319}"];
	2 -> 2 [label="nextIsSep()Z{0=5319},countTokens()I{0=5319},countTokens()I{0=5319},hasMoreTokens()Z{0=5319},isLetterOrDigitAhead()Z{0=5319}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,359: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3075, 1=109}"];
	1 -> 1 [label="countTokens()I{0=3075}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,360: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4199, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=4199},countTokens()I{0=4199},isLetterOrDigitAhead()Z{0=4199},countTokens()I{0=4199},isLetterOrDigitAhead()Z{0=4199}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4199}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4199},hasMoreTokens()Z{0=4199},nextIsSep()Z{0=4199},nextToken()Ljava/lang/String;{0=4199},isLetterOrDigitAhead()Z{0=4199},countTokens()I{0=4199}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,360: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5258, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5258},nextIsSep()Z{0=5258},reset()V{0=5258},hasMoreTokens()Z{0=5258}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5258}"];
	2 -> 1 [label="reset()V{0=5258}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,360: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4073, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4073},hasMoreTokens()Z{0=4073},nextIsSep()Z{0=4073},countTokens()I{0=4073}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4073}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4073}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,360: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4879, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4879}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4879},nextIsSep()Z{0=4879},countTokens()I{0=4879}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,360: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5960, 1=1738}"];
	1 -> 1 [label="reset()V{0=5960},isLetterOrDigitAhead()Z{0=5960},hasMoreTokens()Z{0=5960},nextIsSep()Z{0=5960},nextIsSep()Z{0=5960},hasMoreTokens()Z{0=5960}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,360: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4114, 1=1738}"];
	1 -> 1 [label="reset()V{0=4114},hasMoreTokens()Z{0=4114}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4114}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4114}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,360: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2317, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2317},reset()V{0=2317},hasMoreTokens()Z{0=2317}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2317}"];
	2 -> 2 [label="countTokens()I{0=2317},hasMoreTokens()Z{0=2317},hasMoreTokens()Z{0=2317}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,361: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2542, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2542},isLetterOrDigitAhead()Z{0=2542},hasMoreTokens()Z{0=2542},isLetterOrDigitAhead()Z{0=2542},countTokens()I{0=2542}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2542}"];
	2 -> 2 [label="countTokens()I{0=2542},countTokens()I{0=2542}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,361: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5693, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5693},nextIsSep()Z{0=5693},hasMoreTokens()Z{0=5693},nextIsSep()Z{0=5693}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5693}"];
	2 -> 2 [label="countTokens()I{0=5693},nextToken()Ljava/lang/String;{0=5693},hasMoreTokens()Z{0=5693},@nextIsSep()Z{0=5693}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,361: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2297, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2297},isLetterOrDigitAhead()Z{0=2297},hasMoreTokens()Z{0=2297},countTokens()I{0=2297},isLetterOrDigitAhead()Z{0=2297}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2297}"];
	2 -> 2 [label="nextIsSep()Z{0=2297},isLetterOrDigitAhead()Z{0=2297},nextIsSep()Z{0=2297}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,361: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2186, 1=109}"];
	1 -> 1 [label="reset()V{0=2186},isLetterOrDigitAhead()Z{0=2186}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,361: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3859, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3859},isLetterOrDigitAhead()Z{0=3859},countTokens()I{0=3859},countTokens()I{0=3859},isLetterOrDigitAhead()Z{0=3859}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3859}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3859},nextIsSep()Z{0=3859},hasMoreTokens()Z{0=3859},nextToken()Ljava/lang/String;{0=3859},@nextToken()Ljava/lang/String;{0=3859},countTokens()I{0=3859}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,361: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3964, 1=1738}"];
	1 -> 1 [label="reset()V{0=3964},isLetterOrDigitAhead()Z{0=3964},countTokens()I{0=3964},nextIsSep()Z{0=3964},nextIsSep()Z{0=3964},hasMoreTokens()Z{0=3964},countTokens()I{0=3964}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3964}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,361: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2843, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2843},isLetterOrDigitAhead()Z{0=2843},hasMoreTokens()Z{0=2843},countTokens()I{0=2843},isLetterOrDigitAhead()Z{0=2843}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2843}"];
	2 -> 2 [label="countTokens()I{0=2843},nextToken()Ljava/lang/String;{0=2843},@nextToken()Ljava/lang/String;{0=2843}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,362: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5892, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5892},hasMoreTokens()Z{0=5892},nextIsSep()Z{0=5892},countTokens()I{0=5892}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5892}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5892},nextIsSep()Z{0=5892},isLetterOrDigitAhead()Z{0=5892},isLetterOrDigitAhead()Z{0=5892},nextIsSep()Z{0=5892},hasMoreTokens()Z{0=5892},isLetterOrDigitAhead()Z{0=5892}"];
	2 -> 1 [label="reset()V{0=5892}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,362: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3149, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=3149},countTokens()I{0=3149},nextIsSep()Z{0=3149},hasMoreTokens()Z{0=3149},nextIsSep()Z{0=3149},reset()V{0=3149}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3149}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3149}"];
	2 -> 1 [label="reset()V{0=3149}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,362: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3679, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3679},isLetterOrDigitAhead()Z{0=3679},countTokens()I{0=3679},isLetterOrDigitAhead()Z{0=3679},hasMoreTokens()Z{0=3679}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3679}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3679}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,362: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3809, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3809},countTokens()I{0=3809},countTokens()I{0=3809},countTokens()I{0=3809},reset()V{0=3809},nextIsSep()Z{0=3809},nextIsSep()Z{0=3809},nextIsSep()Z{0=3809},hasMoreTokens()Z{0=3809}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,362: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5826, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5826},isLetterOrDigitAhead()Z{0=5826},hasMoreTokens()Z{0=5826},reset()V{0=5826},countTokens()I{0=5826},isLetterOrDigitAhead()Z{0=5826}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5826}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5826},nextIsSep()Z{0=5826}"];
	2 -> 1 [label="reset()V{0=5826}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,362: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4522, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=4522},hasMoreTokens()Z{0=4522},reset()V{0=4522},isLetterOrDigitAhead()Z{0=4522},nextIsSep()Z{0=4522},nextIsSep()Z{0=4522},hasMoreTokens()Z{0=4522},countTokens()I{0=4522},isLetterOrDigitAhead()Z{0=4522}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4522}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4522}"];
	2 -> 1 [label="reset()V{0=4522}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,362: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3830, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3830},countTokens()I{0=3830},reset()V{0=3830},nextIsSep()Z{0=3830},hasMoreTokens()Z{0=3830},nextIsSep()Z{0=3830},nextIsSep()Z{0=3830}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3830}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3830}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,363: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5232, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5232},hasMoreTokens()Z{0=5232},hasMoreTokens()Z{0=5232},isLetterOrDigitAhead()Z{0=5232},isLetterOrDigitAhead()Z{0=5232},reset()V{0=5232}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5232}"];
	2 -> 2 [label="countTokens()I{0=5232}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,363: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5468, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5468},countTokens()I{0=5468},nextIsSep()Z{0=5468},nextIsSep()Z{0=5468},hasMoreTokens()Z{0=5468}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5468}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5468},countTokens()I{0=5468},isLetterOrDigitAhead()Z{0=5468}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,363: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2439, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2439},countTokens()I{0=2439},isLetterOrDigitAhead()Z{0=2439},countTokens()I{0=2439},isLetterOrDigitAhead()Z{0=2439}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2439}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=2439},hasMoreTokens()Z{0=2439},nextIsSep()Z{0=2439},countTokens()I{0=2439}"];
	2 -> 1 [label="reset()V{0=2439}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,363: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2256, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2256},nextIsSep()Z{0=2256},nextIsSep()Z{0=2256},hasMoreTokens()Z{0=2256},countTokens()I{0=2256},countTokens()I{0=2256}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2256}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,363: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2097, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2097},isLetterOrDigitAhead()Z{0=2097},hasMoreTokens()Z{0=2097},countTokens()I{0=2097},isLetterOrDigitAhead()Z{0=2097}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2097}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2097},nextIsSep()Z{0=2097},nextToken()Ljava/lang/String;{0=2097},hasMoreTokens()Z{0=2097}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,363: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4707, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4707},nextIsSep()Z{0=4707},hasMoreTokens()Z{0=4707},nextIsSep()Z{0=4707}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4707}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4707},hasMoreTokens()Z{0=4707},isLetterOrDigitAhead()Z{0=4707},hasMoreTokens()Z{0=4707}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,363: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4825, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4825},countTokens()I{0=4825},nextIsSep()Z{0=4825},hasMoreTokens()Z{0=4825},nextIsSep()Z{0=4825}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4825}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4825},nextIsSep()Z{0=4825}"];
	2 -> 1 [label="reset()V{0=4825}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,364: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5120, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5120},nextIsSep()Z{0=5120},hasMoreTokens()Z{0=5120},nextIsSep()Z{0=5120}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5120}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=5120}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,364: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3696, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3696},reset()V{0=3696}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3696}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3696}"];
	2 -> 1 [label="reset()V{0=3696}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,364: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2805, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2805},isLetterOrDigitAhead()Z{0=2805},countTokens()I{0=2805},isLetterOrDigitAhead()Z{0=2805},countTokens()I{0=2805},countTokens()I{0=2805},hasMoreTokens()Z{0=2805}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2805}"];
	2 -> 2 [label="countTokens()I{0=2805},nextIsSep()Z{0=2805},hasMoreTokens()Z{0=2805}"];
	2 -> 1 [label="reset()V{0=2805}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,364: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3558, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3558},nextIsSep()Z{0=3558},hasMoreTokens()Z{0=3558},nextIsSep()Z{0=3558},isLetterOrDigitAhead()Z{0=3558}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3558}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=3558}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,364: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3599, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3599},isLetterOrDigitAhead()Z{0=3599},countTokens()I{0=3599},isLetterOrDigitAhead()Z{0=3599},reset()V{0=3599},countTokens()I{0=3599},isLetterOrDigitAhead()Z{0=3599}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3599}"];
	2 -> 1 [label="reset()V{0=3599}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,364: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5531, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5531},nextIsSep()Z{0=5531},nextIsSep()Z{0=5531},hasMoreTokens()Z{0=5531},countTokens()I{0=5531},reset()V{0=5531},countTokens()I{0=5531},countTokens()I{0=5531}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5531}"];
	2 -> 2 [label="countTokens()I{0=5531},isLetterOrDigitAhead()Z{0=5531},countTokens()I{0=5531}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,364: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4056, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4056}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4056},nextIsSep()Z{0=4056}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,365: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3885, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3885}"];
	2 -> 2 [label="nextIsSep()Z{0=3885}"];
	2 -> 1 [label="reset()V{0=3885}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=3885}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,365: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5014, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5014},isLetterOrDigitAhead()Z{0=5014},countTokens()I{0=5014},isLetterOrDigitAhead()Z{0=5014},hasMoreTokens()Z{0=5014}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5014}"];
	2 -> 2 [label="countTokens()I{0=5014},hasMoreTokens()Z{0=5014},nextToken()Ljava/lang/String;{0=5014}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,365: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3176, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3176},isLetterOrDigitAhead()Z{0=3176},hasMoreTokens()Z{0=3176},countTokens()I{0=3176},isLetterOrDigitAhead()Z{0=3176}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3176}"];
	2 -> 2 [label="nextIsSep()Z{0=3176},nextIsSep()Z{0=3176}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,365: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5555, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5555},hasMoreTokens()Z{0=5555},countTokens()I{0=5555},hasMoreTokens()Z{0=5555},nextIsSep()Z{0=5555},countTokens()I{0=5555},countTokens()I{0=5555}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5555}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5555}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,365: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3427, 1=109}"];
	1 -> 1 [label="reset()V{0=3427},@nextToken()Ljava/lang/String;{0=3427}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,365: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5626, 1=1738}"];
	1 -> 1 [label="reset()V{0=5626},hasMoreTokens()Z{0=5626}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5626}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=5626},isLetterOrDigitAhead()Z{0=5626}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,365: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5933, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5933},countTokens()I{0=5933},hasMoreTokens()Z{0=5933},nextIsSep()Z{0=5933},countTokens()I{0=5933}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5933}"];
	2 -> 2 [label="nextIsSep()Z{0=5933},nextIsSep()Z{0=5933}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,366: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3746, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3746},isLetterOrDigitAhead()Z{0=3746},countTokens()I{0=3746},countTokens()I{0=3746},isLetterOrDigitAhead()Z{0=3746}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3746}"];
	2 -> 2 [label="nextIsSep()Z{0=3746},hasMoreTokens()Z{0=3746},nextToken()Ljava/lang/String;{0=3746},countTokens()I{0=3746},countTokens()I{0=3746}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,366: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5343, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5343},countTokens()I{0=5343},isLetterOrDigitAhead()Z{0=5343},countTokens()I{0=5343},hasMoreTokens()Z{0=5343},countTokens()I{0=5343},isLetterOrDigitAhead()Z{0=5343}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5343},nextToken()Ljava/lang/String;{0=5343}"];
	2 -> 2 [label="countTokens()I{0=5343},nextIsSep()Z{0=5343},hasMoreTokens()Z{0=5343}"];
	2 -> 1 [label="reset()V{0=5343}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,366: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4376, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4376},nextIsSep()Z{0=4376},nextIsSep()Z{0=4376},hasMoreTokens()Z{0=4376}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4376}"];
	2 -> 2 [label="countTokens()I{0=4376},nextIsSep()Z{0=4376},hasMoreTokens()Z{0=4376},hasMoreTokens()Z{0=4376}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,366: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5651, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5651},hasMoreTokens()Z{0=5651},nextIsSep()Z{0=5651},countTokens()I{0=5651}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5651}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5651},nextIsSep()Z{0=5651},isLetterOrDigitAhead()Z{0=5651}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,366: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4123, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4123},nextIsSep()Z{0=4123},hasMoreTokens()Z{0=4123},countTokens()I{0=4123}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4123}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4123},hasMoreTokens()Z{0=4123},isLetterOrDigitAhead()Z{0=4123}"];
	2 -> 1 [label="reset()V{0=4123}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,366: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5844, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5844},countTokens()I{0=5844},isLetterOrDigitAhead()Z{0=5844},nextIsSep()Z{0=5844},countTokens()I{0=5844},isLetterOrDigitAhead()Z{0=5844}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5844}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5844},nextIsSep()Z{0=5844},countTokens()I{0=5844}"];
	2 -> 1 [label="reset()V{0=5844}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,366: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5669, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5669},hasMoreTokens()Z{0=5669},countTokens()I{0=5669}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5669},nextToken()Ljava/lang/String;{0=5669}"];
	2 -> 1 [label="reset()V{0=5669}"];
	2 -> 2 [label="countTokens()I{0=5669}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,367: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2964, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2964},hasMoreTokens()Z{0=2964},nextIsSep()Z{0=2964},countTokens()I{0=2964},isLetterOrDigitAhead()Z{0=2964}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2964}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2964},nextIsSep()Z{0=2964},isLetterOrDigitAhead()Z{0=2964},countTokens()I{0=2964}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,367: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3404, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3404},nextIsSep()Z{0=3404},hasMoreTokens()Z{0=3404},countTokens()I{0=3404}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3404}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3404},countTokens()I{0=3404},nextToken()Ljava/lang/String;{0=3404},hasMoreTokens()Z{0=3404},countTokens()I{0=3404}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,367: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4448, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4448},isLetterOrDigitAhead()Z{0=4448},hasMoreTokens()Z{0=4448},countTokens()I{0=4448},isLetterOrDigitAhead()Z{0=4448},nextIsSep()Z{0=4448},nextIsSep()Z{0=4448},nextIsSep()Z{0=4448},hasMoreTokens()Z{0=4448}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4448}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4448}"];
	2 -> 1 [label="reset()V{0=4448}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,367: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5432, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5432},isLetterOrDigitAhead()Z{0=5432},countTokens()I{0=5432},countTokens()I{0=5432},isLetterOrDigitAhead()Z{0=5432}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5432}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5432},nextIsSep()Z{0=5432},hasMoreTokens()Z{0=5432}"];
	2 -> 1 [label="reset()V{0=5432}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,367: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5885, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5885},hasMoreTokens()Z{0=5885},nextIsSep()Z{0=5885},reset()V{0=5885}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,367: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2682, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2682},hasMoreTokens()Z{0=2682},nextIsSep()Z{0=2682}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2682}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=2682}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,367: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2637, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2637},countTokens()I{0=2637},isLetterOrDigitAhead()Z{0=2637},hasMoreTokens()Z{0=2637},isLetterOrDigitAhead()Z{0=2637},countTokens()I{0=2637}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2637}"];
	2 -> 2 [label="countTokens()I{0=2637},countTokens()I{0=2637}"];
	2 -> 1 [label="reset()V{0=2637}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,368: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4544, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4544},isLetterOrDigitAhead()Z{0=4544},reset()V{0=4544},hasMoreTokens()Z{0=4544},countTokens()I{0=4544},isLetterOrDigitAhead()Z{0=4544},isLetterOrDigitAhead()Z{0=4544}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4544}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,368: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2829, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2829},isLetterOrDigitAhead()Z{0=2829},hasMoreTokens()Z{0=2829},hasMoreTokens()Z{0=2829},isLetterOrDigitAhead()Z{0=2829}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2829}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,368: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4930, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4930},nextIsSep()Z{0=4930},nextIsSep()Z{0=4930},hasMoreTokens()Z{0=4930}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4930}"];
	2 -> 2 [label="@nextIsSep()Z{0=4930},nextToken()Ljava/lang/String;{0=4930}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,368: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5177, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5177},hasMoreTokens()Z{0=5177},reset()V{0=5177}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5177}"];
	2 -> 2 [label="nextIsSep()Z{0=5177},isLetterOrDigitAhead()Z{0=5177},countTokens()I{0=5177},hasMoreTokens()Z{0=5177}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,368: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4512, 1=2437}"];
	1 -> 1 [label="reset()V{0=4512},reset()V{0=4512},countTokens()I{0=4512},nextIsSep()Z{0=4512}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,368: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2784, 1=109}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2784},isLetterOrDigitAhead()Z{0=2784}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,368: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3536, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3536},reset()V{0=3536},hasMoreTokens()Z{0=3536},nextIsSep()Z{0=3536},countTokens()I{0=3536}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3536}"];
	2 -> 1 [label="reset()V{0=3536}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,368: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4340, 1=2437}"];
	1 -> 1 [label="reset()V{0=4340},nextIsSep()Z{0=4340}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4340}"];
	2 -> 2 [label="countTokens()I{0=4340}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,369: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4757, 1=1738}"];
	1 -> 1 [label="reset()V{0=4757},hasMoreTokens()Z{0=4757},nextIsSep()Z{0=4757}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4757}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4757},nextToken()Ljava/lang/String;{0=4757},isLetterOrDigitAhead()Z{0=4757}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,369: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4488, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4488},isLetterOrDigitAhead()Z{0=4488},countTokens()I{0=4488},reset()V{0=4488},reset()V{0=4488},hasMoreTokens()Z{0=4488}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,369: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5085, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5085},hasMoreTokens()Z{0=5085},nextIsSep()Z{0=5085},hasMoreTokens()Z{0=5085},nextIsSep()Z{0=5085},countTokens()I{0=5085}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5085}"];
	2 -> 1 [label="reset()V{0=5085}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,369: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4889, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4889},hasMoreTokens()Z{0=4889},nextIsSep()Z{0=4889},countTokens()I{0=4889},isLetterOrDigitAhead()Z{0=4889},reset()V{0=4889}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4889}"];
	2 -> 1 [label="reset()V{0=4889}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,369: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5488, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5488},nextIsSep()Z{0=5488},hasMoreTokens()Z{0=5488},isLetterOrDigitAhead()Z{0=5488},isLetterOrDigitAhead()Z{0=5488}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5488}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5488}"];
	2 -> 1 [label="reset()V{0=5488}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,369: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2884, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=2884},countTokens()I{0=2884},nextIsSep()Z{0=2884},hasMoreTokens()Z{0=2884},nextIsSep()Z{0=2884}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2884}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2884},countTokens()I{0=2884}"];
	2 -> 1 [label="reset()V{0=2884}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,369: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3782, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=3782},hasMoreTokens()Z{0=3782},nextIsSep()Z{0=3782},countTokens()I{0=3782},isLetterOrDigitAhead()Z{0=3782},nextIsSep()Z{0=3782}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,370: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5637, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5637},hasMoreTokens()Z{0=5637},isLetterOrDigitAhead()Z{0=5637},nextIsSep()Z{0=5637},isLetterOrDigitAhead()Z{0=5637}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5637}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,370: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3511, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3511},nextIsSep()Z{0=3511},hasMoreTokens()Z{0=3511},nextIsSep()Z{0=3511},isLetterOrDigitAhead()Z{0=3511}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3511}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3511},@nextIsSep()Z{0=3511},nextIsSep()Z{0=3511},isLetterOrDigitAhead()Z{0=3511},nextToken()Ljava/lang/String;{0=3511},nextIsSep()Z{0=3511}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,370: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4064, 1=2437}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4064}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,370: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2612, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2612},reset()V{0=2612}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2612}"];
	2 -> 2 [label="countTokens()I{0=2612},countTokens()I{0=2612}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,370: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4358, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4358},nextIsSep()Z{0=4358},hasMoreTokens()Z{0=4358},countTokens()I{0=4358},countTokens()I{0=4358},isLetterOrDigitAhead()Z{0=4358}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4358}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4358}"];
	2 -> 1 [label="reset()V{0=4358}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,370: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3095, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3095},countTokens()I{0=3095},isLetterOrDigitAhead()Z{0=3095},countTokens()I{0=3095},isLetterOrDigitAhead()Z{0=3095},isLetterOrDigitAhead()Z{0=3095},countTokens()I{0=3095}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3095}"];
	2 -> 1 [label="reset()V{0=3095}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,370: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3980, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3980},nextIsSep()Z{0=3980},nextIsSep()Z{0=3980},countTokens()I{0=3980},countTokens()I{0=3980},isLetterOrDigitAhead()Z{0=3980},hasMoreTokens()Z{0=3980},nextIsSep()Z{0=3980},nextIsSep()Z{0=3980}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3980}"];
	2 -> 2 [label="countTokens()I{0=3980}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,371: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3165, 1=1738}"];
	1 -> 1 [label="reset()V{0=3165},hasMoreTokens()Z{0=3165},nextIsSep()Z{0=3165}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3165}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=3165}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,371: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2767, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2767},hasMoreTokens()Z{0=2767},nextIsSep()Z{0=2767},hasMoreTokens()Z{0=2767},countTokens()I{0=2767}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2767},nextToken()Ljava/lang/String;{0=2767}"];
	2 -> 1 [label="reset()V{0=2767}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,371: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3726, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3726},isLetterOrDigitAhead()Z{0=3726},countTokens()I{0=3726},countTokens()I{0=3726},isLetterOrDigitAhead()Z{0=3726}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3726}"];
	2 -> 2 [label="countTokens()I{0=3726},nextIsSep()Z{0=3726},hasMoreTokens()Z{0=3726}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,371: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3575, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3575},nextIsSep()Z{0=3575},reset()V{0=3575}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3575}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,371: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3224, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3224},countTokens()I{0=3224},reset()V{0=3224},hasMoreTokens()Z{0=3224},nextIsSep()Z{0=3224},countTokens()I{0=3224},countTokens()I{0=3224},isLetterOrDigitAhead()Z{0=3224},nextIsSep()Z{0=3224},hasMoreTokens()Z{0=3224}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,371: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4843, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4843},nextIsSep()Z{0=4843},nextIsSep()Z{0=4843},hasMoreTokens()Z{0=4843}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4843}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4843},hasMoreTokens()Z{0=4843},isLetterOrDigitAhead()Z{0=4843}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,371: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2277, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2277},isLetterOrDigitAhead()Z{0=2277},countTokens()I{0=2277},isLetterOrDigitAhead()Z{0=2277},hasMoreTokens()Z{0=2277}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2277}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2277},nextIsSep()Z{0=2277},hasMoreTokens()Z{0=2277}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,371: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2702, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2702},nextIsSep()Z{0=2702},nextIsSep()Z{0=2702},hasMoreTokens()Z{0=2702},isLetterOrDigitAhead()Z{0=2702}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2702}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2702}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,372: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2944, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2944},nextIsSep()Z{0=2944},nextIsSep()Z{0=2944},hasMoreTokens()Z{0=2944}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2944}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=2944},hasMoreTokens()Z{0=2944}"];
	2 -> 1 [label="reset()V{0=2944}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,372: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4004, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4004},nextToken()Ljava/lang/String;{0=4004}"];
	2 -> 2 [label="nextIsSep()Z{0=4004}"];
	2 -> 1 [label="reset()V{0=4004}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,372: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3358, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3358},isLetterOrDigitAhead()Z{0=3358},countTokens()I{0=3358},hasMoreTokens()Z{0=3358},countTokens()I{0=3358},isLetterOrDigitAhead()Z{0=3358}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3358}"];
	2 -> 2 [label="nextIsSep()Z{0=3358}"];
	2 -> 1 [label="reset()V{0=3358}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,372: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4013, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4013},nextIsSep()Z{0=4013},nextIsSep()Z{0=4013},hasMoreTokens()Z{0=4013},countTokens()I{0=4013}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4013}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4013}"];
	2 -> 1 [label="reset()V{0=4013}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,372: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3710, 1=1738}"];
	1 -> 1 [label="reset()V{0=3710},hasMoreTokens()Z{0=3710},nextIsSep()Z{0=3710}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3710}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3710},isLetterOrDigitAhead()Z{0=3710},countTokens()I{0=3710}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,372: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5591, 1=109}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5591},reset()V{0=5591},hasMoreTokens()Z{0=5591}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,372: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2986, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2986},nextIsSep()Z{0=2986},nextIsSep()Z{0=2986},hasMoreTokens()Z{0=2986},reset()V{0=2986}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2986}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2986},nextIsSep()Z{0=2986}"];
	2 -> 1 [label="reset()V{0=2986}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,373: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4617, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4617},countTokens()I{0=4617},nextIsSep()Z{0=4617},nextIsSep()Z{0=4617},hasMoreTokens()Z{0=4617}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4617}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4617},isLetterOrDigitAhead()Z{0=4617},nextToken()Ljava/lang/String;{0=4617},nextIsSep()Z{0=4617}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,373: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4904, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4904},hasMoreTokens()Z{0=4904},nextIsSep()Z{0=4904},countTokens()I{0=4904},isLetterOrDigitAhead()Z{0=4904}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4904}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4904},nextToken()Ljava/lang/String;{0=4904},isLetterOrDigitAhead()Z{0=4904},nextIsSep()Z{0=4904},isLetterOrDigitAhead()Z{0=4904}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,373: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5393, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5393},hasMoreTokens()Z{0=5393},nextIsSep()Z{0=5393},countTokens()I{0=5393},hasMoreTokens()Z{0=5393},isLetterOrDigitAhead()Z{0=5393},reset()V{0=5393}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5393}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=5393}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,373: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2164, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2164},hasMoreTokens()Z{0=2164},nextIsSep()Z{0=2164},nextIsSep()Z{0=2164},countTokens()I{0=2164},reset()V{0=2164}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2164}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2164}"];
	2 -> 1 [label="reset()V{0=2164}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,373: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3616, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3616},countTokens()I{0=3616},nextIsSep()Z{0=3616},nextIsSep()Z{0=3616},hasMoreTokens()Z{0=3616},nextIsSep()Z{0=3616}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3616}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3616}"];
	2 -> 1 [label="reset()V{0=3616}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,373: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2902, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2902},nextIsSep()Z{0=2902},hasMoreTokens()Z{0=2902},countTokens()I{0=2902},isLetterOrDigitAhead()Z{0=2902}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2902}"];
	2 -> 2 [label="nextIsSep()Z{0=2902},nextToken()Ljava/lang/String;{0=2902},countTokens()I{0=2902},isLetterOrDigitAhead()Z{0=2902}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,373: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3771, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3771}"];
	2 -> 2 [label="countTokens()I{0=3771},nextToken()Ljava/lang/String;{0=3771},nextIsSep()Z{0=3771}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,374: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3583, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3583},nextIsSep()Z{0=3583},hasMoreTokens()Z{0=3583},countTokens()I{0=3583}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3583}"];
	2 -> 2 [label="countTokens()I{0=3583},hasMoreTokens()Z{0=3583}"];
	2 -> 1 [label="reset()V{0=3583}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,374: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1958, 1=109}"];
	1 -> 1 [label="reset()V{0=1958},@nextIsSep()Z{0=1958}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,374: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1848, 1=109}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=1848},@nextIsSep()Z{0=1848}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,374: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2417, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2417},nextIsSep()Z{0=2417},hasMoreTokens()Z{0=2417},countTokens()I{0=2417}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2417}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=2417},hasMoreTokens()Z{0=2417},@nextToken()Ljava/lang/String;{0=2417}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,374: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2731, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2731},isLetterOrDigitAhead()Z{0=2731},countTokens()I{0=2731},isLetterOrDigitAhead()Z{0=2731},hasMoreTokens()Z{0=2731}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2731}"];
	2 -> 2 [label="countTokens()I{0=2731},countTokens()I{0=2731},countTokens()I{0=2731},hasMoreTokens()Z{0=2731}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,374: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4142, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4142},isLetterOrDigitAhead()Z{0=4142},isLetterOrDigitAhead()Z{0=4142},countTokens()I{0=4142},hasMoreTokens()Z{0=4142}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4142}"];
	2 -> 2 [label="countTokens()I{0=4142},countTokens()I{0=4142},countTokens()I{0=4142},isLetterOrDigitAhead()Z{0=4142}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,374: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5752, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5752},countTokens()I{0=5752},nextIsSep()Z{0=5752},hasMoreTokens()Z{0=5752},nextIsSep()Z{0=5752}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5752}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5752},nextToken()Ljava/lang/String;{0=5752},hasMoreTokens()Z{0=5752},nextIsSep()Z{0=5752},countTokens()I{0=5752},isLetterOrDigitAhead()Z{0=5752},nextIsSep()Z{0=5752}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,375: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4396, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4396},nextIsSep()Z{0=4396},hasMoreTokens()Z{0=4396},countTokens()I{0=4396}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4396},nextToken()Ljava/lang/String;{0=4396}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4396},hasMoreTokens()Z{0=4396},nextToken()Ljava/lang/String;{0=4396}"];
	2 -> 1 [label="reset()V{0=4396}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,375: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5452, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5452},countTokens()I{0=5452},nextIsSep()Z{0=5452},hasMoreTokens()Z{0=5452},countTokens()I{0=5452},isLetterOrDigitAhead()Z{0=5452}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5452}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,375: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2272, 1=1738}"];
	1 -> 1 [label="reset()V{0=2272},reset()V{0=2272},hasMoreTokens()Z{0=2272}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,375: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3493, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3493},hasMoreTokens()Z{0=3493},nextIsSep()Z{0=3493},countTokens()I{0=3493},isLetterOrDigitAhead()Z{0=3493}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3493}"];
	2 -> 2 [label="@nextToken()Ljava/lang/String;{0=3493},nextToken()Ljava/lang/String;{0=3493}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,375: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1834, 1=109}"];
	1 -> 1 [label="@nextToken()Ljava/lang/String;{0=1834}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,375: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2753, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2753},hasMoreTokens()Z{0=2753},countTokens()I{0=2753},isLetterOrDigitAhead()Z{0=2753},countTokens()I{0=2753},isLetterOrDigitAhead()Z{0=2753}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,375: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5866, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5866},nextIsSep()Z{0=5866},hasMoreTokens()Z{0=5866},nextIsSep()Z{0=5866},reset()V{0=5866},hasMoreTokens()Z{0=5866}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5866},nextToken()Ljava/lang/String;{0=5866}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5866}"];
	2 -> 1 [label="reset()V{0=5866}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,375: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3284, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3284},hasMoreTokens()Z{0=3284},countTokens()I{0=3284},hasMoreTokens()Z{0=3284},nextIsSep()Z{0=3284},nextIsSep()Z{0=3284},nextIsSep()Z{0=3284},countTokens()I{0=3284},countTokens()I{0=3284}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,375: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3127, 1=1961}"];
	1 -> 1 [label="reset()V{0=3127}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,403: Merged model for type tutorial/NumberFormatStringTokenizer
[INFO ] 2019-09-24 15:53:15,407: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5826, 1=1738},<init>(Ljava/lang/String;)V{0=4064, 1=2437},<init>(Ljava/lang/String;)V{0=5120, 1=1738},<init>(Ljava/lang/String;)V{0=5555, 1=1738},<init>(Ljava/lang/String;)V{0=5651, 1=1738},<init>(Ljava/lang/String;)V{0=3885, 1=1738},<init>(Ljava/lang/String;)V{0=4879, 1=1738},<init>(Ljava/lang/String;)V{0=4594, 1=1738},<init>(Ljava/lang/String;)V{0=4843, 1=1738},<init>(Ljava/lang/String;)V{0=4707, 1=1738},<init>(Ljava/lang/String;)V{0=3583, 1=1738},<init>(Ljava/lang/String;)V{0=5488, 1=1738},<init>(Ljava/lang/String;)V{0=3284, 1=1738},<init>(Ljava/lang/String;)V{0=3616, 1=1738},<init>(Ljava/lang/String;)V{0=3696, 1=1738},<init>(Ljava/lang/String;)V{0=5085, 1=1738},<init>(Ljava/lang/String;)V{0=3536, 1=1738},<init>(Ljava/lang/String;)V{0=3771, 1=1738},<init>(Ljava/lang/String;)V{0=4617, 1=1738},<init>(Ljava/lang/String;)V{0=4930, 1=1738},<init>(Ljava/lang/String;)V{0=4889, 1=1738},<init>(Ljava/lang/String;)V{0=5319, 1=1738},<init>(Ljava/lang/String;)V{0=5960, 1=1738},<init>(Ljava/lang/String;)V{0=3809, 1=1738},<init>(Ljava/lang/String;)V{0=2612, 1=1738},<init>(Ljava/lang/String;)V{0=2767, 1=1738},<init>(Ljava/lang/String;)V{0=3404, 1=1738},<init>(Ljava/lang/String;)V{0=2582, 1=1738},<init>(Ljava/lang/String;)V{0=3303, 1=1738},<init>(Ljava/lang/String;)V{0=3129, 1=1738},<init>(Ljava/lang/String;)V{0=3149, 1=1738},<init>(Ljava/lang/String;)V{0=4522, 1=1738},<init>(Ljava/lang/String;)V{0=5232, 1=1738},<init>(Ljava/lang/String;)V{0=2277, 1=1738},<init>(Ljava/lang/String;)V{0=3095, 1=1738},<init>(Ljava/lang/String;)V{0=5844, 1=1738},<init>(Ljava/lang/String;)V{0=3165, 1=1738},<init>(Ljava/lang/String;)V{0=5933, 1=1738},<init>(Ljava/lang/String;)V{0=4114, 1=1738},<init>(Ljava/lang/String;)V{0=2317, 1=1738},<init>(Ljava/lang/String;)V{0=3726, 1=1738},<init>(Ljava/lang/String;)V{0=3859, 1=1738},<init>(Ljava/lang/String;)V{0=2753, 1=1738},<init>(Ljava/lang/String;)V{0=2695, 1=1738},<init>(Ljava/lang/String;)V{0=5432, 1=1738},<init>(Ljava/lang/String;)V{0=4358, 1=1738},<init>(Ljava/lang/String;)V{0=4013, 1=1738},<init>(Ljava/lang/String;)V{0=5866, 1=1738},<init>(Ljava/lang/String;)V{0=3980, 1=1738},<init>(Ljava/lang/String;)V{0=5468, 1=1738},<init>(Ljava/lang/String;)V{0=3746, 1=1738},<init>(Ljava/lang/String;)V{0=2164, 1=1738},<init>(Ljava/lang/String;)V{0=3599, 1=1738},<init>(Ljava/lang/String;)V{0=3558, 1=1738},<init>(Ljava/lang/String;)V{0=4056, 1=1738},<init>(Ljava/lang/String;)V{0=3915, 1=1738},<init>(Ljava/lang/String;)V{0=3679, 1=1738},<init>(Ljava/lang/String;)V{0=2439, 1=1738},<init>(Ljava/lang/String;)V{0=5452, 1=1738},<init>(Ljava/lang/String;)V{0=5693, 1=1738},<init>(Ljava/lang/String;)V{0=3358, 1=1738},<init>(Ljava/lang/String;)V{0=4396, 1=1738},<init>(Ljava/lang/String;)V{0=5531, 1=1738},<init>(Ljava/lang/String;)V{0=2805, 1=1738},<init>(Ljava/lang/String;)V{0=5626, 1=1738},<init>(Ljava/lang/String;)V{0=4340, 1=2437},<init>(Ljava/lang/String;)V{0=3176, 1=1738},<init>(Ljava/lang/String;)V{0=2702, 1=1738},<init>(Ljava/lang/String;)V{0=4757, 1=1738},<init>(Ljava/lang/String;)V{0=4073, 1=1738},<init>(Ljava/lang/String;)V{0=4004, 1=1738},<init>(Ljava/lang/String;)V{0=4448, 1=1738},<init>(Ljava/lang/String;)V{0=3493, 1=1738},<init>(Ljava/lang/String;)V{0=2902, 1=1738},<init>(Ljava/lang/String;)V{0=2097, 1=1738},<init>(Ljava/lang/String;)V{0=2417, 1=1738},<init>(Ljava/lang/String;)V{0=4825, 1=1738},<init>(Ljava/lang/String;)V{0=2986, 1=1738},<init>(Ljava/lang/String;)V{0=2637, 1=1738},<init>(Ljava/lang/String;)V{0=4123, 1=1738},<init>(Ljava/lang/String;)V{0=2542, 1=1738},<init>(Ljava/lang/String;)V{0=2884, 1=1738},<init>(Ljava/lang/String;)V{0=5885, 1=1738},<init>(Ljava/lang/String;)V{0=3127, 1=1961},<init>(Ljava/lang/String;)V{0=4512, 1=2437},<init>(Ljava/lang/String;)V{0=2829, 1=1738},<init>(Ljava/lang/String;)V{0=2682, 1=1738},<init>(Ljava/lang/String;)V{0=2731, 1=1738},<init>(Ljava/lang/String;)V{0=4488, 1=1738},<init>(Ljava/lang/String;)V{0=5892, 1=1738},<init>(Ljava/lang/String;)V{0=2256, 1=1738},<init>(Ljava/lang/String;)V{0=5412, 1=1738},<init>(Ljava/lang/String;)V{0=2843, 1=1738},<init>(Ljava/lang/String;)V{0=4544, 1=1738},<init>(Ljava/lang/String;)V{0=3575, 1=1738},<init>(Ljava/lang/String;)V{0=4861, 1=1738},<init>(Ljava/lang/String;)V{0=5669, 1=1738},<init>(Ljava/lang/String;)V{0=2297, 1=1738},<init>(Ljava/lang/String;)V{0=5177, 1=1738},<init>(Ljava/lang/String;)V{0=5014, 1=1738},<init>(Ljava/lang/String;)V{0=2272, 1=1738},<init>(Ljava/lang/String;)V{0=3224, 1=1738},<init>(Ljava/lang/String;)V{0=5637, 1=1738},<init>(Ljava/lang/String;)V{0=3830, 1=1738},<init>(Ljava/lang/String;)V{0=5343, 1=1738},<init>(Ljava/lang/String;)V{0=3511, 1=1738},<init>(Ljava/lang/String;)V{0=5258, 1=1738},<init>(Ljava/lang/String;)V{0=2659, 1=1738},<init>(Ljava/lang/String;)V{0=5375, 1=1738},<init>(Ljava/lang/String;)V{0=2964, 1=1738},<init>(Ljava/lang/String;)V{0=5393, 1=1738},<init>(Ljava/lang/String;)V{0=2944, 1=1738},<init>(Ljava/lang/String;)V{0=3710, 1=1738},<init>(Ljava/lang/String;)V{0=3964, 1=1738},<init>(Ljava/lang/String;)V{0=4376, 1=1738},<init>(Ljava/lang/String;)V{0=4142, 1=1738},<init>(Ljava/lang/String;)V{0=5752, 1=1738},<init>(Ljava/lang/String;)V{0=4904, 1=1738},<init>(Ljava/lang/String;)V{0=4199, 1=1738},<init>(Ljava/lang/String;)V{0=3002, 1=1738},<init>(Ljava/lang/String;)V{0=3782, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3129},countTokens()I{0=4358},nextIsSep()Z{0=3616},countTokens()I{0=4825},hasMoreTokens()Z{0=4073},reset()V{0=3599},countTokens()I{0=3726},isLetterOrDigitAhead()Z{0=5432},isLetterOrDigitAhead()Z{0=3885},nextIsSep()Z{0=3511},hasMoreTokens()Z{0=3176},hasMoreTokens()Z{0=2702},hasMoreTokens()Z{0=5531},nextIsSep()Z{0=5669},isLetterOrDigitAhead()Z{0=3095},nextIsSep()Z{0=5960},hasMoreTokens()Z{0=2805},countTokens()I{0=4123},countTokens()I{0=3358},countTokens()I{0=3915},nextIsSep()Z{0=5393},hasMoreTokens()Z{0=3224},hasMoreTokens()Z{0=2637},countTokens()I{0=4396},hasMoreTokens()Z{0=2884},isLetterOrDigitAhead()Z{0=2964},isLetterOrDigitAhead()Z{0=5752},nextIsSep()Z{0=3782},hasMoreTokens()Z{0=2417},nextIsSep()Z{0=4522},isLetterOrDigitAhead()Z{0=4904},countTokens()I{0=5826},nextIsSep()Z{0=4376},isLetterOrDigitAhead()Z{0=3599},reset()V{0=5960},countTokens()I{0=5452},countTokens()I{0=2944},countTokens()I{0=3616},nextIsSep()Z{0=3149},countTokens()I{0=2439},isLetterOrDigitAhead()Z{0=5432},hasMoreTokens()Z{0=3830},nextIsSep()Z{0=3404},countTokens()I{0=5531},reset()V{0=3696},hasMoreTokens()Z{0=5014},hasMoreTokens()Z{0=5892},nextIsSep()Z{0=2902},hasMoreTokens()Z{0=4861},isLetterOrDigitAhead()Z{0=3095},isLetterOrDigitAhead()Z{0=5232},hasMoreTokens()Z{0=4488},isLetterOrDigitAhead()Z{0=3493},hasMoreTokens()Z{0=5866},hasMoreTokens()Z{0=4522},countTokens()I{0=3859},countTokens()I{0=5412},hasMoreTokens()Z{0=3964},nextIsSep()Z{0=5120},nextIsSep()Z{0=5651},nextIsSep()Z{0=4707},nextIsSep()Z{0=4843},nextIsSep()Z{0=2164},hasMoreTokens()Z{0=3710},isLetterOrDigitAhead()Z{0=3599},hasMoreTokens()Z{0=2767},nextIsSep()Z{0=5637},hasMoreTokens()Z{0=5488},hasMoreTokens()Z{0=3583},hasMoreTokens()Z{0=3616},isLetterOrDigitAhead()Z{0=2297},countTokens()I{0=5343},reset()V{0=5258},nextIsSep()Z{0=3830},nextIsSep()Z{0=5960},countTokens()I{0=3149},reset()V{0=3809},nextIsSep()Z{0=5866},nextIsSep()Z{0=5452},nextIsSep()Z{0=2944},isLetterOrDigitAhead()Z{0=2843},isLetterOrDigitAhead()Z{0=4544},countTokens()I{0=3404},countTokens()I{0=5085},isLetterOrDigitAhead()Z{0=3558},nextIsSep()Z{0=3980},nextIsSep()Z{0=4448},nextIsSep()Z{0=5412},hasMoreTokens()Z{0=5319},reset()V{0=3224},countTokens()I{0=4843},countTokens()I{0=4707},hasMoreTokens()Z{0=5085},countTokens()I{0=5651},isLetterOrDigitAhead()Z{0=2097},hasMoreTokens()Z{0=2753},hasMoreTokens()Z{0=4358},countTokens()I{0=4199},nextIsSep()Z{0=4123},countTokens()I{0=4142},hasMoreTokens()Z{0=5933},reset()V{0=2986},isLetterOrDigitAhead()Z{0=5232},isLetterOrDigitAhead()Z{0=2297},hasMoreTokens()Z{0=5844},nextIsSep()Z{0=3284},isLetterOrDigitAhead()Z{0=4544},isLetterOrDigitAhead()Z{0=2843},nextIsSep()Z{0=5258},nextIsSep()Z{0=4594},nextIsSep()Z{0=2659},isLetterOrDigitAhead()Z{0=5393},hasMoreTokens()Z{0=2277},nextIsSep()Z{0=4825},reset()V{0=4889},isLetterOrDigitAhead()Z{0=4617},hasMoreTokens()Z{0=5555},hasMoreTokens()Z{0=3358},countTokens()I{0=2542},hasMoreTokens()Z{0=3679},nextIsSep()Z{0=4930},countTokens()I{0=4522},reset()V{0=5393},hasMoreTokens()Z{0=2164},nextIsSep()Z{0=3303},hasMoreTokens()Z{0=3746},isLetterOrDigitAhead()Z{0=2097},nextIsSep()Z{0=2767},countTokens()I{0=2731},hasMoreTokens()Z{0=5232},nextIsSep()Z{0=4396},hasMoreTokens()Z{0=5468},nextIsSep()Z{0=2582},nextIsSep()Z{0=5412},hasMoreTokens()Z{0=3493},reset()V{0=3964},nextIsSep()Z{0=3575},countTokens()I{0=3859},reset()V{0=2164},hasMoreTokens()Z{0=4448},isLetterOrDigitAhead()Z{0=2753},nextIsSep()Z{0=5637},isLetterOrDigitAhead()Z{0=2277},hasMoreTokens()Z{0=4757},countTokens()I{0=3224},hasMoreTokens()Z{0=5626},isLetterOrDigitAhead()Z{0=5844},nextIsSep()Z{0=2659},countTokens()I{0=2805},isLetterOrDigitAhead()Z{0=3679},nextIsSep()Z{0=5866},hasMoreTokens()Z{0=5885},nextIsSep()Z{0=2944},countTokens()I{0=5452},isLetterOrDigitAhead()Z{0=3358},countTokens()I{0=2439},countTokens()I{0=2902},isLetterOrDigitAhead()Z{0=3964},hasMoreTokens()Z{0=2986},hasMoreTokens()Z{0=2097},nextIsSep()Z{0=5844},reset()V{0=4114},reset()V{0=2317},isLetterOrDigitAhead()Z{0=3746},reset()V{0=5531},isLetterOrDigitAhead()Z{0=3149},hasMoreTokens()Z{0=4522},nextIsSep()Z{0=3303},countTokens()I{0=5393},isLetterOrDigitAhead()Z{0=2753},isLetterOrDigitAhead()Z{0=2702},hasMoreTokens()Z{0=2297},nextIsSep()Z{0=4396},isLetterOrDigitAhead()Z{0=5488},nextIsSep()Z{0=2582},hasMoreTokens()Z{0=3224},hasMoreTokens()Z{0=2272},countTokens()I{0=3224},hasMoreTokens()Z{0=2256},hasMoreTokens()Z{0=2843},hasMoreTokens()Z{0=4544},isLetterOrDigitAhead()Z{0=5844},countTokens()I{0=5826},reset()V{0=3575},isLetterOrDigitAhead()Z{0=2277},nextIsSep()Z{0=4930},hasMoreTokens()Z{0=2682},nextIsSep()Z{0=3782},isLetterOrDigitAhead()Z{0=3358},hasMoreTokens()Z{0=4904},hasMoreTokens()Z{0=3002},nextIsSep()Z{0=2317},countTokens()I{0=3726},countTokens()I{0=3129},nextIsSep()Z{0=2695},isLetterOrDigitAhead()Z{0=3679},countTokens()I{0=2805},hasMoreTokens()Z{0=5752},nextIsSep()Z{0=4825},hasMoreTokens()Z{0=2964},isLetterOrDigitAhead()Z{0=2884},countTokens()I{0=3511},countTokens()I{0=3809},isLetterOrDigitAhead()Z{0=3746},nextIsSep()Z{0=4123},countTokens()I{0=5669},isLetterOrDigitAhead()Z{0=5014},isLetterOrDigitAhead()Z{0=5343},countTokens()I{0=3980},reset()V{0=5375},countTokens()I{0=3782},nextIsSep()Z{0=4522},hasMoreTokens()Z{0=5555},countTokens()I{0=4930},nextIsSep()Z{0=4376},countTokens()I{0=2542},nextIsSep()Z{0=5393},countTokens()I{0=3915},isLetterOrDigitAhead()Z{0=3176},countTokens()I{0=2731},isLetterOrDigitAhead()Z{0=4488},countTokens()I{0=3303},countTokens()I{0=2829},isLetterOrDigitAhead()Z{0=2805},countTokens()I{0=2582},reset()V{0=3127},countTokens()I{0=2767},isLetterOrDigitAhead()Z{0=4358},countTokens()I{0=4142},isLetterOrDigitAhead()Z{0=5468},nextIsSep()Z{0=3511},hasMoreTokens()Z{0=2612},countTokens()I{0=4199},isLetterOrDigitAhead()Z{0=2637},isLetterOrDigitAhead()Z{0=4522},nextIsSep()Z{0=4594},hasMoreTokens()Z{0=4889},countTokens()I{0=3284},hasMoreTokens()Z{0=3809},hasMoreTokens()Z{0=3536},nextIsSep()Z{0=3284},hasMoreTokens()Z{0=4617},countTokens()I{0=4594},reset()V{0=5177},hasMoreTokens()Z{0=5432},nextIsSep()Z{0=3980},hasMoreTokens()Z{0=4013},isLetterOrDigitAhead()Z{0=5014},countTokens()I{0=3980},countTokens()I{0=3095},isLetterOrDigitAhead()Z{0=2805},hasMoreTokens()Z{0=3095},hasMoreTokens()Z{0=3165},nextIsSep()Z{0=2767},isLetterOrDigitAhead()Z{0=3176},countTokens()I{0=4013},nextIsSep()Z{0=5375},hasMoreTokens()Z{0=5232},nextIsSep()Z{0=5120},nextIsSep()Z{0=5651},nextIsSep()Z{0=4707},nextIsSep()Z{0=4843},countTokens()I{0=5555},countTokens()I{0=5343},nextIsSep()Z{0=5177},countTokens()I{0=3809},nextIsSep()Z{0=2902},hasMoreTokens()Z{0=5693},isLetterOrDigitAhead()Z{0=2637},isLetterOrDigitAhead()Z{0=4522},isLetterOrDigitAhead()Z{0=5319},hasMoreTokens()Z{0=3599},countTokens()I{0=5866},nextIsSep()Z{0=3149},hasMoreTokens()Z{0=3558},countTokens()I{0=4594},nextIsSep()Z{0=3404},countTokens()I{0=3284},countTokens()I{0=2986},hasMoreTokens()Z{0=2902},nextIsSep()Z{0=5892},nextIsSep()Z{0=5693},nextIsSep()Z{0=4861},nextIsSep()Z{0=4340},nextIsSep()Z{0=4594},isLetterOrDigitAhead()Z{0=3859},countTokens()I{0=2753},isLetterOrDigitAhead()Z{0=5412},countTokens()I{0=3809},hasMoreTokens()Z{0=2753},countTokens()I{0=2277},countTokens()I{0=4512},hasMoreTokens()Z{0=5258},nextIsSep()Z{0=3558},nextIsSep()Z{0=3830},reset()V{0=4488},countTokens()I{0=5844},isLetterOrDigitAhead()Z{0=5826},isLetterOrDigitAhead()Z{0=3129},reset()V{0=3165},nextIsSep()Z{0=2256},countTokens()I{0=3679},hasMoreTokens()Z{0=2637},nextIsSep()Z{0=4013},isLetterOrDigitAhead()Z{0=5452},hasMoreTokens()Z{0=2542},countTokens()I{0=3358},reset()V{0=5826},reset()V{0=5232},isLetterOrDigitAhead()Z{0=2439},countTokens()I{0=3224},isLetterOrDigitAhead()Z{0=5960},countTokens()I{0=3493},nextIsSep()Z{0=3964},countTokens()I{0=4448},countTokens()I{0=3746},hasMoreTokens()Z{0=3511},isLetterOrDigitAhead()Z{0=3859},isLetterOrDigitAhead()Z{0=5120},nextIsSep()Z{0=2702},countTokens()I{0=2964},hasMoreTokens()Z{0=5343},nextIsSep()Z{0=5531},hasMoreTokens()Z{0=5177},nextIsSep()Z{0=3284},hasMoreTokens()Z{0=5669},nextIsSep()Z{0=4889},countTokens()I{0=4904},countTokens()I{0=3002},countTokens()I{0=3599},isLetterOrDigitAhead()Z{0=5826},nextIsSep()Z{0=3809},reset()V{0=3149},countTokens()I{0=5752},nextIsSep()Z{0=4073},nextIsSep()Z{0=4617},reset()V{0=2612},isLetterOrDigitAhead()Z{0=5452},isLetterOrDigitAhead()Z{0=4825},countTokens()I{0=2256},isLetterOrDigitAhead()Z{0=5488},hasMoreTokens()Z{0=3782},countTokens()I{0=5432},isLetterOrDigitAhead()Z{0=2439},nextIsSep()Z{0=2417},countTokens()I{0=2682},hasMoreTokens()Z{0=5085},isLetterOrDigitAhead()Z{0=3129},hasMoreTokens()Z{0=4376},hasMoreTokens()Z{0=5393},hasMoreTokens()Z{0=5375},nextIsSep()Z{0=5232},countTokens()I{0=3095},nextIsSep()Z{0=3224},hasMoreTokens()Z{0=2829},countTokens()I{0=3224},nextIsSep()Z{0=3165},nextIsSep()Z{0=3980},nextIsSep()Z{0=2884},hasMoreTokens()Z{0=3284},countTokens()I{0=3809},countTokens()I{0=5014},nextIsSep()Z{0=4904},isLetterOrDigitAhead()Z{0=4448},nextIsSep()Z{0=3002},countTokens()I{0=4889},hasMoreTokens()Z{0=4594},countTokens()I{0=4617},reset()V{0=4488},nextIsSep()Z{0=5752},isLetterOrDigitAhead()Z{0=5637},countTokens()I{0=3536},nextIsSep()Z{0=4358},nextIsSep()Z{0=2964},reset()V{0=3830},isLetterOrDigitAhead()Z{0=2731},countTokens()I{0=4488},isLetterOrDigitAhead()Z{0=2829},nextIsSep()Z{0=5933},countTokens()I{0=3284},countTokens()I{0=2097},isLetterOrDigitAhead()Z{0=4142},nextIsSep()Z{0=2164},hasMoreTokens()Z{0=3303},nextIsSep()Z{0=3980},hasMoreTokens()Z{0=2767},countTokens()I{0=3980},nextIsSep()Z{0=5468},isLetterOrDigitAhead()Z{0=4199},hasMoreTokens()Z{0=2582},nextIsSep()Z{0=5555},nextIsSep()Z{0=2256},reset()V{0=2272},countTokens()I{0=5555},nextIsSep()Z{0=4757},hasMoreTokens()Z{0=4930},countTokens()I{0=3558},hasMoreTokens()Z{0=2695},hasMoreTokens()Z{0=3726},hasMoreTokens()Z{0=5866},isLetterOrDigitAhead()Z{0=5637},countTokens()I{0=3536},nextIsSep()Z{0=5885},nextIsSep()Z{0=3809},reset()V{0=4861},hasMoreTokens()Z{0=2317},hasMoreTokens()Z{0=4114},countTokens()I{0=2805},nextIsSep()Z{0=5488},nextIsSep()Z{0=3583},countTokens()I{0=5693},reset()V{0=4512},nextIsSep()Z{0=2986},nextIsSep()Z{0=3616},countTokens()I{0=3176},nextIsSep()Z{0=3284},isLetterOrDigitAhead()Z{0=2731},countTokens()I{0=4594},isLetterOrDigitAhead()Z{0=2829},hasMoreTokens()Z{0=5960},nextIsSep()Z{0=5319},nextIsSep()Z{0=3493},reset()V{0=4757},isLetterOrDigitAhead()Z{0=4064},isLetterOrDigitAhead()Z{0=4199},countTokens()I{0=2637},isLetterOrDigitAhead()Z{0=4142},reset()V{0=5626},nextIsSep()Z{0=5085},countTokens()I{0=2297},nextIsSep()Z{0=4448},hasMoreTokens()Z{0=3915},countTokens()I{0=2843},countTokens()I{0=4544},countTokens()I{0=4013},countTokens()I{0=5555},countTokens()I{0=2256},isLetterOrDigitAhead()Z{0=2695},hasMoreTokens()Z{0=3980},nextIsSep()Z{0=2256},isLetterOrDigitAhead()Z{0=3726},countTokens()I{0=5432},nextIsSep()Z{0=2682},countTokens()I{0=2417},nextIsSep()Z{0=2164},countTokens()I{0=2884},hasMoreTokens()Z{0=5393},isLetterOrDigitAhead()Z{0=3511},hasMoreTokens()Z{0=4396},countTokens()I{0=3095},nextIsSep()Z{0=5468},nextIsSep()Z{0=3224},countTokens()I{0=2702},nextIsSep()Z{0=4358},nextIsSep()Z{0=2964},reset()V{0=3536},reset()V{0=5885},hasMoreTokens()Z{0=4123},countTokens()I{0=4861},countTokens()I{0=5531},nextIsSep()Z{0=3002},isLetterOrDigitAhead()Z{0=4448},countTokens()I{0=5343},nextIsSep()Z{0=4904},reset()V{0=5866},isLetterOrDigitAhead()Z{0=3224},countTokens()I{0=4073},nextIsSep()Z{0=4512},nextIsSep()Z{0=5752},hasMoreTokens()Z{0=4825},countTokens()I{0=3599},reset()V{0=2272},hasMoreTokens()Z{0=5637},countTokens()I{0=3358},isLetterOrDigitAhead()Z{0=3726},countTokens()I{0=3679},hasMoreTokens()Z{0=5412},nextIsSep()Z{0=5319},nextIsSep()Z{0=3493},countTokens()I{0=3746},hasMoreTokens()Z{0=3575},isLetterOrDigitAhead()Z{0=4889},hasMoreTokens()Z{0=2829},hasMoreTokens()Z{0=2731},isLetterOrDigitAhead()Z{0=2902},nextIsSep()Z{0=4448},hasMoreTokens()Z{0=3915},countTokens()I{0=3964},nextIsSep()Z{0=5488},reset()V{0=4512},countTokens()I{0=4861},hasMoreTokens()Z{0=4199},nextIsSep()Z{0=3583},countTokens()I{0=5892},isLetterOrDigitAhead()Z{0=5375},nextIsSep()Z{0=3616},nextIsSep()Z{0=2986},countTokens()I{0=2753},nextIsSep()Z{0=5531},hasMoreTokens()Z{0=4142},countTokens()I{0=3830},hasMoreTokens()Z{0=2659},countTokens()I{0=5844},nextIsSep()Z{0=5885},hasMoreTokens()Z{0=2944},countTokens()I{0=2277},isLetterOrDigitAhead()Z{0=4448},hasMoreTokens()Z{0=5258},reset()V{0=4544},reset()V{0=3710},isLetterOrDigitAhead()Z{0=3599},countTokens()I{0=2297},countTokens()I{0=5319},countTokens()I{0=3964},isLetterOrDigitAhead()Z{0=5343},nextIsSep()Z{0=3964},hasMoreTokens()Z{0=5651},hasMoreTokens()Z{0=5120},hasMoreTokens()Z{0=4707},countTokens()I{0=5085},hasMoreTokens()Z{0=4843},countTokens()I{0=2637},hasMoreTokens()Z{0=4448},reset()V{0=4522},nextIsSep()Z{0=4013},hasMoreTokens()Z{0=5826},countTokens()I{0=2843},countTokens()I{0=4544},isLetterOrDigitAhead()Z{0=4594},isLetterOrDigitAhead()Z{0=4376},hasMoreTokens()Z{0=3149},nextIsSep()Z{0=3830},hasMoreTokens()Z{0=3129},nextIsSep()Z{0=3558},hasMoreTokens()Z{0=3404},isLetterOrDigitAhead()Z{0=3782},isLetterOrDigitAhead()Z{0=2542},countTokens()I{0=3616},countTokens()I{0=3176},nextIsSep()Z{0=5892},countTokens()I{0=5933},countTokens()I{0=3583},nextIsSep()Z{0=5693},hasMoreTokens()Z{0=5960},countTokens()I{0=2805},hasMoreTokens()Z{0=3696},countTokens()I{0=5531},isLetterOrDigitAhead()Z{0=5343},hasMoreTokens()Z{0=3859},countTokens()I{0=2164},nextIsSep()Z{0=5085},countTokens()I{0=5468},nextIsSep()Z{0=2884},nextIsSep()Z{0=2417},hasMoreTokens()Z{0=4522},nextIsSep()Z{0=5555},nextIsSep()Z{0=3710},countTokens()I{0=3830},hasMoreTokens()Z{0=2439},isLetterOrDigitAhead()Z{0=3782},nextIsSep()Z{0=4889},reset()V{0=4340},nextIsSep()Z{0=3809},isLetterOrDigitAhead()Z{0=2542},hasMoreTokens()Z{0=5452},countTokens()I{0=5014},hasMoreTokens()Z{0=3284},nextIsSep()Z{0=3536},nextIsSep()Z{0=4073},isLetterOrDigitAhead()Z{0=3980},nextIsSep()Z{0=4617},isLetterOrDigitAhead()Z{0=3095},isLetterOrDigitAhead()Z{0=2582},nextIsSep()Z{0=5933},nextIsSep()Z{0=2702},countTokens()I{0=4358},countTokens()I{0=2097},nextIsSep()Z{0=5531},countTokens()I{0=4488},isLetterOrDigitAhead()Z{0=4544},countTokens()I{0=5933},isLetterOrDigitAhead()Z{0=3303}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4522},nextToken()Ljava/lang/String;{0=3964},nextToken()Ljava/lang/String;{0=5826},nextToken()Ljava/lang/String;{0=4004},nextToken()Ljava/lang/String;{0=3980},nextToken()Ljava/lang/String;{0=4056},nextToken()Ljava/lang/String;{0=5393},nextToken()Ljava/lang/String;{0=4757},nextToken()Ljava/lang/String;{0=4013},nextToken()Ljava/lang/String;{0=5866},nextToken()Ljava/lang/String;{0=5319},nextToken()Ljava/lang/String;{0=3830},nextToken()Ljava/lang/String;{0=2164},nextToken()Ljava/lang/String;{0=3536},nextToken()Ljava/lang/String;{0=4617},nextToken()Ljava/lang/String;{0=3303},nextToken()Ljava/lang/String;{0=4594},nextToken()Ljava/lang/String;{0=3129},nextToken()Ljava/lang/String;{0=5866},nextToken()Ljava/lang/String;{0=4544},nextToken()Ljava/lang/String;{0=2582},nextToken()Ljava/lang/String;{0=5693},nextToken()Ljava/lang/String;{0=3095},nextToken()Ljava/lang/String;{0=5844},nextToken()Ljava/lang/String;{0=3771},nextToken()Ljava/lang/String;{0=5669},nextToken()Ljava/lang/String;{0=5177},nextToken()Ljava/lang/String;{0=2277},nextToken()Ljava/lang/String;{0=5651},nextToken()Ljava/lang/String;{0=5120},nextToken()Ljava/lang/String;{0=3726},nextToken()Ljava/lang/String;{0=3859},nextToken()Ljava/lang/String;{0=4358},nextToken()Ljava/lang/String;{0=5432},nextToken()Ljava/lang/String;{0=3575},nextToken()Ljava/lang/String;{0=4843},nextToken()Ljava/lang/String;{0=4707},nextToken()Ljava/lang/String;{0=5626},nextToken()Ljava/lang/String;{0=5933},nextToken()Ljava/lang/String;{0=4340},nextToken()Ljava/lang/String;{0=3583},nextToken()Ljava/lang/String;{0=5488},nextToken()Ljava/lang/String;{0=5375},nextToken()Ljava/lang/String;{0=2682},nextToken()Ljava/lang/String;{0=3616},nextToken()Ljava/lang/String;{0=3746},nextToken()Ljava/lang/String;{0=3599},nextToken()Ljava/lang/String;{0=3558},nextToken()Ljava/lang/String;{0=4930},nextToken()Ljava/lang/String;{0=4889},nextToken()Ljava/lang/String;{0=5468},nextToken()Ljava/lang/String;{0=5375},nextToken()Ljava/lang/String;{0=2439},nextToken()Ljava/lang/String;{0=4879},nextToken()Ljava/lang/String;{0=3404},nextToken()Ljava/lang/String;{0=3885},nextToken()Ljava/lang/String;{0=3710},nextToken()Ljava/lang/String;{0=3358},nextToken()Ljava/lang/String;{0=2256},nextToken()Ljava/lang/String;{0=3679},nextToken()Ljava/lang/String;{0=3149},nextToken()Ljava/lang/String;{0=5258},nextToken()Ljava/lang/String;{0=3176},nextToken()Ljava/lang/String;{0=2702},nextToken()Ljava/lang/String;{0=4114},nextToken()Ljava/lang/String;{0=5892},nextToken()Ljava/lang/String;{0=2805},nextToken()Ljava/lang/String;{0=3493},nextToken()Ljava/lang/String;{0=2902},nextToken()Ljava/lang/String;{0=5531},nextToken()Ljava/lang/String;{0=4396},nextToken()Ljava/lang/String;{0=2767},nextToken()Ljava/lang/String;{0=2097},nextToken()Ljava/lang/String;{0=4825},nextToken()Ljava/lang/String;{0=2944},nextToken()Ljava/lang/String;{0=4376},nextToken()Ljava/lang/String;{0=5085},nextToken()Ljava/lang/String;{0=3002},nextToken()Ljava/lang/String;{0=2637},nextToken()Ljava/lang/String;{0=2542},nextToken()Ljava/lang/String;{0=2884},nextToken()Ljava/lang/String;{0=4396},nextToken()Ljava/lang/String;{0=5412},nextToken()Ljava/lang/String;{0=2843},nextToken()Ljava/lang/String;{0=4861},nextToken()Ljava/lang/String;{0=2767},nextToken()Ljava/lang/String;{0=2829},nextToken()Ljava/lang/String;{0=5452},nextToken()Ljava/lang/String;{0=2731},nextToken()Ljava/lang/String;{0=2317},nextToken()Ljava/lang/String;{0=4073},nextToken()Ljava/lang/String;{0=5637},nextToken()Ljava/lang/String;{0=4448},nextToken()Ljava/lang/String;{0=5343},nextToken()Ljava/lang/String;{0=3511},nextToken()Ljava/lang/String;{0=3165},nextToken()Ljava/lang/String;{0=5669},nextToken()Ljava/lang/String;{0=2297},nextToken()Ljava/lang/String;{0=5014},nextToken()Ljava/lang/String;{0=5343},nextToken()Ljava/lang/String;{0=2612},nextToken()Ljava/lang/String;{0=2964},nextToken()Ljava/lang/String;{0=2417},nextToken()Ljava/lang/String;{0=5555},nextToken()Ljava/lang/String;{0=2986},nextToken()Ljava/lang/String;{0=4199},nextToken()Ljava/lang/String;{0=3696},nextToken()Ljava/lang/String;{0=4904},nextToken()Ljava/lang/String;{0=5232},nextToken()Ljava/lang/String;{0=4004},nextToken()Ljava/lang/String;{0=4123},nextToken()Ljava/lang/String;{0=4142},nextToken()Ljava/lang/String;{0=5752}"];
	2 -> 2 [label="nextIsSep()Z{0=5933},nextToken()Ljava/lang/String;{0=3746},isLetterOrDigitAhead()Z{0=2582},hasMoreTokens()Z{0=5343},countTokens()I{0=3726},isLetterOrDigitAhead()Z{0=3679},nextIsSep()Z{0=3726},nextIsSep()Z{0=5892},hasMoreTokens()Z{0=3002},hasMoreTokens()Z{0=5014},countTokens()I{0=2612},isLetterOrDigitAhead()Z{0=3303},nextToken()Ljava/lang/String;{0=3165},nextToken()Ljava/lang/String;{0=2417},countTokens()I{0=5343},nextIsSep()Z{0=5177},nextToken()Ljava/lang/String;{0=2582},nextIsSep()Z{0=2277},nextToken()Ljava/lang/String;{0=5120},isLetterOrDigitAhead()Z{0=5468},countTokens()I{0=5014},isLetterOrDigitAhead()Z{0=5319},countTokens()I{0=5669},hasMoreTokens()Z{0=2944},nextIsSep()Z{0=3511},hasMoreTokens()Z{0=2317},isLetterOrDigitAhead()Z{0=2986},nextIsSep()Z{0=3303},isLetterOrDigitAhead()Z{0=5892},nextIsSep()Z{0=3358},nextToken()Ljava/lang/String;{0=5014},hasMoreTokens()Z{0=3859},nextIsSep()Z{0=5319},countTokens()I{0=2884},countTokens()I{0=2542},countTokens()I{0=2637},nextIsSep()Z{0=4376},hasMoreTokens()Z{0=4757},isLetterOrDigitAhead()Z{0=3696},hasMoreTokens()Z{0=4123},hasMoreTokens()Z{0=2277},nextIsSep()Z{0=5933},countTokens()I{0=2805},nextIsSep()Z{0=5844},nextIsSep()Z{0=3511},@nextToken()Ljava/lang/String;{0=2417},nextIsSep()Z{0=4004},hasMoreTokens()Z{0=3726},hasMoreTokens()Z{0=4056},hasMoreTokens()Z{0=2805},nextToken()Ljava/lang/String;{0=5752},countTokens()I{0=3303},hasMoreTokens()Z{0=4448},isLetterOrDigitAhead()Z{0=4358},nextIsSep()Z{0=3746},hasMoreTokens()Z{0=4396},countTokens()I{0=4376},countTokens()I{0=5319},@nextIsSep()Z{0=4930},nextToken()Ljava/lang/String;{0=4594},isLetterOrDigitAhead()Z{0=3830},countTokens()I{0=2637},countTokens()I{0=2542},nextToken()Ljava/lang/String;{0=4861},nextIsSep()Z{0=2902},isLetterOrDigitAhead()Z{0=2884},@nextToken()Ljava/lang/String;{0=3859},nextToken()Ljava/lang/String;{0=2682},countTokens()I{0=5844},nextToken()Ljava/lang/String;{0=4757},countTokens()I{0=5752},hasMoreTokens()Z{0=5693},hasMoreTokens()Z{0=4199},hasMoreTokens()Z{0=4904},hasMoreTokens()Z{0=5844},countTokens()I{0=5531},nextIsSep()Z{0=3176},isLetterOrDigitAhead()Z{0=5626},nextIsSep()Z{0=2805},isLetterOrDigitAhead()Z{0=5651},hasMoreTokens()Z{0=2277},isLetterOrDigitAhead()Z{0=3511},countTokens()I{0=3746},isLetterOrDigitAhead()Z{0=4199},countTokens()I{0=5468},isLetterOrDigitAhead()Z{0=2902},hasMoreTokens()Z{0=3746},countTokens()I{0=2582},hasMoreTokens()Z{0=4522},isLetterOrDigitAhead()Z{0=3149},hasMoreTokens()Z{0=5319},hasMoreTokens()Z{0=4376},hasMoreTokens()Z{0=3404},isLetterOrDigitAhead()Z{0=5468},nextIsSep()Z{0=5343},hasMoreTokens()Z{0=2702},countTokens()I{0=2902},nextToken()Ljava/lang/String;{0=5626},nextToken()Ljava/lang/String;{0=5393},isLetterOrDigitAhead()Z{0=4013},nextIsSep()Z{0=5892},countTokens()I{0=2612},countTokens()I{0=3583},hasMoreTokens()Z{0=5752},isLetterOrDigitAhead()Z{0=3710},nextIsSep()Z{0=4879},nextIsSep()Z{0=3176},isLetterOrDigitAhead()Z{0=5177},hasMoreTokens()Z{0=4707},hasMoreTokens()Z{0=4843},isLetterOrDigitAhead()Z{0=3511},nextIsSep()Z{0=3771},nextToken()Ljava/lang/String;{0=2902},isLetterOrDigitAhead()Z{0=5892},nextToken()Ljava/lang/String;{0=4123},hasMoreTokens()Z{0=5826},countTokens()I{0=2843},hasMoreTokens()Z{0=4376},countTokens()I{0=2731},nextIsSep()Z{0=5651},nextIsSep()Z{0=5432},nextToken()Ljava/lang/String;{0=2439},isLetterOrDigitAhead()Z{0=4617},hasMoreTokens()Z{0=5412},isLetterOrDigitAhead()Z{0=4142},hasMoreTokens()Z{0=2731},hasMoreTokens()Z{0=4199},isLetterOrDigitAhead()Z{0=4843},countTokens()I{0=2317},countTokens()I{0=3404},nextToken()Ljava/lang/String;{0=3493},nextIsSep()Z{0=2964},nextToken()Ljava/lang/String;{0=4930},nextToken()Ljava/lang/String;{0=4396},nextToken()Ljava/lang/String;{0=3859},nextIsSep()Z{0=5752},nextToken()Ljava/lang/String;{0=2843},countTokens()I{0=4199},nextIsSep()Z{0=4904},countTokens()I{0=4142},hasMoreTokens()Z{0=5892},hasMoreTokens()Z{0=3129},nextIsSep()Z{0=4617},nextIsSep()Z{0=3859},countTokens()I{0=2731},nextToken()Ljava/lang/String;{0=3002},nextToken()Ljava/lang/String;{0=3511},nextToken()Ljava/lang/String;{0=4617},hasMoreTokens()Z{0=2417},nextIsSep()Z{0=5826},hasMoreTokens()Z{0=3710},hasMoreTokens()Z{0=5651},hasMoreTokens()Z{0=5432},nextToken()Ljava/lang/String;{0=2944},@nextIsSep()Z{0=4594},@nextToken()Ljava/lang/String;{0=3493},nextIsSep()Z{0=2439},hasMoreTokens()Z{0=4073},isLetterOrDigitAhead()Z{0=4707},hasMoreTokens()Z{0=5177},isLetterOrDigitAhead()Z{0=4843},countTokens()I{0=4340},countTokens()I{0=5531},nextIsSep()Z{0=3129},hasMoreTokens()Z{0=4879},countTokens()I{0=4142},isLetterOrDigitAhead()Z{0=2297},hasMoreTokens()Z{0=2097},nextIsSep()Z{0=5752},hasMoreTokens()Z{0=3859},isLetterOrDigitAhead()Z{0=4617},hasMoreTokens()Z{0=5432},nextIsSep()Z{0=2297},nextToken()Ljava/lang/String;{0=5693},isLetterOrDigitAhead()Z{0=4904},countTokens()I{0=3746},isLetterOrDigitAhead()Z{0=5752},countTokens()I{0=3980},isLetterOrDigitAhead()Z{0=4825},nextToken()Ljava/lang/String;{0=4904},nextToken()Ljava/lang/String;{0=4199},isLetterOrDigitAhead()Z{0=2964},countTokens()I{0=3859},isLetterOrDigitAhead()Z{0=5892},hasMoreTokens()Z{0=2164},isLetterOrDigitAhead()Z{0=3129},countTokens()I{0=3710},hasMoreTokens()Z{0=5892},hasMoreTokens()Z{0=2097},hasMoreTokens()Z{0=2439},nextToken()Ljava/lang/String;{0=4707},countTokens()I{0=5177},countTokens()I{0=4142},hasMoreTokens()Z{0=5866},countTokens()I{0=5693},isLetterOrDigitAhead()Z{0=5412},countTokens()I{0=2439},isLetterOrDigitAhead()Z{0=5555},isLetterOrDigitAhead()Z{0=4757},nextIsSep()Z{0=4056},nextIsSep()Z{0=4825},countTokens()I{0=4879},@nextIsSep()Z{0=5693},isLetterOrDigitAhead()Z{0=5752},countTokens()I{0=3771},countTokens()I{0=5319},countTokens()I{0=5232},nextToken()Ljava/lang/String;{0=3404},nextToken()Ljava/lang/String;{0=2097},nextIsSep()Z{0=2297},isLetterOrDigitAhead()Z{0=4123},isLetterOrDigitAhead()Z{0=4904},hasMoreTokens()Z{0=4707},nextToken()Ljava/lang/String;{0=4114},countTokens()I{0=2731},nextIsSep()Z{0=3885},isLetterOrDigitAhead()Z{0=2964},isLetterOrDigitAhead()Z{0=5531},nextToken()Ljava/lang/String;{0=3558},@nextIsSep()Z{0=3002},nextIsSep()Z{0=4199},@nextIsSep()Z{0=3511},hasMoreTokens()Z{0=5488},nextToken()Ljava/lang/String;{0=4396},hasMoreTokens()Z{0=3583},hasMoreTokens()Z{0=3404},hasMoreTokens()Z{0=2317},hasMoreTokens()Z{0=3616},@nextToken()Ljava/lang/String;{0=2843},nextIsSep()Z{0=2097},nextToken()Ljava/lang/String;{0=3771},countTokens()I{0=3404},isLetterOrDigitAhead()Z{0=5412},nextIsSep()Z{0=2986},countTokens()I{0=2964}"];
	2 -> 1 [label="reset()V{0=3358},reset()V{0=4825},reset()V{0=4004},reset()V{0=3885},reset()V{0=3149},reset()V{0=5892},reset()V{0=2884},reset()V{0=2944},reset()V{0=2986},reset()V{0=3536},reset()V{0=5669},reset()V{0=3599},reset()V{0=2637},reset()V{0=4123},reset()V{0=3303},reset()V{0=2164},reset()V{0=5258},reset()V{0=4448},reset()V{0=5826},reset()V{0=5844},reset()V{0=4358},reset()V{0=3696},reset()V{0=5085},reset()V{0=4889},reset()V{0=3583},reset()V{0=5866},reset()V{0=3616},reset()V{0=4013},reset()V{0=2805},reset()V{0=5375},reset()V{0=2439},reset()V{0=5488},reset()V{0=5343},reset()V{0=5432},reset()V{0=2767},reset()V{0=4522},reset()V{0=3095},reset()V{0=4396}"];
	0 -> 3 [label="<init>(Ljava/lang/String;)V{0=3427, 1=109},<init>(Ljava/lang/String;)V{0=1834, 1=109},<init>(Ljava/lang/String;)V{0=1958, 1=109},<init>(Ljava/lang/String;)V{0=3075, 1=109},<init>(Ljava/lang/String;)V{0=2186, 1=109},<init>(Ljava/lang/String;)V{0=1848, 1=109},<init>(Ljava/lang/String;)V{0=5591, 1=109},<init>(Ljava/lang/String;)V{0=2784, 1=109},<init>(Ljava/lang/String;)V{0=1959, 1=109}"];
	3 -> 3 [label="@nextToken()Ljava/lang/String;{0=1834},reset()V{0=2186},isLetterOrDigitAhead()Z{0=1848},reset()V{0=5591},isLetterOrDigitAhead()Z{0=2186},hasMoreTokens()Z{0=2784},@nextIsSep()Z{0=1848},@nextIsSep()Z{0=1959},countTokens()I{0=3075},isLetterOrDigitAhead()Z{0=5591},reset()V{0=3427},hasMoreTokens()Z{0=5591},reset()V{0=1958},@nextIsSep()Z{0=1958},@nextToken()Ljava/lang/String;{0=3427},isLetterOrDigitAhead()Z{0=2784}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
	3 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,408: Unmerged models for type tutorial/NumberFormatStringTokenizer
[INFO ] 2019-09-24 15:53:15,418: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2582, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=2582},countTokens()I{0=2582},nextIsSep()Z{0=2582},nextIsSep()Z{0=2582},hasMoreTokens()Z{0=2582}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2582}"];
	2 -> 2 [label="countTokens()I{0=2582},isLetterOrDigitAhead()Z{0=2582},nextToken()Ljava/lang/String;{0=2582}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,418: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5375, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5375},reset()V{0=5375},isLetterOrDigitAhead()Z{0=5375},nextIsSep()Z{0=5375}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5375},nextToken()Ljava/lang/String;{0=5375}"];
	2 -> 1 [label="reset()V{0=5375}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,418: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3915, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3915},countTokens()I{0=3915},hasMoreTokens()Z{0=3915},hasMoreTokens()Z{0=3915}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,418: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2659, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2659},nextIsSep()Z{0=2659},nextIsSep()Z{0=2659}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,418: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4594, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4594},countTokens()I{0=4594},hasMoreTokens()Z{0=4594},nextIsSep()Z{0=4594},nextIsSep()Z{0=4594},countTokens()I{0=4594},countTokens()I{0=4594},isLetterOrDigitAhead()Z{0=4594}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4594}"];
	2 -> 2 [label="@nextIsSep()Z{0=4594},nextToken()Ljava/lang/String;{0=4594}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,418: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4861, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4861},hasMoreTokens()Z{0=4861},nextIsSep()Z{0=4861},countTokens()I{0=4861},reset()V{0=4861}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4861}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4861}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,418: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1959, 1=109}"];
	1 -> 1 [label="@nextIsSep()Z{0=1959}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,418: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3303, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3303},nextIsSep()Z{0=3303},hasMoreTokens()Z{0=3303},countTokens()I{0=3303},isLetterOrDigitAhead()Z{0=3303}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3303}"];
	2 -> 2 [label="nextIsSep()Z{0=3303},countTokens()I{0=3303},isLetterOrDigitAhead()Z{0=3303}"];
	2 -> 1 [label="reset()V{0=3303}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,418: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2695, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2695},isLetterOrDigitAhead()Z{0=2695},nextIsSep()Z{0=2695}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,419: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3129, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3129},isLetterOrDigitAhead()Z{0=3129},hasMoreTokens()Z{0=3129},countTokens()I{0=3129},isLetterOrDigitAhead()Z{0=3129}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3129}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3129},hasMoreTokens()Z{0=3129},nextIsSep()Z{0=3129}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,419: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5412, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5412},hasMoreTokens()Z{0=5412},nextIsSep()Z{0=5412},countTokens()I{0=5412},isLetterOrDigitAhead()Z{0=5412}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5412}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5412},isLetterOrDigitAhead()Z{0=5412},isLetterOrDigitAhead()Z{0=5412}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,419: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3002, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3002},nextIsSep()Z{0=3002},hasMoreTokens()Z{0=3002},countTokens()I{0=3002}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3002}"];
	2 -> 2 [label="@nextIsSep()Z{0=3002},nextToken()Ljava/lang/String;{0=3002},hasMoreTokens()Z{0=3002}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,419: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5319, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5319},nextIsSep()Z{0=5319},hasMoreTokens()Z{0=5319},countTokens()I{0=5319},isLetterOrDigitAhead()Z{0=5319}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5319}"];
	2 -> 2 [label="nextIsSep()Z{0=5319},countTokens()I{0=5319},countTokens()I{0=5319},hasMoreTokens()Z{0=5319},isLetterOrDigitAhead()Z{0=5319}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,419: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3075, 1=109}"];
	1 -> 1 [label="countTokens()I{0=3075}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,419: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4199, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=4199},countTokens()I{0=4199},isLetterOrDigitAhead()Z{0=4199},countTokens()I{0=4199},isLetterOrDigitAhead()Z{0=4199}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4199}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4199},hasMoreTokens()Z{0=4199},nextIsSep()Z{0=4199},nextToken()Ljava/lang/String;{0=4199},isLetterOrDigitAhead()Z{0=4199},countTokens()I{0=4199}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,419: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5258, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5258},nextIsSep()Z{0=5258},reset()V{0=5258},hasMoreTokens()Z{0=5258}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5258}"];
	2 -> 1 [label="reset()V{0=5258}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,420: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4073, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4073},hasMoreTokens()Z{0=4073},nextIsSep()Z{0=4073},countTokens()I{0=4073}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4073}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4073}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,420: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4879, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4879}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4879},nextIsSep()Z{0=4879},countTokens()I{0=4879}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,420: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5960, 1=1738}"];
	1 -> 1 [label="reset()V{0=5960},isLetterOrDigitAhead()Z{0=5960},hasMoreTokens()Z{0=5960},nextIsSep()Z{0=5960},nextIsSep()Z{0=5960},hasMoreTokens()Z{0=5960}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,420: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4114, 1=1738}"];
	1 -> 1 [label="reset()V{0=4114},hasMoreTokens()Z{0=4114}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4114}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4114}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,420: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2317, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2317},reset()V{0=2317},hasMoreTokens()Z{0=2317}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2317}"];
	2 -> 2 [label="countTokens()I{0=2317},hasMoreTokens()Z{0=2317},hasMoreTokens()Z{0=2317}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,420: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2542, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2542},isLetterOrDigitAhead()Z{0=2542},hasMoreTokens()Z{0=2542},isLetterOrDigitAhead()Z{0=2542},countTokens()I{0=2542}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2542}"];
	2 -> 2 [label="countTokens()I{0=2542},countTokens()I{0=2542}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,420: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5693, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5693},nextIsSep()Z{0=5693},hasMoreTokens()Z{0=5693},nextIsSep()Z{0=5693}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5693}"];
	2 -> 2 [label="countTokens()I{0=5693},nextToken()Ljava/lang/String;{0=5693},hasMoreTokens()Z{0=5693},@nextIsSep()Z{0=5693}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,420: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2297, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2297},isLetterOrDigitAhead()Z{0=2297},hasMoreTokens()Z{0=2297},countTokens()I{0=2297},isLetterOrDigitAhead()Z{0=2297}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2297}"];
	2 -> 2 [label="nextIsSep()Z{0=2297},isLetterOrDigitAhead()Z{0=2297},nextIsSep()Z{0=2297}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,421: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2186, 1=109}"];
	1 -> 1 [label="reset()V{0=2186},isLetterOrDigitAhead()Z{0=2186}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,421: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3964, 1=1738}"];
	1 -> 1 [label="reset()V{0=3964},isLetterOrDigitAhead()Z{0=3964},countTokens()I{0=3964},nextIsSep()Z{0=3964},nextIsSep()Z{0=3964},hasMoreTokens()Z{0=3964},countTokens()I{0=3964}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3964}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,421: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3859, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3859},isLetterOrDigitAhead()Z{0=3859},countTokens()I{0=3859},countTokens()I{0=3859},isLetterOrDigitAhead()Z{0=3859}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3859}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3859},nextIsSep()Z{0=3859},hasMoreTokens()Z{0=3859},nextToken()Ljava/lang/String;{0=3859},@nextToken()Ljava/lang/String;{0=3859},countTokens()I{0=3859}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,421: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2843, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2843},isLetterOrDigitAhead()Z{0=2843},hasMoreTokens()Z{0=2843},countTokens()I{0=2843},isLetterOrDigitAhead()Z{0=2843}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2843}"];
	2 -> 2 [label="countTokens()I{0=2843},nextToken()Ljava/lang/String;{0=2843},@nextToken()Ljava/lang/String;{0=2843}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,421: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5892, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5892},hasMoreTokens()Z{0=5892},nextIsSep()Z{0=5892},countTokens()I{0=5892}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5892}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5892},nextIsSep()Z{0=5892},isLetterOrDigitAhead()Z{0=5892},isLetterOrDigitAhead()Z{0=5892},nextIsSep()Z{0=5892},hasMoreTokens()Z{0=5892},isLetterOrDigitAhead()Z{0=5892}"];
	2 -> 1 [label="reset()V{0=5892}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,421: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3149, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=3149},countTokens()I{0=3149},nextIsSep()Z{0=3149},hasMoreTokens()Z{0=3149},nextIsSep()Z{0=3149},reset()V{0=3149}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3149}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3149}"];
	2 -> 1 [label="reset()V{0=3149}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,421: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3679, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3679},isLetterOrDigitAhead()Z{0=3679},countTokens()I{0=3679},isLetterOrDigitAhead()Z{0=3679},hasMoreTokens()Z{0=3679}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3679}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3679}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,421: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3809, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3809},countTokens()I{0=3809},countTokens()I{0=3809},countTokens()I{0=3809},reset()V{0=3809},nextIsSep()Z{0=3809},nextIsSep()Z{0=3809},nextIsSep()Z{0=3809},hasMoreTokens()Z{0=3809}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,422: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5232, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5232},hasMoreTokens()Z{0=5232},hasMoreTokens()Z{0=5232},isLetterOrDigitAhead()Z{0=5232},isLetterOrDigitAhead()Z{0=5232},reset()V{0=5232}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5232}"];
	2 -> 2 [label="countTokens()I{0=5232}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,422: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3830, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3830},countTokens()I{0=3830},reset()V{0=3830},nextIsSep()Z{0=3830},hasMoreTokens()Z{0=3830},nextIsSep()Z{0=3830},nextIsSep()Z{0=3830}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3830}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3830}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,422: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4522, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=4522},hasMoreTokens()Z{0=4522},reset()V{0=4522},isLetterOrDigitAhead()Z{0=4522},nextIsSep()Z{0=4522},nextIsSep()Z{0=4522},hasMoreTokens()Z{0=4522},countTokens()I{0=4522},isLetterOrDigitAhead()Z{0=4522}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4522}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4522}"];
	2 -> 1 [label="reset()V{0=4522}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,422: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5826, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5826},isLetterOrDigitAhead()Z{0=5826},hasMoreTokens()Z{0=5826},reset()V{0=5826},countTokens()I{0=5826},isLetterOrDigitAhead()Z{0=5826}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5826}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5826},nextIsSep()Z{0=5826}"];
	2 -> 1 [label="reset()V{0=5826}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,422: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2439, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2439},countTokens()I{0=2439},isLetterOrDigitAhead()Z{0=2439},countTokens()I{0=2439},isLetterOrDigitAhead()Z{0=2439}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2439}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=2439},hasMoreTokens()Z{0=2439},nextIsSep()Z{0=2439},countTokens()I{0=2439}"];
	2 -> 1 [label="reset()V{0=2439}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,422: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5468, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5468},countTokens()I{0=5468},nextIsSep()Z{0=5468},nextIsSep()Z{0=5468},hasMoreTokens()Z{0=5468}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5468}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5468},countTokens()I{0=5468},isLetterOrDigitAhead()Z{0=5468}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,422: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2256, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2256},nextIsSep()Z{0=2256},nextIsSep()Z{0=2256},hasMoreTokens()Z{0=2256},countTokens()I{0=2256},countTokens()I{0=2256}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2256}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,423: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4707, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4707},nextIsSep()Z{0=4707},hasMoreTokens()Z{0=4707},nextIsSep()Z{0=4707}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4707}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4707},hasMoreTokens()Z{0=4707},isLetterOrDigitAhead()Z{0=4707},hasMoreTokens()Z{0=4707}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,423: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2097, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2097},isLetterOrDigitAhead()Z{0=2097},hasMoreTokens()Z{0=2097},countTokens()I{0=2097},isLetterOrDigitAhead()Z{0=2097}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2097}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2097},nextIsSep()Z{0=2097},nextToken()Ljava/lang/String;{0=2097},hasMoreTokens()Z{0=2097}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,423: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4825, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4825},countTokens()I{0=4825},nextIsSep()Z{0=4825},hasMoreTokens()Z{0=4825},nextIsSep()Z{0=4825}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4825}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4825},nextIsSep()Z{0=4825}"];
	2 -> 1 [label="reset()V{0=4825}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,423: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5120, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5120},nextIsSep()Z{0=5120},hasMoreTokens()Z{0=5120},nextIsSep()Z{0=5120}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5120}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=5120}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,423: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3696, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3696},reset()V{0=3696}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3696}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3696}"];
	2 -> 1 [label="reset()V{0=3696}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,423: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2805, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2805},isLetterOrDigitAhead()Z{0=2805},countTokens()I{0=2805},isLetterOrDigitAhead()Z{0=2805},countTokens()I{0=2805},countTokens()I{0=2805},hasMoreTokens()Z{0=2805}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2805}"];
	2 -> 2 [label="countTokens()I{0=2805},nextIsSep()Z{0=2805},hasMoreTokens()Z{0=2805}"];
	2 -> 1 [label="reset()V{0=2805}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,423: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3558, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3558},nextIsSep()Z{0=3558},hasMoreTokens()Z{0=3558},nextIsSep()Z{0=3558},isLetterOrDigitAhead()Z{0=3558}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3558}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=3558}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,424: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3599, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3599},isLetterOrDigitAhead()Z{0=3599},countTokens()I{0=3599},isLetterOrDigitAhead()Z{0=3599},reset()V{0=3599},countTokens()I{0=3599},isLetterOrDigitAhead()Z{0=3599}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3599}"];
	2 -> 1 [label="reset()V{0=3599}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,424: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5531, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5531},nextIsSep()Z{0=5531},nextIsSep()Z{0=5531},hasMoreTokens()Z{0=5531},countTokens()I{0=5531},reset()V{0=5531},countTokens()I{0=5531},countTokens()I{0=5531}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5531}"];
	2 -> 2 [label="countTokens()I{0=5531},isLetterOrDigitAhead()Z{0=5531},countTokens()I{0=5531}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,424: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4056, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4056}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4056},nextIsSep()Z{0=4056}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,424: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3885, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3885}"];
	2 -> 2 [label="nextIsSep()Z{0=3885}"];
	2 -> 1 [label="reset()V{0=3885}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=3885}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,424: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5014, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5014},isLetterOrDigitAhead()Z{0=5014},countTokens()I{0=5014},isLetterOrDigitAhead()Z{0=5014},hasMoreTokens()Z{0=5014}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5014}"];
	2 -> 2 [label="countTokens()I{0=5014},hasMoreTokens()Z{0=5014},nextToken()Ljava/lang/String;{0=5014}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,424: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3176, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3176},isLetterOrDigitAhead()Z{0=3176},hasMoreTokens()Z{0=3176},countTokens()I{0=3176},isLetterOrDigitAhead()Z{0=3176}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3176}"];
	2 -> 2 [label="nextIsSep()Z{0=3176},nextIsSep()Z{0=3176}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,424: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5555, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5555},hasMoreTokens()Z{0=5555},countTokens()I{0=5555},hasMoreTokens()Z{0=5555},nextIsSep()Z{0=5555},countTokens()I{0=5555},countTokens()I{0=5555}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5555}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5555}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,424: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3427, 1=109}"];
	1 -> 1 [label="reset()V{0=3427},@nextToken()Ljava/lang/String;{0=3427}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,425: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5626, 1=1738}"];
	1 -> 1 [label="reset()V{0=5626},hasMoreTokens()Z{0=5626}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5626}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=5626},isLetterOrDigitAhead()Z{0=5626}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,425: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5933, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5933},countTokens()I{0=5933},hasMoreTokens()Z{0=5933},nextIsSep()Z{0=5933},countTokens()I{0=5933}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5933}"];
	2 -> 2 [label="nextIsSep()Z{0=5933},nextIsSep()Z{0=5933}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,425: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3746, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3746},isLetterOrDigitAhead()Z{0=3746},countTokens()I{0=3746},countTokens()I{0=3746},isLetterOrDigitAhead()Z{0=3746}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3746}"];
	2 -> 2 [label="nextIsSep()Z{0=3746},hasMoreTokens()Z{0=3746},nextToken()Ljava/lang/String;{0=3746},countTokens()I{0=3746},countTokens()I{0=3746}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,425: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5343, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5343},countTokens()I{0=5343},isLetterOrDigitAhead()Z{0=5343},countTokens()I{0=5343},hasMoreTokens()Z{0=5343},countTokens()I{0=5343},isLetterOrDigitAhead()Z{0=5343}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5343},nextToken()Ljava/lang/String;{0=5343}"];
	2 -> 2 [label="countTokens()I{0=5343},nextIsSep()Z{0=5343},hasMoreTokens()Z{0=5343}"];
	2 -> 1 [label="reset()V{0=5343}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,425: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4376, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4376},nextIsSep()Z{0=4376},nextIsSep()Z{0=4376},hasMoreTokens()Z{0=4376}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4376}"];
	2 -> 2 [label="countTokens()I{0=4376},nextIsSep()Z{0=4376},hasMoreTokens()Z{0=4376},hasMoreTokens()Z{0=4376}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,425: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5651, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5651},hasMoreTokens()Z{0=5651},nextIsSep()Z{0=5651},countTokens()I{0=5651}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5651}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5651},nextIsSep()Z{0=5651},isLetterOrDigitAhead()Z{0=5651}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,425: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4123, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4123},nextIsSep()Z{0=4123},hasMoreTokens()Z{0=4123},countTokens()I{0=4123}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4123}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4123},hasMoreTokens()Z{0=4123},isLetterOrDigitAhead()Z{0=4123}"];
	2 -> 1 [label="reset()V{0=4123}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,426: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5844, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5844},countTokens()I{0=5844},isLetterOrDigitAhead()Z{0=5844},nextIsSep()Z{0=5844},countTokens()I{0=5844},isLetterOrDigitAhead()Z{0=5844}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5844}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5844},nextIsSep()Z{0=5844},countTokens()I{0=5844}"];
	2 -> 1 [label="reset()V{0=5844}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,426: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5669, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5669},hasMoreTokens()Z{0=5669},countTokens()I{0=5669}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5669},nextToken()Ljava/lang/String;{0=5669}"];
	2 -> 1 [label="reset()V{0=5669}"];
	2 -> 2 [label="countTokens()I{0=5669}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,426: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2964, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2964},hasMoreTokens()Z{0=2964},nextIsSep()Z{0=2964},countTokens()I{0=2964},isLetterOrDigitAhead()Z{0=2964}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2964}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2964},nextIsSep()Z{0=2964},isLetterOrDigitAhead()Z{0=2964},countTokens()I{0=2964}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,426: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3404, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3404},nextIsSep()Z{0=3404},hasMoreTokens()Z{0=3404},countTokens()I{0=3404}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3404}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3404},countTokens()I{0=3404},nextToken()Ljava/lang/String;{0=3404},hasMoreTokens()Z{0=3404},countTokens()I{0=3404}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,426: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4448, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4448},isLetterOrDigitAhead()Z{0=4448},hasMoreTokens()Z{0=4448},countTokens()I{0=4448},isLetterOrDigitAhead()Z{0=4448},nextIsSep()Z{0=4448},nextIsSep()Z{0=4448},nextIsSep()Z{0=4448},hasMoreTokens()Z{0=4448}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4448}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4448}"];
	2 -> 1 [label="reset()V{0=4448}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,426: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5432, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=5432},isLetterOrDigitAhead()Z{0=5432},countTokens()I{0=5432},countTokens()I{0=5432},isLetterOrDigitAhead()Z{0=5432}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5432}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5432},nextIsSep()Z{0=5432},hasMoreTokens()Z{0=5432}"];
	2 -> 1 [label="reset()V{0=5432}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,426: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5885, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5885},hasMoreTokens()Z{0=5885},nextIsSep()Z{0=5885},reset()V{0=5885}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,427: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2682, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2682},hasMoreTokens()Z{0=2682},nextIsSep()Z{0=2682}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2682}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=2682}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,427: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2637, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2637},countTokens()I{0=2637},isLetterOrDigitAhead()Z{0=2637},hasMoreTokens()Z{0=2637},isLetterOrDigitAhead()Z{0=2637},countTokens()I{0=2637}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2637}"];
	2 -> 2 [label="countTokens()I{0=2637},countTokens()I{0=2637}"];
	2 -> 1 [label="reset()V{0=2637}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,427: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4544, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4544},isLetterOrDigitAhead()Z{0=4544},reset()V{0=4544},hasMoreTokens()Z{0=4544},countTokens()I{0=4544},isLetterOrDigitAhead()Z{0=4544},isLetterOrDigitAhead()Z{0=4544}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4544}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,427: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2829, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2829},isLetterOrDigitAhead()Z{0=2829},hasMoreTokens()Z{0=2829},hasMoreTokens()Z{0=2829},isLetterOrDigitAhead()Z{0=2829}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2829}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,427: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4930, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4930},nextIsSep()Z{0=4930},nextIsSep()Z{0=4930},hasMoreTokens()Z{0=4930}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4930}"];
	2 -> 2 [label="@nextIsSep()Z{0=4930},nextToken()Ljava/lang/String;{0=4930}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,427: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5177, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5177},hasMoreTokens()Z{0=5177},reset()V{0=5177}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5177}"];
	2 -> 2 [label="nextIsSep()Z{0=5177},isLetterOrDigitAhead()Z{0=5177},countTokens()I{0=5177},hasMoreTokens()Z{0=5177}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,427: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4512, 1=2437}"];
	1 -> 1 [label="reset()V{0=4512},reset()V{0=4512},countTokens()I{0=4512},nextIsSep()Z{0=4512}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,427: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2784, 1=109}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2784},isLetterOrDigitAhead()Z{0=2784}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,428: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3536, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3536},reset()V{0=3536},hasMoreTokens()Z{0=3536},nextIsSep()Z{0=3536},countTokens()I{0=3536}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3536}"];
	2 -> 1 [label="reset()V{0=3536}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,428: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4340, 1=2437}"];
	1 -> 1 [label="reset()V{0=4340},nextIsSep()Z{0=4340}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4340}"];
	2 -> 2 [label="countTokens()I{0=4340}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,428: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4757, 1=1738}"];
	1 -> 1 [label="reset()V{0=4757},hasMoreTokens()Z{0=4757},nextIsSep()Z{0=4757}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4757}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4757},nextToken()Ljava/lang/String;{0=4757},isLetterOrDigitAhead()Z{0=4757}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,428: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4488, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4488},isLetterOrDigitAhead()Z{0=4488},countTokens()I{0=4488},reset()V{0=4488},reset()V{0=4488},hasMoreTokens()Z{0=4488}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,428: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5085, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5085},hasMoreTokens()Z{0=5085},nextIsSep()Z{0=5085},hasMoreTokens()Z{0=5085},nextIsSep()Z{0=5085},countTokens()I{0=5085}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5085}"];
	2 -> 1 [label="reset()V{0=5085}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,428: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4889, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4889},hasMoreTokens()Z{0=4889},nextIsSep()Z{0=4889},countTokens()I{0=4889},isLetterOrDigitAhead()Z{0=4889},reset()V{0=4889}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4889}"];
	2 -> 1 [label="reset()V{0=4889}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,428: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5488, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5488},nextIsSep()Z{0=5488},hasMoreTokens()Z{0=5488},isLetterOrDigitAhead()Z{0=5488},isLetterOrDigitAhead()Z{0=5488}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5488}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5488}"];
	2 -> 1 [label="reset()V{0=5488}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,428: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2884, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=2884},countTokens()I{0=2884},nextIsSep()Z{0=2884},hasMoreTokens()Z{0=2884},nextIsSep()Z{0=2884}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2884}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2884},countTokens()I{0=2884}"];
	2 -> 1 [label="reset()V{0=2884}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,429: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3782, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=3782},hasMoreTokens()Z{0=3782},nextIsSep()Z{0=3782},countTokens()I{0=3782},isLetterOrDigitAhead()Z{0=3782},nextIsSep()Z{0=3782}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,429: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5637, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5637},hasMoreTokens()Z{0=5637},isLetterOrDigitAhead()Z{0=5637},nextIsSep()Z{0=5637},isLetterOrDigitAhead()Z{0=5637}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5637}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,429: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3511, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3511},nextIsSep()Z{0=3511},hasMoreTokens()Z{0=3511},nextIsSep()Z{0=3511},isLetterOrDigitAhead()Z{0=3511}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3511}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=3511},@nextIsSep()Z{0=3511},nextIsSep()Z{0=3511},isLetterOrDigitAhead()Z{0=3511},nextToken()Ljava/lang/String;{0=3511},nextIsSep()Z{0=3511}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,429: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4064, 1=2437}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4064}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,429: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2612, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2612},reset()V{0=2612}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2612}"];
	2 -> 2 [label="countTokens()I{0=2612},countTokens()I{0=2612}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,429: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4358, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4358},nextIsSep()Z{0=4358},hasMoreTokens()Z{0=4358},countTokens()I{0=4358},countTokens()I{0=4358},isLetterOrDigitAhead()Z{0=4358}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4358}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4358}"];
	2 -> 1 [label="reset()V{0=4358}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,429: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3095, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3095},countTokens()I{0=3095},isLetterOrDigitAhead()Z{0=3095},countTokens()I{0=3095},isLetterOrDigitAhead()Z{0=3095},isLetterOrDigitAhead()Z{0=3095},countTokens()I{0=3095}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3095}"];
	2 -> 1 [label="reset()V{0=3095}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,429: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3980, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3980},nextIsSep()Z{0=3980},nextIsSep()Z{0=3980},countTokens()I{0=3980},countTokens()I{0=3980},isLetterOrDigitAhead()Z{0=3980},hasMoreTokens()Z{0=3980},nextIsSep()Z{0=3980},nextIsSep()Z{0=3980}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3980}"];
	2 -> 2 [label="countTokens()I{0=3980}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,430: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3165, 1=1738}"];
	1 -> 1 [label="reset()V{0=3165},hasMoreTokens()Z{0=3165},nextIsSep()Z{0=3165}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3165}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=3165}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,430: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2767, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2767},hasMoreTokens()Z{0=2767},nextIsSep()Z{0=2767},hasMoreTokens()Z{0=2767},countTokens()I{0=2767}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2767},nextToken()Ljava/lang/String;{0=2767}"];
	2 -> 1 [label="reset()V{0=2767}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,430: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3726, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3726},isLetterOrDigitAhead()Z{0=3726},countTokens()I{0=3726},countTokens()I{0=3726},isLetterOrDigitAhead()Z{0=3726}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3726}"];
	2 -> 2 [label="countTokens()I{0=3726},nextIsSep()Z{0=3726},hasMoreTokens()Z{0=3726}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,430: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3575, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=3575},nextIsSep()Z{0=3575},reset()V{0=3575}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3575}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,430: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3224, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3224},countTokens()I{0=3224},reset()V{0=3224},hasMoreTokens()Z{0=3224},nextIsSep()Z{0=3224},countTokens()I{0=3224},countTokens()I{0=3224},isLetterOrDigitAhead()Z{0=3224},nextIsSep()Z{0=3224},hasMoreTokens()Z{0=3224}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,430: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2944, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2944},nextIsSep()Z{0=2944},nextIsSep()Z{0=2944},hasMoreTokens()Z{0=2944}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2944}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=2944},hasMoreTokens()Z{0=2944}"];
	2 -> 1 [label="reset()V{0=2944}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,430: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2702, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2702},nextIsSep()Z{0=2702},nextIsSep()Z{0=2702},hasMoreTokens()Z{0=2702},isLetterOrDigitAhead()Z{0=2702}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2702}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2702}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,430: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2277, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2277},isLetterOrDigitAhead()Z{0=2277},countTokens()I{0=2277},isLetterOrDigitAhead()Z{0=2277},hasMoreTokens()Z{0=2277}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2277}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2277},nextIsSep()Z{0=2277},hasMoreTokens()Z{0=2277}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,431: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4843, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4843},nextIsSep()Z{0=4843},nextIsSep()Z{0=4843},hasMoreTokens()Z{0=4843}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4843}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4843},hasMoreTokens()Z{0=4843},isLetterOrDigitAhead()Z{0=4843}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,431: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4004, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4004},nextToken()Ljava/lang/String;{0=4004}"];
	2 -> 2 [label="nextIsSep()Z{0=4004}"];
	2 -> 1 [label="reset()V{0=4004}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,431: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4013, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4013},nextIsSep()Z{0=4013},nextIsSep()Z{0=4013},hasMoreTokens()Z{0=4013},countTokens()I{0=4013}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4013}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4013}"];
	2 -> 1 [label="reset()V{0=4013}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,431: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3358, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3358},isLetterOrDigitAhead()Z{0=3358},countTokens()I{0=3358},hasMoreTokens()Z{0=3358},countTokens()I{0=3358},isLetterOrDigitAhead()Z{0=3358}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3358}"];
	2 -> 2 [label="nextIsSep()Z{0=3358}"];
	2 -> 1 [label="reset()V{0=3358}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,431: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3710, 1=1738}"];
	1 -> 1 [label="reset()V{0=3710},hasMoreTokens()Z{0=3710},nextIsSep()Z{0=3710}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3710}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3710},isLetterOrDigitAhead()Z{0=3710},countTokens()I{0=3710}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,431: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5591, 1=109}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5591},reset()V{0=5591},hasMoreTokens()Z{0=5591}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,431: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2986, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2986},nextIsSep()Z{0=2986},nextIsSep()Z{0=2986},hasMoreTokens()Z{0=2986},reset()V{0=2986}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2986}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=2986},nextIsSep()Z{0=2986}"];
	2 -> 1 [label="reset()V{0=2986}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,432: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4617, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=4617},countTokens()I{0=4617},nextIsSep()Z{0=4617},nextIsSep()Z{0=4617},hasMoreTokens()Z{0=4617}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4617}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=4617},isLetterOrDigitAhead()Z{0=4617},nextToken()Ljava/lang/String;{0=4617},nextIsSep()Z{0=4617}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,432: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4904, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4904},hasMoreTokens()Z{0=4904},nextIsSep()Z{0=4904},countTokens()I{0=4904},isLetterOrDigitAhead()Z{0=4904}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4904}"];
	2 -> 2 [label="hasMoreTokens()Z{0=4904},nextToken()Ljava/lang/String;{0=4904},isLetterOrDigitAhead()Z{0=4904},nextIsSep()Z{0=4904},isLetterOrDigitAhead()Z{0=4904}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,432: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5393, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=5393},hasMoreTokens()Z{0=5393},nextIsSep()Z{0=5393},countTokens()I{0=5393},hasMoreTokens()Z{0=5393},isLetterOrDigitAhead()Z{0=5393},reset()V{0=5393}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5393}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=5393}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,432: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2164, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2164},hasMoreTokens()Z{0=2164},nextIsSep()Z{0=2164},nextIsSep()Z{0=2164},countTokens()I{0=2164},reset()V{0=2164}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2164}"];
	2 -> 2 [label="hasMoreTokens()Z{0=2164}"];
	2 -> 1 [label="reset()V{0=2164}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,432: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3616, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3616},countTokens()I{0=3616},nextIsSep()Z{0=3616},nextIsSep()Z{0=3616},hasMoreTokens()Z{0=3616},nextIsSep()Z{0=3616}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3616}"];
	2 -> 2 [label="hasMoreTokens()Z{0=3616}"];
	2 -> 1 [label="reset()V{0=3616}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,432: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2902, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2902},nextIsSep()Z{0=2902},hasMoreTokens()Z{0=2902},countTokens()I{0=2902},isLetterOrDigitAhead()Z{0=2902}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2902}"];
	2 -> 2 [label="nextIsSep()Z{0=2902},nextToken()Ljava/lang/String;{0=2902},countTokens()I{0=2902},isLetterOrDigitAhead()Z{0=2902}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,432: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3583, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3583},nextIsSep()Z{0=3583},hasMoreTokens()Z{0=3583},countTokens()I{0=3583}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3583}"];
	2 -> 2 [label="countTokens()I{0=3583},hasMoreTokens()Z{0=3583}"];
	2 -> 1 [label="reset()V{0=3583}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,433: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3771, 1=1738}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3771}"];
	2 -> 2 [label="countTokens()I{0=3771},nextToken()Ljava/lang/String;{0=3771},nextIsSep()Z{0=3771}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,433: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1958, 1=109}"];
	1 -> 1 [label="reset()V{0=1958},@nextIsSep()Z{0=1958}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,433: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1848, 1=109}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=1848},@nextIsSep()Z{0=1848}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,433: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2417, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=2417},nextIsSep()Z{0=2417},hasMoreTokens()Z{0=2417},countTokens()I{0=2417}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2417}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=2417},hasMoreTokens()Z{0=2417},@nextToken()Ljava/lang/String;{0=2417}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,433: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2731, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=2731},isLetterOrDigitAhead()Z{0=2731},countTokens()I{0=2731},isLetterOrDigitAhead()Z{0=2731},hasMoreTokens()Z{0=2731}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=2731}"];
	2 -> 2 [label="countTokens()I{0=2731},countTokens()I{0=2731},countTokens()I{0=2731},hasMoreTokens()Z{0=2731}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,433: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5752, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5752},countTokens()I{0=5752},nextIsSep()Z{0=5752},hasMoreTokens()Z{0=5752},nextIsSep()Z{0=5752}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5752}"];
	2 -> 2 [label="isLetterOrDigitAhead()Z{0=5752},nextToken()Ljava/lang/String;{0=5752},hasMoreTokens()Z{0=5752},nextIsSep()Z{0=5752},countTokens()I{0=5752},isLetterOrDigitAhead()Z{0=5752},nextIsSep()Z{0=5752}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,433: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4142, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=4142},isLetterOrDigitAhead()Z{0=4142},isLetterOrDigitAhead()Z{0=4142},countTokens()I{0=4142},hasMoreTokens()Z{0=4142}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4142}"];
	2 -> 2 [label="countTokens()I{0=4142},countTokens()I{0=4142},countTokens()I{0=4142},isLetterOrDigitAhead()Z{0=4142}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,433: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=4396, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=4396},nextIsSep()Z{0=4396},hasMoreTokens()Z{0=4396},countTokens()I{0=4396}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4396},nextToken()Ljava/lang/String;{0=4396}"];
	2 -> 2 [label="nextToken()Ljava/lang/String;{0=4396},hasMoreTokens()Z{0=4396},nextToken()Ljava/lang/String;{0=4396}"];
	2 -> 1 [label="reset()V{0=4396}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,434: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5452, 1=1738}"];
	1 -> 1 [label="isLetterOrDigitAhead()Z{0=5452},countTokens()I{0=5452},nextIsSep()Z{0=5452},hasMoreTokens()Z{0=5452},countTokens()I{0=5452},isLetterOrDigitAhead()Z{0=5452}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5452}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,434: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3493, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3493},hasMoreTokens()Z{0=3493},nextIsSep()Z{0=3493},countTokens()I{0=3493},isLetterOrDigitAhead()Z{0=3493}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=3493}"];
	2 -> 2 [label="@nextToken()Ljava/lang/String;{0=3493},nextToken()Ljava/lang/String;{0=3493}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,434: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2272, 1=1738}"];
	1 -> 1 [label="reset()V{0=2272},reset()V{0=2272},hasMoreTokens()Z{0=2272}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,434: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=1834, 1=109}"];
	1 -> 1 [label="@nextToken()Ljava/lang/String;{0=1834}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,434: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=2753, 1=1738}"];
	1 -> 1 [label="hasMoreTokens()Z{0=2753},hasMoreTokens()Z{0=2753},countTokens()I{0=2753},isLetterOrDigitAhead()Z{0=2753},countTokens()I{0=2753},isLetterOrDigitAhead()Z{0=2753}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,434: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3127, 1=1961}"];
	1 -> 1 [label="reset()V{0=3127}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,434: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=3284, 1=1738}"];
	1 -> 1 [label="nextIsSep()Z{0=3284},hasMoreTokens()Z{0=3284},countTokens()I{0=3284},hasMoreTokens()Z{0=3284},nextIsSep()Z{0=3284},nextIsSep()Z{0=3284},nextIsSep()Z{0=3284},countTokens()I{0=3284},countTokens()I{0=3284}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,434: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5866, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=5866},nextIsSep()Z{0=5866},hasMoreTokens()Z{0=5866},nextIsSep()Z{0=5866},reset()V{0=5866},hasMoreTokens()Z{0=5866}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=5866},nextToken()Ljava/lang/String;{0=5866}"];
	2 -> 2 [label="hasMoreTokens()Z{0=5866}"];
	2 -> 1 [label="reset()V{0=5866}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,451: Merged model for type tutorial/NumberFormatStringTokenizer
[INFO ] 2019-09-24 15:53:15,454: digraph automaton {
	page="9,11";
	size="9,11";
	0 -> 1 [label="<init>(Ljava/lang/String;)V{0=5826, 1=1738},<init>(Ljava/lang/String;)V{0=4064, 1=2437},<init>(Ljava/lang/String;)V{0=5120, 1=1738},<init>(Ljava/lang/String;)V{0=5555, 1=1738},<init>(Ljava/lang/String;)V{0=5651, 1=1738},<init>(Ljava/lang/String;)V{0=3885, 1=1738},<init>(Ljava/lang/String;)V{0=4879, 1=1738},<init>(Ljava/lang/String;)V{0=4594, 1=1738},<init>(Ljava/lang/String;)V{0=4843, 1=1738},<init>(Ljava/lang/String;)V{0=4707, 1=1738},<init>(Ljava/lang/String;)V{0=3583, 1=1738},<init>(Ljava/lang/String;)V{0=5488, 1=1738},<init>(Ljava/lang/String;)V{0=3284, 1=1738},<init>(Ljava/lang/String;)V{0=3616, 1=1738},<init>(Ljava/lang/String;)V{0=3696, 1=1738},<init>(Ljava/lang/String;)V{0=5085, 1=1738},<init>(Ljava/lang/String;)V{0=3536, 1=1738},<init>(Ljava/lang/String;)V{0=3771, 1=1738},<init>(Ljava/lang/String;)V{0=4617, 1=1738},<init>(Ljava/lang/String;)V{0=4930, 1=1738},<init>(Ljava/lang/String;)V{0=4889, 1=1738},<init>(Ljava/lang/String;)V{0=5319, 1=1738},<init>(Ljava/lang/String;)V{0=5960, 1=1738},<init>(Ljava/lang/String;)V{0=3809, 1=1738},<init>(Ljava/lang/String;)V{0=2612, 1=1738},<init>(Ljava/lang/String;)V{0=2767, 1=1738},<init>(Ljava/lang/String;)V{0=3404, 1=1738},<init>(Ljava/lang/String;)V{0=2582, 1=1738},<init>(Ljava/lang/String;)V{0=3303, 1=1738},<init>(Ljava/lang/String;)V{0=3129, 1=1738},<init>(Ljava/lang/String;)V{0=3149, 1=1738},<init>(Ljava/lang/String;)V{0=4522, 1=1738},<init>(Ljava/lang/String;)V{0=5232, 1=1738},<init>(Ljava/lang/String;)V{0=2277, 1=1738},<init>(Ljava/lang/String;)V{0=3095, 1=1738},<init>(Ljava/lang/String;)V{0=5844, 1=1738},<init>(Ljava/lang/String;)V{0=3165, 1=1738},<init>(Ljava/lang/String;)V{0=5933, 1=1738},<init>(Ljava/lang/String;)V{0=4114, 1=1738},<init>(Ljava/lang/String;)V{0=2317, 1=1738},<init>(Ljava/lang/String;)V{0=3726, 1=1738},<init>(Ljava/lang/String;)V{0=3859, 1=1738},<init>(Ljava/lang/String;)V{0=2753, 1=1738},<init>(Ljava/lang/String;)V{0=2695, 1=1738},<init>(Ljava/lang/String;)V{0=5432, 1=1738},<init>(Ljava/lang/String;)V{0=4358, 1=1738},<init>(Ljava/lang/String;)V{0=4013, 1=1738},<init>(Ljava/lang/String;)V{0=5866, 1=1738},<init>(Ljava/lang/String;)V{0=3980, 1=1738},<init>(Ljava/lang/String;)V{0=5468, 1=1738},<init>(Ljava/lang/String;)V{0=3746, 1=1738},<init>(Ljava/lang/String;)V{0=2164, 1=1738},<init>(Ljava/lang/String;)V{0=3599, 1=1738},<init>(Ljava/lang/String;)V{0=3558, 1=1738},<init>(Ljava/lang/String;)V{0=4056, 1=1738},<init>(Ljava/lang/String;)V{0=3915, 1=1738},<init>(Ljava/lang/String;)V{0=3679, 1=1738},<init>(Ljava/lang/String;)V{0=2439, 1=1738},<init>(Ljava/lang/String;)V{0=5452, 1=1738},<init>(Ljava/lang/String;)V{0=5693, 1=1738},<init>(Ljava/lang/String;)V{0=3358, 1=1738},<init>(Ljava/lang/String;)V{0=4396, 1=1738},<init>(Ljava/lang/String;)V{0=5531, 1=1738},<init>(Ljava/lang/String;)V{0=2805, 1=1738},<init>(Ljava/lang/String;)V{0=5626, 1=1738},<init>(Ljava/lang/String;)V{0=4340, 1=2437},<init>(Ljava/lang/String;)V{0=3176, 1=1738},<init>(Ljava/lang/String;)V{0=2702, 1=1738},<init>(Ljava/lang/String;)V{0=4757, 1=1738},<init>(Ljava/lang/String;)V{0=4073, 1=1738},<init>(Ljava/lang/String;)V{0=4004, 1=1738},<init>(Ljava/lang/String;)V{0=4448, 1=1738},<init>(Ljava/lang/String;)V{0=3493, 1=1738},<init>(Ljava/lang/String;)V{0=2902, 1=1738},<init>(Ljava/lang/String;)V{0=2097, 1=1738},<init>(Ljava/lang/String;)V{0=2417, 1=1738},<init>(Ljava/lang/String;)V{0=4825, 1=1738},<init>(Ljava/lang/String;)V{0=2986, 1=1738},<init>(Ljava/lang/String;)V{0=2637, 1=1738},<init>(Ljava/lang/String;)V{0=4123, 1=1738},<init>(Ljava/lang/String;)V{0=2542, 1=1738},<init>(Ljava/lang/String;)V{0=2884, 1=1738},<init>(Ljava/lang/String;)V{0=5885, 1=1738},<init>(Ljava/lang/String;)V{0=3127, 1=1961},<init>(Ljava/lang/String;)V{0=4512, 1=2437},<init>(Ljava/lang/String;)V{0=2829, 1=1738},<init>(Ljava/lang/String;)V{0=2682, 1=1738},<init>(Ljava/lang/String;)V{0=2731, 1=1738},<init>(Ljava/lang/String;)V{0=4488, 1=1738},<init>(Ljava/lang/String;)V{0=5892, 1=1738},<init>(Ljava/lang/String;)V{0=2256, 1=1738},<init>(Ljava/lang/String;)V{0=5412, 1=1738},<init>(Ljava/lang/String;)V{0=2843, 1=1738},<init>(Ljava/lang/String;)V{0=4544, 1=1738},<init>(Ljava/lang/String;)V{0=3575, 1=1738},<init>(Ljava/lang/String;)V{0=4861, 1=1738},<init>(Ljava/lang/String;)V{0=5669, 1=1738},<init>(Ljava/lang/String;)V{0=2297, 1=1738},<init>(Ljava/lang/String;)V{0=5177, 1=1738},<init>(Ljava/lang/String;)V{0=5014, 1=1738},<init>(Ljava/lang/String;)V{0=2272, 1=1738},<init>(Ljava/lang/String;)V{0=3224, 1=1738},<init>(Ljava/lang/String;)V{0=5637, 1=1738},<init>(Ljava/lang/String;)V{0=3830, 1=1738},<init>(Ljava/lang/String;)V{0=5343, 1=1738},<init>(Ljava/lang/String;)V{0=3511, 1=1738},<init>(Ljava/lang/String;)V{0=5258, 1=1738},<init>(Ljava/lang/String;)V{0=2659, 1=1738},<init>(Ljava/lang/String;)V{0=5375, 1=1738},<init>(Ljava/lang/String;)V{0=2964, 1=1738},<init>(Ljava/lang/String;)V{0=5393, 1=1738},<init>(Ljava/lang/String;)V{0=2944, 1=1738},<init>(Ljava/lang/String;)V{0=3710, 1=1738},<init>(Ljava/lang/String;)V{0=3964, 1=1738},<init>(Ljava/lang/String;)V{0=4142, 1=1738},<init>(Ljava/lang/String;)V{0=4376, 1=1738},<init>(Ljava/lang/String;)V{0=5752, 1=1738},<init>(Ljava/lang/String;)V{0=4904, 1=1738},<init>(Ljava/lang/String;)V{0=4199, 1=1738},<init>(Ljava/lang/String;)V{0=3002, 1=1738},<init>(Ljava/lang/String;)V{0=3782, 1=1738}"];
	1 -> 1 [label="countTokens()I{0=3129},countTokens()I{0=4358},nextIsSep()Z{0=3616},countTokens()I{0=4825},hasMoreTokens()Z{0=4073},reset()V{0=3599},countTokens()I{0=3726},isLetterOrDigitAhead()Z{0=5432},isLetterOrDigitAhead()Z{0=3885},nextIsSep()Z{0=3511},hasMoreTokens()Z{0=3176},hasMoreTokens()Z{0=2702},hasMoreTokens()Z{0=5531},nextIsSep()Z{0=5669},isLetterOrDigitAhead()Z{0=3095},nextIsSep()Z{0=5960},hasMoreTokens()Z{0=2805},countTokens()I{0=4123},countTokens()I{0=3358},countTokens()I{0=3915},nextIsSep()Z{0=5393},hasMoreTokens()Z{0=3224},hasMoreTokens()Z{0=2637},countTokens()I{0=4396},hasMoreTokens()Z{0=2884},isLetterOrDigitAhead()Z{0=2964},isLetterOrDigitAhead()Z{0=5752},nextIsSep()Z{0=3782},hasMoreTokens()Z{0=2417},nextIsSep()Z{0=4522},isLetterOrDigitAhead()Z{0=4904},nextIsSep()Z{0=4376},countTokens()I{0=5826},isLetterOrDigitAhead()Z{0=3599},reset()V{0=5960},countTokens()I{0=5452},countTokens()I{0=2944},countTokens()I{0=3616},nextIsSep()Z{0=3149},hasMoreTokens()Z{0=3830},isLetterOrDigitAhead()Z{0=5432},countTokens()I{0=2439},nextIsSep()Z{0=3404},countTokens()I{0=5531},reset()V{0=3696},hasMoreTokens()Z{0=5014},hasMoreTokens()Z{0=5892},nextIsSep()Z{0=2902},hasMoreTokens()Z{0=4861},isLetterOrDigitAhead()Z{0=3095},hasMoreTokens()Z{0=4488},isLetterOrDigitAhead()Z{0=5232},isLetterOrDigitAhead()Z{0=3493},hasMoreTokens()Z{0=5866},hasMoreTokens()Z{0=4522},countTokens()I{0=3859},countTokens()I{0=5412},hasMoreTokens()Z{0=3964},nextIsSep()Z{0=5120},nextIsSep()Z{0=5651},nextIsSep()Z{0=4707},nextIsSep()Z{0=4843},nextIsSep()Z{0=2164},hasMoreTokens()Z{0=3710},isLetterOrDigitAhead()Z{0=3599},hasMoreTokens()Z{0=2767},nextIsSep()Z{0=5637},hasMoreTokens()Z{0=5488},hasMoreTokens()Z{0=3583},hasMoreTokens()Z{0=3616},isLetterOrDigitAhead()Z{0=2297},countTokens()I{0=5343},reset()V{0=5258},nextIsSep()Z{0=3830},nextIsSep()Z{0=5960},countTokens()I{0=3149},reset()V{0=3809},nextIsSep()Z{0=5866},nextIsSep()Z{0=5452},nextIsSep()Z{0=2944},isLetterOrDigitAhead()Z{0=2843},isLetterOrDigitAhead()Z{0=4544},countTokens()I{0=3404},countTokens()I{0=5085},isLetterOrDigitAhead()Z{0=3558},nextIsSep()Z{0=3980},nextIsSep()Z{0=4448},nextIsSep()Z{0=5412},hasMoreTokens()Z{0=5319},reset()V{0=3224},countTokens()I{0=4843},countTokens()I{0=4707},hasMoreTokens()Z{0=5085},countTokens()I{0=5651},isLetterOrDigitAhead()Z{0=2097},hasMoreTokens()Z{0=2753},hasMoreTokens()Z{0=4358},countTokens()I{0=4199},nextIsSep()Z{0=4123},countTokens()I{0=4142},hasMoreTokens()Z{0=5933},reset()V{0=2986},isLetterOrDigitAhead()Z{0=5232},isLetterOrDigitAhead()Z{0=2297},hasMoreTokens()Z{0=5844},nextIsSep()Z{0=3284},isLetterOrDigitAhead()Z{0=4544},isLetterOrDigitAhead()Z{0=2843},nextIsSep()Z{0=5258},nextIsSep()Z{0=4594},nextIsSep()Z{0=2659},isLetterOrDigitAhead()Z{0=5393},hasMoreTokens()Z{0=2277},nextIsSep()Z{0=4825},reset()V{0=4889},isLetterOrDigitAhead()Z{0=4617},hasMoreTokens()Z{0=5555},hasMoreTokens()Z{0=3358},countTokens()I{0=2542},nextIsSep()Z{0=4930},hasMoreTokens()Z{0=3679},countTokens()I{0=4522},reset()V{0=5393},hasMoreTokens()Z{0=2164},nextIsSep()Z{0=3303},hasMoreTokens()Z{0=3746},isLetterOrDigitAhead()Z{0=2097},nextIsSep()Z{0=2767},countTokens()I{0=2731},hasMoreTokens()Z{0=5232},nextIsSep()Z{0=4396},hasMoreTokens()Z{0=5468},nextIsSep()Z{0=2582},nextIsSep()Z{0=5412},hasMoreTokens()Z{0=3493},reset()V{0=3964},nextIsSep()Z{0=3575},countTokens()I{0=3859},reset()V{0=2164},hasMoreTokens()Z{0=4448},isLetterOrDigitAhead()Z{0=2753},nextIsSep()Z{0=5637},isLetterOrDigitAhead()Z{0=2277},hasMoreTokens()Z{0=4757},countTokens()I{0=3224},hasMoreTokens()Z{0=5626},isLetterOrDigitAhead()Z{0=5844},nextIsSep()Z{0=2659},countTokens()I{0=2805},isLetterOrDigitAhead()Z{0=3679},nextIsSep()Z{0=5866},nextIsSep()Z{0=2944},hasMoreTokens()Z{0=5885},countTokens()I{0=5452},isLetterOrDigitAhead()Z{0=3358},countTokens()I{0=2439},countTokens()I{0=2902},isLetterOrDigitAhead()Z{0=3964},hasMoreTokens()Z{0=2986},hasMoreTokens()Z{0=2097},nextIsSep()Z{0=5844},reset()V{0=4114},reset()V{0=2317},isLetterOrDigitAhead()Z{0=3746},reset()V{0=5531},isLetterOrDigitAhead()Z{0=3149},hasMoreTokens()Z{0=4522},nextIsSep()Z{0=3303},countTokens()I{0=5393},isLetterOrDigitAhead()Z{0=2753},hasMoreTokens()Z{0=2297},isLetterOrDigitAhead()Z{0=2702},nextIsSep()Z{0=4396},isLetterOrDigitAhead()Z{0=5488},hasMoreTokens()Z{0=2272},nextIsSep()Z{0=2582},hasMoreTokens()Z{0=3224},countTokens()I{0=3224},hasMoreTokens()Z{0=2256},hasMoreTokens()Z{0=2843},hasMoreTokens()Z{0=4544},isLetterOrDigitAhead()Z{0=5844},countTokens()I{0=5826},reset()V{0=3575},isLetterOrDigitAhead()Z{0=2277},nextIsSep()Z{0=4930},hasMoreTokens()Z{0=2682},nextIsSep()Z{0=3782},isLetterOrDigitAhead()Z{0=3358},hasMoreTokens()Z{0=4904},hasMoreTokens()Z{0=3002},nextIsSep()Z{0=2317},countTokens()I{0=3726},nextIsSep()Z{0=2695},countTokens()I{0=3129},countTokens()I{0=2805},isLetterOrDigitAhead()Z{0=3679},hasMoreTokens()Z{0=5752},nextIsSep()Z{0=4825},hasMoreTokens()Z{0=2964},isLetterOrDigitAhead()Z{0=2884},countTokens()I{0=3511},countTokens()I{0=3809},isLetterOrDigitAhead()Z{0=3746},nextIsSep()Z{0=4123},countTokens()I{0=5669},isLetterOrDigitAhead()Z{0=5014},isLetterOrDigitAhead()Z{0=5343},countTokens()I{0=3980},reset()V{0=5375},countTokens()I{0=3782},nextIsSep()Z{0=4522},hasMoreTokens()Z{0=5555},countTokens()I{0=4930},nextIsSep()Z{0=4376},countTokens()I{0=2542},nextIsSep()Z{0=5393},countTokens()I{0=3915},isLetterOrDigitAhead()Z{0=3176},countTokens()I{0=2731},isLetterOrDigitAhead()Z{0=4488},countTokens()I{0=3303},countTokens()I{0=2829},isLetterOrDigitAhead()Z{0=2805},countTokens()I{0=2582},reset()V{0=3127},countTokens()I{0=2767},isLetterOrDigitAhead()Z{0=4358},countTokens()I{0=4142},isLetterOrDigitAhead()Z{0=5468},nextIsSep()Z{0=3511},hasMoreTokens()Z{0=2612},countTokens()I{0=4199},isLetterOrDigitAhead()Z{0=2637},isLetterOrDigitAhead()Z{0=4522},nextIsSep()Z{0=4594},hasMoreTokens()Z{0=4889},countTokens()I{0=3284},hasMoreTokens()Z{0=3809},hasMoreTokens()Z{0=3536},nextIsSep()Z{0=3284},hasMoreTokens()Z{0=4617},countTokens()I{0=4594},reset()V{0=5177},hasMoreTokens()Z{0=5432},nextIsSep()Z{0=3980},hasMoreTokens()Z{0=4013},isLetterOrDigitAhead()Z{0=5014},countTokens()I{0=3980},countTokens()I{0=3095},isLetterOrDigitAhead()Z{0=2805},hasMoreTokens()Z{0=3095},hasMoreTokens()Z{0=3165},nextIsSep()Z{0=2767},isLetterOrDigitAhead()Z{0=3176},countTokens()I{0=4013},nextIsSep()Z{0=5375},hasMoreTokens()Z{0=5232},nextIsSep()Z{0=5120},nextIsSep()Z{0=5651},nextIsSep()Z{0=4707},nextIsSep()Z{0=4843},countTokens()I{0=5555},countTokens()I{0=5343},nextIsSep()Z{0=5177},countTokens()I{0=3809},nextIsSep()Z{0=2902},hasMoreTokens()Z{0=5693},isLetterOrDigitAhead()Z{0=2637},isLetterOrDigitAhead()Z{0=4522},isLetterOrDigitAhead()Z{0=5319},hasMoreTokens()Z{0=3599},countTokens()I{0=5866},nextIsSep()Z{0=3149},hasMoreTokens()Z{0=3558},countTokens()I{0=4594},nextIsSep()Z{0=3404},countTokens()I{0=3284},countTokens()I{0=2986},hasMoreTokens()Z{0=2902},nextIsSep()Z{0=5892},nextIsSep()Z{0=5693},nextIsSep()Z{0=4861},nextIsSep()Z{0=4340},nextIsSep()Z{0=4594},isLetterOrDigitAhead()Z{0=3859},countTokens()I{0=2753},isLetterOrDigitAhead()Z{0=5412},countTokens()I{0=3809},hasMoreTokens()Z{0=2753},countTokens()I{0=2277},countTokens()I{0=4512},hasMoreTokens()Z{0=5258},nextIsSep()Z{0=3558},nextIsSep()Z{0=3830},reset()V{0=4488},countTokens()I{0=5844},isLetterOrDigitAhead()Z{0=5826},isLetterOrDigitAhead()Z{0=3129},reset()V{0=3165},nextIsSep()Z{0=2256},countTokens()I{0=3679},hasMoreTokens()Z{0=2637},nextIsSep()Z{0=4013},isLetterOrDigitAhead()Z{0=5452},hasMoreTokens()Z{0=2542},countTokens()I{0=3358},reset()V{0=5826},reset()V{0=5232},isLetterOrDigitAhead()Z{0=2439},countTokens()I{0=3224},isLetterOrDigitAhead()Z{0=5960},countTokens()I{0=3493},nextIsSep()Z{0=3964},countTokens()I{0=4448},countTokens()I{0=3746},hasMoreTokens()Z{0=3511},isLetterOrDigitAhead()Z{0=3859},isLetterOrDigitAhead()Z{0=5120},nextIsSep()Z{0=2702},countTokens()I{0=2964},hasMoreTokens()Z{0=5343},nextIsSep()Z{0=5531},hasMoreTokens()Z{0=5177},nextIsSep()Z{0=3284},hasMoreTokens()Z{0=5669},nextIsSep()Z{0=4889},countTokens()I{0=4904},countTokens()I{0=3002},countTokens()I{0=3599},nextIsSep()Z{0=3809},isLetterOrDigitAhead()Z{0=5826},reset()V{0=3149},countTokens()I{0=5752},nextIsSep()Z{0=4073},nextIsSep()Z{0=4617},reset()V{0=2612},isLetterOrDigitAhead()Z{0=5452},isLetterOrDigitAhead()Z{0=4825},countTokens()I{0=2256},isLetterOrDigitAhead()Z{0=5488},hasMoreTokens()Z{0=3782},countTokens()I{0=5432},isLetterOrDigitAhead()Z{0=2439},nextIsSep()Z{0=2417},countTokens()I{0=2682},hasMoreTokens()Z{0=5085},isLetterOrDigitAhead()Z{0=3129},hasMoreTokens()Z{0=4376},hasMoreTokens()Z{0=5393},hasMoreTokens()Z{0=5375},nextIsSep()Z{0=5232},countTokens()I{0=3095},nextIsSep()Z{0=3224},hasMoreTokens()Z{0=2829},countTokens()I{0=3224},nextIsSep()Z{0=3165},nextIsSep()Z{0=3980},nextIsSep()Z{0=2884},hasMoreTokens()Z{0=3284},countTokens()I{0=3809},countTokens()I{0=5014},nextIsSep()Z{0=4904},isLetterOrDigitAhead()Z{0=4448},nextIsSep()Z{0=3002},countTokens()I{0=4889},hasMoreTokens()Z{0=4594},countTokens()I{0=4617},reset()V{0=4488},nextIsSep()Z{0=5752},isLetterOrDigitAhead()Z{0=5637},countTokens()I{0=3536},nextIsSep()Z{0=4358},nextIsSep()Z{0=2964},reset()V{0=3830},isLetterOrDigitAhead()Z{0=2731},countTokens()I{0=4488},isLetterOrDigitAhead()Z{0=2829},nextIsSep()Z{0=5933},countTokens()I{0=3284},countTokens()I{0=2097},isLetterOrDigitAhead()Z{0=4142},nextIsSep()Z{0=2164},hasMoreTokens()Z{0=3303},nextIsSep()Z{0=3980},hasMoreTokens()Z{0=2767},countTokens()I{0=3980},nextIsSep()Z{0=5468},isLetterOrDigitAhead()Z{0=4199},hasMoreTokens()Z{0=2582},nextIsSep()Z{0=5555},nextIsSep()Z{0=2256},reset()V{0=2272},nextIsSep()Z{0=4757},countTokens()I{0=5555},hasMoreTokens()Z{0=4930},countTokens()I{0=3558},hasMoreTokens()Z{0=2695},hasMoreTokens()Z{0=3726},hasMoreTokens()Z{0=5866},isLetterOrDigitAhead()Z{0=5637},countTokens()I{0=3536},nextIsSep()Z{0=5885},nextIsSep()Z{0=3809},reset()V{0=4861},hasMoreTokens()Z{0=2317},hasMoreTokens()Z{0=4114},countTokens()I{0=2805},nextIsSep()Z{0=5488},nextIsSep()Z{0=3583},countTokens()I{0=5693},reset()V{0=4512},nextIsSep()Z{0=2986},nextIsSep()Z{0=3616},countTokens()I{0=3176},nextIsSep()Z{0=3284},isLetterOrDigitAhead()Z{0=2731},countTokens()I{0=4594},isLetterOrDigitAhead()Z{0=2829},hasMoreTokens()Z{0=5960},nextIsSep()Z{0=5319},reset()V{0=4757},nextIsSep()Z{0=3493},isLetterOrDigitAhead()Z{0=4064},isLetterOrDigitAhead()Z{0=4199},countTokens()I{0=2637},isLetterOrDigitAhead()Z{0=4142},reset()V{0=5626},nextIsSep()Z{0=5085},countTokens()I{0=2297},nextIsSep()Z{0=4448},hasMoreTokens()Z{0=3915},countTokens()I{0=2843},countTokens()I{0=4544},countTokens()I{0=4013},countTokens()I{0=5555},countTokens()I{0=2256},isLetterOrDigitAhead()Z{0=2695},hasMoreTokens()Z{0=3980},nextIsSep()Z{0=2256},isLetterOrDigitAhead()Z{0=3726},countTokens()I{0=5432},nextIsSep()Z{0=2682},countTokens()I{0=2417},nextIsSep()Z{0=2164},countTokens()I{0=2884},hasMoreTokens()Z{0=5393},isLetterOrDigitAhead()Z{0=3511},hasMoreTokens()Z{0=4396},countTokens()I{0=3095},nextIsSep()Z{0=5468},nextIsSep()Z{0=3224},countTokens()I{0=2702},nextIsSep()Z{0=4358},nextIsSep()Z{0=2964},reset()V{0=3536},reset()V{0=5885},hasMoreTokens()Z{0=4123},countTokens()I{0=4861},countTokens()I{0=5531},nextIsSep()Z{0=3002},isLetterOrDigitAhead()Z{0=4448},countTokens()I{0=5343},nextIsSep()Z{0=4904},reset()V{0=5866},isLetterOrDigitAhead()Z{0=3224},countTokens()I{0=4073},nextIsSep()Z{0=4512},nextIsSep()Z{0=5752},hasMoreTokens()Z{0=4825},countTokens()I{0=3599},reset()V{0=2272},hasMoreTokens()Z{0=5637},countTokens()I{0=3358},isLetterOrDigitAhead()Z{0=3726},countTokens()I{0=3679},hasMoreTokens()Z{0=5412},nextIsSep()Z{0=5319},nextIsSep()Z{0=3493},countTokens()I{0=3746},hasMoreTokens()Z{0=3575},isLetterOrDigitAhead()Z{0=4889},hasMoreTokens()Z{0=2829},hasMoreTokens()Z{0=2731},isLetterOrDigitAhead()Z{0=2902},nextIsSep()Z{0=4448},hasMoreTokens()Z{0=3915},countTokens()I{0=3964},nextIsSep()Z{0=5488},reset()V{0=4512},countTokens()I{0=4861},hasMoreTokens()Z{0=4199},nextIsSep()Z{0=3583},countTokens()I{0=5892},isLetterOrDigitAhead()Z{0=5375},nextIsSep()Z{0=3616},nextIsSep()Z{0=2986},countTokens()I{0=2753},nextIsSep()Z{0=5531},hasMoreTokens()Z{0=4142},countTokens()I{0=3830},hasMoreTokens()Z{0=2659},countTokens()I{0=5844},hasMoreTokens()Z{0=2944},nextIsSep()Z{0=5885},countTokens()I{0=2277},isLetterOrDigitAhead()Z{0=4448},hasMoreTokens()Z{0=5258},reset()V{0=4544},reset()V{0=3710},isLetterOrDigitAhead()Z{0=3599},countTokens()I{0=2297},countTokens()I{0=3964},countTokens()I{0=5319},isLetterOrDigitAhead()Z{0=5343},nextIsSep()Z{0=3964},hasMoreTokens()Z{0=5651},hasMoreTokens()Z{0=5120},hasMoreTokens()Z{0=4707},countTokens()I{0=5085},countTokens()I{0=2637},hasMoreTokens()Z{0=4843},hasMoreTokens()Z{0=4448},nextIsSep()Z{0=4013},reset()V{0=4522},hasMoreTokens()Z{0=5826},countTokens()I{0=2843},countTokens()I{0=4544},isLetterOrDigitAhead()Z{0=4594},isLetterOrDigitAhead()Z{0=4376},hasMoreTokens()Z{0=3149},nextIsSep()Z{0=3830},hasMoreTokens()Z{0=3129},nextIsSep()Z{0=3558},hasMoreTokens()Z{0=3404},isLetterOrDigitAhead()Z{0=3782},isLetterOrDigitAhead()Z{0=2542},countTokens()I{0=3616},countTokens()I{0=3176},nextIsSep()Z{0=5892},countTokens()I{0=5933},countTokens()I{0=3583},nextIsSep()Z{0=5693},hasMoreTokens()Z{0=5960},countTokens()I{0=2805},hasMoreTokens()Z{0=3696},countTokens()I{0=5531},isLetterOrDigitAhead()Z{0=5343},hasMoreTokens()Z{0=3859},countTokens()I{0=2164},nextIsSep()Z{0=5085},countTokens()I{0=5468},nextIsSep()Z{0=2884},nextIsSep()Z{0=2417},hasMoreTokens()Z{0=4522},nextIsSep()Z{0=5555},nextIsSep()Z{0=3710},hasMoreTokens()Z{0=2439},countTokens()I{0=3830},isLetterOrDigitAhead()Z{0=3782},nextIsSep()Z{0=4889},reset()V{0=4340},nextIsSep()Z{0=3809},isLetterOrDigitAhead()Z{0=2542},hasMoreTokens()Z{0=5452},countTokens()I{0=5014},hasMoreTokens()Z{0=3284},nextIsSep()Z{0=3536},nextIsSep()Z{0=4073},isLetterOrDigitAhead()Z{0=3980},nextIsSep()Z{0=4617},isLetterOrDigitAhead()Z{0=3095},isLetterOrDigitAhead()Z{0=2582},nextIsSep()Z{0=5933},countTokens()I{0=4358},countTokens()I{0=2097},nextIsSep()Z{0=2702},nextIsSep()Z{0=5531},countTokens()I{0=4488},isLetterOrDigitAhead()Z{0=4544},countTokens()I{0=5933},isLetterOrDigitAhead()Z{0=3303}"];
	1 -> 2 [label="nextToken()Ljava/lang/String;{0=4522},nextToken()Ljava/lang/String;{0=3964},nextToken()Ljava/lang/String;{0=5826},nextToken()Ljava/lang/String;{0=4004},nextToken()Ljava/lang/String;{0=3980},nextToken()Ljava/lang/String;{0=4056},nextToken()Ljava/lang/String;{0=5393},nextToken()Ljava/lang/String;{0=4757},nextToken()Ljava/lang/String;{0=4013},nextToken()Ljava/lang/String;{0=5866},nextToken()Ljava/lang/String;{0=5319},nextToken()Ljava/lang/String;{0=3830},nextToken()Ljava/lang/String;{0=2164},nextToken()Ljava/lang/String;{0=3536},nextToken()Ljava/lang/String;{0=4617},nextToken()Ljava/lang/String;{0=3303},nextToken()Ljava/lang/String;{0=4594},nextToken()Ljava/lang/String;{0=3129},nextToken()Ljava/lang/String;{0=5866},nextToken()Ljava/lang/String;{0=4544},nextToken()Ljava/lang/String;{0=2582},nextToken()Ljava/lang/String;{0=5693},nextToken()Ljava/lang/String;{0=3095},nextToken()Ljava/lang/String;{0=5844},nextToken()Ljava/lang/String;{0=3771},nextToken()Ljava/lang/String;{0=5669},nextToken()Ljava/lang/String;{0=5177},nextToken()Ljava/lang/String;{0=2277},nextToken()Ljava/lang/String;{0=5651},nextToken()Ljava/lang/String;{0=5120},nextToken()Ljava/lang/String;{0=3859},nextToken()Ljava/lang/String;{0=3726},nextToken()Ljava/lang/String;{0=5432},nextToken()Ljava/lang/String;{0=4358},nextToken()Ljava/lang/String;{0=3575},nextToken()Ljava/lang/String;{0=4843},nextToken()Ljava/lang/String;{0=4707},nextToken()Ljava/lang/String;{0=5626},nextToken()Ljava/lang/String;{0=5933},nextToken()Ljava/lang/String;{0=4340},nextToken()Ljava/lang/String;{0=3583},nextToken()Ljava/lang/String;{0=5488},nextToken()Ljava/lang/String;{0=5375},nextToken()Ljava/lang/String;{0=2682},nextToken()Ljava/lang/String;{0=3616},nextToken()Ljava/lang/String;{0=3746},nextToken()Ljava/lang/String;{0=3599},nextToken()Ljava/lang/String;{0=3558},nextToken()Ljava/lang/String;{0=4930},nextToken()Ljava/lang/String;{0=4889},nextToken()Ljava/lang/String;{0=5468},nextToken()Ljava/lang/String;{0=5375},nextToken()Ljava/lang/String;{0=2439},nextToken()Ljava/lang/String;{0=4879},nextToken()Ljava/lang/String;{0=3404},nextToken()Ljava/lang/String;{0=3885},nextToken()Ljava/lang/String;{0=3710},nextToken()Ljava/lang/String;{0=3358},nextToken()Ljava/lang/String;{0=2256},nextToken()Ljava/lang/String;{0=3679},nextToken()Ljava/lang/String;{0=3149},nextToken()Ljava/lang/String;{0=5258},nextToken()Ljava/lang/String;{0=3176},nextToken()Ljava/lang/String;{0=2702},nextToken()Ljava/lang/String;{0=4114},nextToken()Ljava/lang/String;{0=5892},nextToken()Ljava/lang/String;{0=2805},nextToken()Ljava/lang/String;{0=3493},nextToken()Ljava/lang/String;{0=2902},nextToken()Ljava/lang/String;{0=5531},nextToken()Ljava/lang/String;{0=4396},nextToken()Ljava/lang/String;{0=2767},nextToken()Ljava/lang/String;{0=2097},nextToken()Ljava/lang/String;{0=4825},nextToken()Ljava/lang/String;{0=2944},nextToken()Ljava/lang/String;{0=4376},nextToken()Ljava/lang/String;{0=5085},nextToken()Ljava/lang/String;{0=3002},nextToken()Ljava/lang/String;{0=2637},nextToken()Ljava/lang/String;{0=2542},nextToken()Ljava/lang/String;{0=2884},nextToken()Ljava/lang/String;{0=4396},nextToken()Ljava/lang/String;{0=5412},nextToken()Ljava/lang/String;{0=2843},nextToken()Ljava/lang/String;{0=4861},nextToken()Ljava/lang/String;{0=2767},nextToken()Ljava/lang/String;{0=2829},nextToken()Ljava/lang/String;{0=5452},nextToken()Ljava/lang/String;{0=2731},nextToken()Ljava/lang/String;{0=2317},nextToken()Ljava/lang/String;{0=4073},nextToken()Ljava/lang/String;{0=5637},nextToken()Ljava/lang/String;{0=4448},nextToken()Ljava/lang/String;{0=5343},nextToken()Ljava/lang/String;{0=3511},nextToken()Ljava/lang/String;{0=3165},nextToken()Ljava/lang/String;{0=5669},nextToken()Ljava/lang/String;{0=2297},nextToken()Ljava/lang/String;{0=5014},nextToken()Ljava/lang/String;{0=5343},nextToken()Ljava/lang/String;{0=2612},nextToken()Ljava/lang/String;{0=2964},nextToken()Ljava/lang/String;{0=2417},nextToken()Ljava/lang/String;{0=5555},nextToken()Ljava/lang/String;{0=2986},nextToken()Ljava/lang/String;{0=4199},nextToken()Ljava/lang/String;{0=3696},nextToken()Ljava/lang/String;{0=4904},nextToken()Ljava/lang/String;{0=5232},nextToken()Ljava/lang/String;{0=4004},nextToken()Ljava/lang/String;{0=4123},nextToken()Ljava/lang/String;{0=4142},nextToken()Ljava/lang/String;{0=5752}"];
	2 -> 2 [label="nextIsSep()Z{0=5933},nextToken()Ljava/lang/String;{0=3746},isLetterOrDigitAhead()Z{0=2582},hasMoreTokens()Z{0=5343},countTokens()I{0=3726},isLetterOrDigitAhead()Z{0=3679},nextIsSep()Z{0=3726},nextIsSep()Z{0=5892},hasMoreTokens()Z{0=3002},hasMoreTokens()Z{0=5014},countTokens()I{0=2612},isLetterOrDigitAhead()Z{0=3303},nextToken()Ljava/lang/String;{0=3165},nextToken()Ljava/lang/String;{0=2417},countTokens()I{0=5343},nextIsSep()Z{0=5177},nextToken()Ljava/lang/String;{0=2582},nextIsSep()Z{0=2277},nextToken()Ljava/lang/String;{0=5120},isLetterOrDigitAhead()Z{0=5468},countTokens()I{0=5014},isLetterOrDigitAhead()Z{0=5319},hasMoreTokens()Z{0=2944},countTokens()I{0=5669},nextIsSep()Z{0=3511},hasMoreTokens()Z{0=2317},isLetterOrDigitAhead()Z{0=2986},nextIsSep()Z{0=3303},isLetterOrDigitAhead()Z{0=5892},nextIsSep()Z{0=3358},nextToken()Ljava/lang/String;{0=5014},hasMoreTokens()Z{0=3859},nextIsSep()Z{0=5319},countTokens()I{0=2884},countTokens()I{0=2637},nextIsSep()Z{0=4376},countTokens()I{0=2542},hasMoreTokens()Z{0=4757},isLetterOrDigitAhead()Z{0=3696},hasMoreTokens()Z{0=4123},hasMoreTokens()Z{0=2277},nextIsSep()Z{0=5933},countTokens()I{0=2805},nextIsSep()Z{0=5844},nextIsSep()Z{0=3511},@nextToken()Ljava/lang/String;{0=2417},nextIsSep()Z{0=4004},hasMoreTokens()Z{0=3726},hasMoreTokens()Z{0=4056},hasMoreTokens()Z{0=2805},nextToken()Ljava/lang/String;{0=5752},countTokens()I{0=3303},hasMoreTokens()Z{0=4448},isLetterOrDigitAhead()Z{0=4358},nextIsSep()Z{0=3746},hasMoreTokens()Z{0=4396},countTokens()I{0=4376},countTokens()I{0=5319},@nextIsSep()Z{0=4930},nextToken()Ljava/lang/String;{0=4594},isLetterOrDigitAhead()Z{0=3830},countTokens()I{0=2637},countTokens()I{0=2542},nextToken()Ljava/lang/String;{0=4861},nextIsSep()Z{0=2902},isLetterOrDigitAhead()Z{0=2884},@nextToken()Ljava/lang/String;{0=3859},nextToken()Ljava/lang/String;{0=2682},countTokens()I{0=5844},nextToken()Ljava/lang/String;{0=4757},countTokens()I{0=5752},hasMoreTokens()Z{0=5693},hasMoreTokens()Z{0=4199},hasMoreTokens()Z{0=4904},hasMoreTokens()Z{0=5844},countTokens()I{0=5531},nextIsSep()Z{0=3176},isLetterOrDigitAhead()Z{0=5626},nextIsSep()Z{0=2805},isLetterOrDigitAhead()Z{0=5651},hasMoreTokens()Z{0=2277},isLetterOrDigitAhead()Z{0=3511},countTokens()I{0=3746},isLetterOrDigitAhead()Z{0=4199},countTokens()I{0=5468},isLetterOrDigitAhead()Z{0=2902},hasMoreTokens()Z{0=3746},countTokens()I{0=2582},hasMoreTokens()Z{0=4522},isLetterOrDigitAhead()Z{0=3149},hasMoreTokens()Z{0=5319},hasMoreTokens()Z{0=4376},hasMoreTokens()Z{0=3404},isLetterOrDigitAhead()Z{0=5468},nextIsSep()Z{0=5343},hasMoreTokens()Z{0=2702},countTokens()I{0=2902},nextToken()Ljava/lang/String;{0=5626},nextToken()Ljava/lang/String;{0=5393},isLetterOrDigitAhead()Z{0=4013},nextIsSep()Z{0=5892},countTokens()I{0=2612},countTokens()I{0=3583},hasMoreTokens()Z{0=5752},isLetterOrDigitAhead()Z{0=3710},nextIsSep()Z{0=4879},nextIsSep()Z{0=3176},isLetterOrDigitAhead()Z{0=5177},hasMoreTokens()Z{0=4707},hasMoreTokens()Z{0=4843},isLetterOrDigitAhead()Z{0=3511},nextIsSep()Z{0=3771},nextToken()Ljava/lang/String;{0=2902},isLetterOrDigitAhead()Z{0=5892},nextToken()Ljava/lang/String;{0=4123},hasMoreTokens()Z{0=5826},countTokens()I{0=2843},hasMoreTokens()Z{0=4376},countTokens()I{0=2731},nextIsSep()Z{0=5651},nextIsSep()Z{0=5432},nextToken()Ljava/lang/String;{0=2439},isLetterOrDigitAhead()Z{0=4617},hasMoreTokens()Z{0=5412},isLetterOrDigitAhead()Z{0=4142},hasMoreTokens()Z{0=2731},hasMoreTokens()Z{0=4199},countTokens()I{0=2317},isLetterOrDigitAhead()Z{0=4843},countTokens()I{0=3404},nextToken()Ljava/lang/String;{0=3493},nextIsSep()Z{0=2964},nextToken()Ljava/lang/String;{0=4930},nextToken()Ljava/lang/String;{0=4396},nextToken()Ljava/lang/String;{0=3859},nextIsSep()Z{0=5752},nextToken()Ljava/lang/String;{0=2843},countTokens()I{0=4199},nextIsSep()Z{0=4904},countTokens()I{0=4142},hasMoreTokens()Z{0=5892},hasMoreTokens()Z{0=3129},nextIsSep()Z{0=4617},nextIsSep()Z{0=3859},countTokens()I{0=2731},nextToken()Ljava/lang/String;{0=3002},nextToken()Ljava/lang/String;{0=3511},nextToken()Ljava/lang/String;{0=4617},hasMoreTokens()Z{0=2417},nextIsSep()Z{0=5826},hasMoreTokens()Z{0=3710},hasMoreTokens()Z{0=5651},hasMoreTokens()Z{0=5432},nextToken()Ljava/lang/String;{0=2944},@nextIsSep()Z{0=4594},@nextToken()Ljava/lang/String;{0=3493},hasMoreTokens()Z{0=4073},nextIsSep()Z{0=2439},isLetterOrDigitAhead()Z{0=4707},hasMoreTokens()Z{0=5177},isLetterOrDigitAhead()Z{0=4843},countTokens()I{0=4340},countTokens()I{0=5531},nextIsSep()Z{0=3129},hasMoreTokens()Z{0=4879},countTokens()I{0=4142},isLetterOrDigitAhead()Z{0=2297},hasMoreTokens()Z{0=2097},nextIsSep()Z{0=5752},hasMoreTokens()Z{0=3859},isLetterOrDigitAhead()Z{0=4617},nextIsSep()Z{0=2297},hasMoreTokens()Z{0=5432},nextToken()Ljava/lang/String;{0=5693},isLetterOrDigitAhead()Z{0=4904},countTokens()I{0=3746},isLetterOrDigitAhead()Z{0=5752},countTokens()I{0=3980},isLetterOrDigitAhead()Z{0=4825},nextToken()Ljava/lang/String;{0=4904},nextToken()Ljava/lang/String;{0=4199},isLetterOrDigitAhead()Z{0=2964},countTokens()I{0=3859},isLetterOrDigitAhead()Z{0=5892},hasMoreTokens()Z{0=2164},isLetterOrDigitAhead()Z{0=3129},countTokens()I{0=3710},hasMoreTokens()Z{0=5892},hasMoreTokens()Z{0=2097},hasMoreTokens()Z{0=2439},nextToken()Ljava/lang/String;{0=4707},countTokens()I{0=5177},countTokens()I{0=4142},hasMoreTokens()Z{0=5866},countTokens()I{0=5693},isLetterOrDigitAhead()Z{0=5412},countTokens()I{0=2439},isLetterOrDigitAhead()Z{0=5555},isLetterOrDigitAhead()Z{0=4757},nextIsSep()Z{0=4056},nextIsSep()Z{0=4825},countTokens()I{0=4879},@nextIsSep()Z{0=5693},isLetterOrDigitAhead()Z{0=5752},countTokens()I{0=3771},countTokens()I{0=5319},countTokens()I{0=5232},nextToken()Ljava/lang/String;{0=3404},nextToken()Ljava/lang/String;{0=2097},nextIsSep()Z{0=2297},isLetterOrDigitAhead()Z{0=4123},isLetterOrDigitAhead()Z{0=4904},hasMoreTokens()Z{0=4707},nextToken()Ljava/lang/String;{0=4114},countTokens()I{0=2731},nextIsSep()Z{0=3885},isLetterOrDigitAhead()Z{0=5531},isLetterOrDigitAhead()Z{0=2964},nextToken()Ljava/lang/String;{0=3558},@nextIsSep()Z{0=3002},nextIsSep()Z{0=4199},@nextIsSep()Z{0=3511},hasMoreTokens()Z{0=5488},nextToken()Ljava/lang/String;{0=4396},hasMoreTokens()Z{0=3583},hasMoreTokens()Z{0=3404},hasMoreTokens()Z{0=2317},hasMoreTokens()Z{0=3616},@nextToken()Ljava/lang/String;{0=2843},nextIsSep()Z{0=2097},nextToken()Ljava/lang/String;{0=3771},countTokens()I{0=3404},isLetterOrDigitAhead()Z{0=5412},nextIsSep()Z{0=2986},countTokens()I{0=2964}"];
	2 -> 1 [label="reset()V{0=3358},reset()V{0=4825},reset()V{0=4004},reset()V{0=3885},reset()V{0=3149},reset()V{0=5892},reset()V{0=2884},reset()V{0=2944},reset()V{0=2986},reset()V{0=3536},reset()V{0=5669},reset()V{0=3599},reset()V{0=2637},reset()V{0=4123},reset()V{0=3303},reset()V{0=2164},reset()V{0=5258},reset()V{0=4448},reset()V{0=5826},reset()V{0=5844},reset()V{0=4358},reset()V{0=3696},reset()V{0=5085},reset()V{0=4889},reset()V{0=3583},reset()V{0=5866},reset()V{0=3616},reset()V{0=4013},reset()V{0=2805},reset()V{0=5375},reset()V{0=2439},reset()V{0=5488},reset()V{0=5343},reset()V{0=5432},reset()V{0=2767},reset()V{0=4522},reset()V{0=3095},reset()V{0=4396}"];
	0 -> 3 [label="<init>(Ljava/lang/String;)V{0=3427, 1=109},<init>(Ljava/lang/String;)V{0=1834, 1=109},<init>(Ljava/lang/String;)V{0=1958, 1=109},<init>(Ljava/lang/String;)V{0=3075, 1=109},<init>(Ljava/lang/String;)V{0=2186, 1=109},<init>(Ljava/lang/String;)V{0=1848, 1=109},<init>(Ljava/lang/String;)V{0=5591, 1=109},<init>(Ljava/lang/String;)V{0=2784, 1=109},<init>(Ljava/lang/String;)V{0=1959, 1=109}"];
	3 -> 3 [label="@nextToken()Ljava/lang/String;{0=1834},reset()V{0=2186},isLetterOrDigitAhead()Z{0=1848},reset()V{0=5591},isLetterOrDigitAhead()Z{0=2186},hasMoreTokens()Z{0=2784},@nextIsSep()Z{0=1848},@nextIsSep()Z{0=1959},countTokens()I{0=3075},isLetterOrDigitAhead()Z{0=5591},reset()V{0=3427},hasMoreTokens()Z{0=5591},reset()V{0=1958},@nextIsSep()Z{0=1958},@nextToken()Ljava/lang/String;{0=3427},isLetterOrDigitAhead()Z{0=2784}"];
	0 [label=""];
	1 [label="currentPosition: 0,maxPosition: 1,str: 1"];
	2 [label="currentPosition: 1,maxPosition: 1,str: 1"];
	3 [label="currentPosition: 0,maxPosition: 0,str: 1"];
}

[INFO ] 2019-09-24 15:53:15,953: Merged typestates: 
[INFO ] 2019-09-24 15:53:15,953: <graph id="tutorial/NumberFormatStringTokenizer" edgedefault="directed">
	<key id="key1" for="edge" attr.name="methodidentifiers" attr.type="string"/>
	<node id="node_2"/>
	<node id="node_1"/>
	<node id="node_0"/>
	<node id="start"/>
	<node id="ex"/>
	<edge id="e0" source="start" target="node_0">
		<data key="key1">tutorial/NumberFormatStringTokenizer.[init](Ljava/lang/String;)V#1</data>
	</edge>
	<edge id="e1" source="node_0" target="node_0">
		<data key="key1">tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1|tutorial/NumberFormatStringTokenizer.reset()V#1|tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1|tutorial/NumberFormatStringTokenizer.countTokens()I#1|tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1</data>
	</edge>
	<edge id="e2" source="node_0" target="node_1">
		<data key="key1">tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1</data>
	</edge>
	<edge id="e3" source="node_1" target="node_1">
		<data key="key1">tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1|tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1|tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1|tutorial/NumberFormatStringTokenizer.countTokens()I#1|tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1</data>
	</edge>
	<edge id="e4" source="node_1" target="node_0">
		<data key="key1">tutorial/NumberFormatStringTokenizer.reset()V#1</data>
	</edge>
	<edge id="e5" source="start" target="node_2">
		<data key="key1">tutorial/NumberFormatStringTokenizer.[init](Ljava/lang/String;)V#1</data>
	</edge>
	<edge id="e6" source="node_2" target="node_2">
		<data key="key1">tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1|tutorial/NumberFormatStringTokenizer.reset()V#1|tutorial/NumberFormatStringTokenizer.countTokens()I#1|tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1</data>
	</edge>
	<edge id="e7" source="node_2" target="ex">
		<data key="key1">tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1|tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1</data>
	</edge>
</graph>

[INFO ] 2019-09-24 15:53:16,090: Merged typestates: 
[INFO ] 2019-09-24 15:53:16,090: <graph id="tutorial/NumberFormatStringTokenizer" edgedefault="directed">
	<key id="key1" for="edge" attr.name="methodidentifiers" attr.type="string"/>
	<node id="node_2"/>
	<node id="node_1"/>
	<node id="node_0"/>
	<node id="start"/>
	<node id="ex"/>
	<edge id="e0" source="start" target="node_0">
		<data key="key1">tutorial/NumberFormatStringTokenizer.[init](Ljava/lang/String;)V#1</data>
	</edge>
	<edge id="e1" source="node_0" target="node_0">
		<data key="key1">tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1|tutorial/NumberFormatStringTokenizer.reset()V#1|tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1|tutorial/NumberFormatStringTokenizer.countTokens()I#1|tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1</data>
	</edge>
	<edge id="e2" source="node_0" target="node_1">
		<data key="key1">tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1</data>
	</edge>
	<edge id="e3" source="node_1" target="node_1">
		<data key="key1">tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1|tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1|tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1|tutorial/NumberFormatStringTokenizer.countTokens()I#1|tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1</data>
	</edge>
	<edge id="e4" source="node_1" target="node_0">
		<data key="key1">tutorial/NumberFormatStringTokenizer.reset()V#1</data>
	</edge>
	<edge id="e5" source="start" target="node_2">
		<data key="key1">tutorial/NumberFormatStringTokenizer.[init](Ljava/lang/String;)V#1</data>
	</edge>
	<edge id="e6" source="node_2" target="node_2">
		<data key="key1">tutorial/NumberFormatStringTokenizer.isLetterOrDigitAhead()Z#1|tutorial/NumberFormatStringTokenizer.reset()V#1|tutorial/NumberFormatStringTokenizer.countTokens()I#1|tutorial/NumberFormatStringTokenizer.hasMoreTokens()Z#1</data>
	</edge>
	<edge id="e7" source="node_2" target="ex">
		<data key="key1">tutorial/NumberFormatStringTokenizer.nextIsSep()Z#1|tutorial/NumberFormatStringTokenizer.nextToken()Ljava/lang/String;#1</data>
	</edge>
</graph>

